<?xml version="1.0" encoding="utf-8"?>
<Root>
  <DesignerItems>
    <DesignerItem>
      <Left>710</Left>
      <Top>535</Top>
      <Width>70</Width>
      <Height>70</Height>
      <ID>a49d986b-3034-4b63-bd72-11a826c70871</ID>
      <zIndex>0</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Старт" InternalName="Start" FriendlyName="С блока Старт начинается работа диаграммы. В диаграмме может быть только один такой блок." Width="70" Height="70" PathToImage="ExternalToolboxes\Image\ico_Process Start.png" PathToToolboxImage="ExternalToolboxes\Image\icotb_Process Start.png" ImageType="OnlyImage" NoDelete="False" Invisible="False" Proportional="True" Version="10" Code="&amp;#xA;function Start{{{block_id}}}&amp;#xA;{                  &amp;#xA;    try&amp;#xA;    {&amp;#xA;    $currentblockid = &amp;quot;{{{block_native_id}}}&amp;quot;;   &amp;#xA;    &amp;#xA;        $Value        = {{{Value}}};&amp;#xA;        $SendOrkest   = ${{{SendOrkest}}};&amp;#xA;        $IsScreenshot = ${{{IsScreenshot}}};&amp;#xA;        &amp;#xA;        $ValueStr = VarToString($Value); &amp;#xA;             &amp;#xA;        $val = _shield $ValueStr;&amp;#xA;        if($SendOrkest -or $IsScreenshot)&amp;#xA;        {                      &amp;#xA;            if($val.Length -eq 0)&amp;#xA;            {&amp;#xA;                $val = &amp;quot;Screenshot &amp;quot;+[DateTime]::Now.ToString();&amp;#xA;            }&amp;#xA;            Write-Host(&amp;quot;&amp;lt;block&amp;gt;&amp;lt;ID&amp;gt;{{{block_native_id}}}&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;SendLogOrkest&amp;lt;/InternalName&amp;gt;&amp;lt;UITextValue&amp;gt;$val&amp;lt;/UITextValue&amp;gt;&amp;lt;UITextType&amp;gt;Info&amp;lt;/UITextType&amp;gt;&amp;lt;IsScreenshot&amp;gt;{{{IsScreenshot}}}&amp;lt;/IsScreenshot&amp;gt;&amp;lt;/block&amp;gt;&amp;quot;); &amp;#xA;        }&amp;#xA;        if($val.Length -gt 0)&amp;#xA;        {&amp;#xA;            $xmlvar = &amp;quot;&amp;quot;;&amp;#xA;            try&amp;#xA;            {&amp;#xA;                $xmlvar = $script:__BinFormatter.vartoxmlraw($Value);&amp;#xA;            }&amp;#xA;            catch{} &amp;#xA;            Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;{{{block_native_id}}}&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;Log&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$val&amp;lt;/InternalValue&amp;gt;$xmlvar&amp;lt;/info&amp;gt;&amp;quot;);&amp;#xA;        }&amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;    }&amp;#xA;    &amp;#xA;    try&amp;#xA;    {&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable1}}} = {{{Expression1}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable1: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable2}}} = {{{Expression2}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable2: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable3}}} = {{{Expression3}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable3: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable4}}} = {{{Expression4}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable4: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable5}}} = {{{Expression5}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable5: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression6}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression6: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression7}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression7: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression8}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression8: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression9}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression9: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression10}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression10: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        &amp;#xA;    }&amp;#xA;    catch {}&amp;#xA;    &amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;    &amp;#xA;    $script:__NextBlockID = &amp;quot;{{{connector-Next}}}&amp;quot;;&amp;#xA;}                   &amp;#xA;                " TextColor="#FF000000" ProtoName="" Language="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M75,50C75,63.8071187457698 63.8071187457698,75 50,75 36.1928812542302,75 25,63.8071187457698 25,50 25,36.1928812542302 36.1928812542302,25 50,25 63.8071187457698,25 75,36.1928812542302 75,50z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M75,50C75,63.8071187457698 63.8071187457698,75 50,75 36.1928812542302,75 25,63.8071187457698 25,50 25,36.1928812542302 36.1928812542302,25 50,25 63.8071187457698,25 75,36.1928812542302 75,50z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="32"&gt;&lt;Property Name="Value" Tooltip="[Любой тип данных] Числовая, текстовая константа (в кавычках), имя переменной (начинающееся с $) или любое выражение, значение которого будет выведено в лог в процессе работы сценария робота. Значение может в том числе иметь сложный тип данных, например Список, Таблица или Словарь." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="{x:Null}" EnumVariants="{x:Null}" Caption="Записать в лог" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable1" Tooltip="[Переменная] Имя первой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="{x:Null}" EnumVariants="{x:Null}" Caption="Переменная 1" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression1" Tooltip="[Любой тип данных] Новое значение первой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="{x:Null}" EnumVariants="{x:Null}" Caption="Значение 1" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable2" Tooltip="[Переменная] Имя второй переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="{x:Null}" EnumVariants="{x:Null}" Caption="Переменная 2" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression2" Tooltip="[Любой тип данных] Новое значение второй переменной. Свойство игнорируется, если не задано имя второй переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="{x:Null}" EnumVariants="{x:Null}" Caption="Значение 2" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable3" Tooltip="[Переменная] Имя третьей переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="{x:Null}" EnumVariants="{x:Null}" Caption="Переменная 3" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression3" Tooltip="[Любой тип данных] Новое значение третьей переменной. Свойство игнорируется, если не задано имя третьей переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="{x:Null}" EnumVariants="{x:Null}" Caption="Значение 3" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable4" Tooltip="[Переменная] Имя четвертой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="{x:Null}" EnumVariants="{x:Null}" Caption="Переменная 4" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression4" Tooltip="[Любой тип данных] Новое значение четвертой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="{x:Null}" EnumVariants="{x:Null}" Caption="Значение 4" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable5" Tooltip="[Переменная] Имя пятой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="{x:Null}" EnumVariants="{x:Null}" Caption="Переменная 5" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression5" Tooltip="[Любой тип данных] Новое значение пятой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="{x:Null}" EnumVariants="{x:Null}" Caption="Значение 5" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression6" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="{x:Null}" EnumVariants="{x:Null}" Caption="Выражение 1" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression7" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="{x:Null}" EnumVariants="{x:Null}" Caption="Выражение 2" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression8" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="{x:Null}" EnumVariants="{x:Null}" Caption="Выражение 3" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression9" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="{x:Null}" EnumVariants="{x:Null}" Caption="Выражение 4" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression10" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="{x:Null}" EnumVariants="{x:Null}" Caption="Выражение 5" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="SendOrkest" Tooltip="Если выбрано, то текст будет также логироваться в оркестратор, если подключение к нему активно" CatalogName="Main properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="{x:Null}" EnumVariants="" Caption="Логировать в оркестратор" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="IsScreenshot" Tooltip="Если выбрано, то будет создан скриншот экрана и отправлен в оркестратор, если подключение к нему активно" CatalogName="Main properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="{x:Null}" EnumVariants="" Caption="Скриншот в оркестратор" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то, если это главная диаграмма, будет использоваться значение &amp;quot;Handle&amp;quot;, иначе будет использоваться значение блока &amp;quot;Старт&amp;quot; главной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="{x:Null}" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorDirection" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Right&amp;quot; - направо; &amp;quot;Bottom&amp;quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &amp;quot;Если ошибка&amp;quot; (например блок &amp;quot;Условие&amp;quot;). Если выбрано значение &amp;quot;Default&amp;quot;, то, если это главная диаграмма, будет использоваться значение &amp;quot;Bottom&amp;quot;, иначе будет использоваться значение блока &amp;quot;Старт&amp;quot; главной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="{x:Null}" EnumVariants="Default;Right;Bottom" Caption="Направление выхода" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то, если это главная диаграмма, будет использоваться значение &amp;quot;Debug&amp;quot;, иначе будет использоваться значение блока &amp;quot;Старт&amp;quot; главной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="{x:Null}" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="{x:Null}" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>645</Left>
      <Top>655</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>1ede648b-67cf-4769-8b3d-c923a190829c</ID>
      <zIndex>10</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Запустить браузер" InternalName="LaunchBrowser" FriendlyName="Запуск выбранного браузера" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser chrome W.png" PathToToolboxImage="{x:Null}" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="54" Code="&amp;#xA;function LaunchBrowser{{{block_id}}}&amp;#xA;{&amp;#xA; try&amp;#xA; {&amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;    $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);   &amp;#xA;                                &amp;#xA;    $AppPath          = {{{AppPath}}};&amp;#xA;    $URL              = _shield({{{URL}}});&amp;#xA;    $AppWaitStartTime = {{{AppWaitStartTime}}};&amp;#xA;    $ProfileName      = {{{ProfileName}}}; &amp;#xA;        &amp;#xA;        {{{ProcessID}}} = &amp;quot;&amp;quot;; &amp;#xA;            &amp;#xA;        $AppPath = ExpandConstFilePath $AppPath $true&amp;#xA;      &amp;#xA;        $psresultstr = Read-Host(&amp;quot;&amp;lt;block&amp;gt;&amp;lt;ID&amp;gt;{{{block_native_id}}}&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;LaunchBrowser&amp;lt;/InternalName&amp;gt;&amp;lt;InternalType&amp;gt;{{{BrowserType}}}&amp;lt;/InternalType&amp;gt;&amp;lt;AppPath&amp;gt;$AppPath&amp;lt;/AppPath&amp;gt;&amp;lt;URL&amp;gt;$URL&amp;lt;/URL&amp;gt;&amp;lt;AppWaitStart&amp;gt;True&amp;lt;/AppWaitStart&amp;gt;&amp;lt;AppWaitStartTime&amp;gt;$AppWaitStartTime&amp;lt;/AppWaitStartTime&amp;gt;&amp;lt;UseCurrentTab&amp;gt;{{{UseCurrentTab}}}&amp;lt;/UseCurrentTab&amp;gt;&amp;lt;ProfileName&amp;gt;$ProfileName&amp;lt;/ProfileName&amp;gt;&amp;lt;IsIncognito&amp;gt;{{{IsIncognito}}}&amp;lt;/IsIncognito&amp;gt;&amp;lt;FullScreen&amp;gt;{{{FullScreen}}}&amp;lt;/FullScreen&amp;gt;&amp;lt;/block&amp;gt;&amp;quot;);                     &amp;#xA;        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);&amp;#xA;        if($__Error.CheckResult($psResult)) { return; }&amp;#xA;        &amp;#xA;        {{{ProcessID}}} = $psResult.Result;&amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_);&amp;#xA;        return;&amp;#xA;    }                                            &amp;#xA;    $__Error.Quit();&amp;#xA;}                   &amp;#xA;                " TextColor="#FFFFFFFF" ProtoName="" Language="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="16"&gt;&lt;Property Name="BrowserType" Tooltip="Выбор типа браузера" CatalogName="Main properties" Type="Enum" Value="Chrome" Visible="True" DefaultValue="" ValueType="" EnumVariants="IE;Chrome;Opera;Yandex;Edge;Firefox" Caption="Тип браузера" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="URL" Tooltip="[Текст] Адрес открываемой при запуске страницы" CatalogName="Main properties" Type="Expression" Value="&amp;quot;https://www.ozon.ru/&amp;quot;" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="{x:Null}" Caption="URL" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="UseCurrentTab" Tooltip="Если выбрано, то страница откроется в текущей выбранной вкладке браузера, в противном случае будет открыта новая вкладка" CatalogName="Main properties" Type="Bool" Value="false" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Текущая вкладка" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="IsIncognito" Tooltip="Если включено, то браузер будет запускаться в режиме инкогнито (если браузер поддерживает этот режим)" CatalogName="Main properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Режим инкогнито" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="FullScreen" Tooltip="При запуске браузер будет развернут на весь экран" CatalogName="Main properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="На весь экран" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ProfileName" Tooltip="[Текст] Имя профиля, с которым необходимо запустить браузер. Например: &amp;quot;Profile 1&amp;quot;. Если значение пустое, то браузер запускается с профилем по умолчанию. Если указанного профиля не существует, то он будет создан автоматически. Внимание! После создания профиля необходимо включить плагин Sherpa RPA. Чтобы определить значение для этого свойства необходимо в свойствах профиля создать ярлык на рабочем столе и затем из свойства этого ярлыка можно скопировать имя профиля" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="" Caption="Имя профиля" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AppPath" Tooltip="[Текст] Путь к приложению браузера. Если значение не задано, то производится поиск по нескольким стандартным расположениям браузера" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="{x:Null}" Caption="Путь к браузеру" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AppWaitStartTime" Tooltip="Время ожидания запуска приложения и загрузки вкладки в секундах. Внимание! Могут возникать проблемы с сайтами, использующими много запросов AJAX (где происходит подгрузка контента после загрузки страницы). Для таких сайтов рекомендуется устанавливать время ожидания 0, а затем ожидать появления какого либо элемента на странице, обозначающего окончание загрузки контента" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="1" ValueType="" EnumVariants="{x:Null}" Caption="Время ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ProcessID" Tooltip="[Ссылка] Переменная, в которую будет записан идентификатор запущенного процесса браузера, а также открытой вкладки браузера. Используйте данную переменную в свойствах \&amp;quot;ID процесса\&amp;quot; других блоков, которые должны работать с этим же браузером и этой же вкладкой." CatalogName="Output" Type="Variable" Value="$ProcessID" Visible="True" DefaultValue="" ValueType="ProcessID" EnumVariants="" Caption="ID процесса" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>1035</Left>
      <Top>1485</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>1c696279-3e4c-4d70-8349-5da49c7fc6bd</ID>
      <zIndex>28</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors>&lt;StorageSelector&gt;&lt;Selector&gt;&lt;Process Name="chrome" /&gt;&lt;CSSElement CSS="INPUT[name='text']" /&gt;&lt;/Selector&gt;&lt;ThumbImageID&gt;7d79d1c9-a126-4931-b464-6a17dbce9356&lt;/ThumbImageID&gt;&lt;Snapshot&gt;AAEAAAD/////AQAAAAAAAAAEAQAAAOIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuRGljdGlvbmFyeWAyW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQQAAAAHVmVyc2lvbghDb21wYXJlcghIYXNoU2l6ZQ1LZXlWYWx1ZVBhaXJzAAMAAwiSAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkdlbmVyaWNFcXVhbGl0eUNvbXBhcmVyYDFbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dCOYBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dW10NAAAACQIAAAARAAAACQMAAAAEAgAAAJIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuR2VuZXJpY0VxdWFsaXR5Q29tcGFyZXJgMVtbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0AAAAABwMAAAAAAQAAAAwAAAAD5AFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5LZXlWYWx1ZVBhaXJgMltbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0E/P///+QBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dAgAAAANrZXkFdmFsdWUBAQYFAAAAB3RhZ05hbWUGBgAAAAVJTlBVVAH5/////P///wYIAAAAC3NvdXJjZUluZGV4BgkAAAAEMTUwNQH2/////P///wYLAAAAC3BsYWNlaG9sZGVyBgwAAAAW0JjRgdC60LDRgtGMINC90LAgT3pvbgHz/////P///wYOAAAABHR5cGUGDwAAAAR0ZXh0AfD////8////BhEAAAAEbmFtZQYSAAAABHRleHQB7f////z///8GFAAAAA5hdXRvY2FwaXRhbGl6ZQYVAAAAA29mZgHq/////P///wYXAAAADGF1dG9jb21wbGV0ZQYYAAAAA29mZgHn/////P///wYaAAAAC2F1dG9jb3JyZWN0BhsAAAADb2ZmAeT////8////Bh0AAAAKc3BlbGxjaGVjawYeAAAABWZhbHNlAeH////8////BiAAAAAJbWF4bGVuZ3RoBiEAAAADMjU1Ad7////8////BiMAAAAFY2xhc3MGJAAAABN5NHYgdHNCb2R5NTAwTWVkaXVtAdv////8////BiYAAAAFc3R5bGUGJwAAAAtvcGFjaXR5OiAxOws=&lt;/Snapshot&gt;&lt;Created&gt;26.09.2023 13:01:44&lt;/Created&gt;&lt;/StorageSelector&gt;</StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Нажать клавиши" InternalName="PressKeysInternet" FriendlyName="Эмуляция нажатия клавиш на клавиатуре. Может эмулировать как непрерывный ввод текста, так и нажатия комбинаций клавиш, а также любые сочетания специальных клавиш и текста. В составе комбинаций могут использоваться не только клавиши клавиатуры, но и мыши. Для записи комбинаций клавиш зайдите в окно селектора и нажмите кнопку &amp;quot;Запись&amp;quot;" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Press Keys.png" PathToToolboxImage="{x:Null}" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="47" Code="&amp;#xA;function PressKeysInternet{{{block_id}}}&amp;#xA;{&amp;#xA;    try&amp;#xA;    {&amp;#xA;        $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;        $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);&amp;#xA;           &amp;#xA;        $KeysValueObj     = {{{KeysValue}}};&amp;#xA;        $ProcessID        = {{{ProcessID}}};  &amp;#xA;        $InteractiveDelay = {{{InteractiveDelay}}}; &amp;#xA;        $DelayAfter       = {{{DelayAfter}}}; &amp;#xA;        $DelayBefore      = {{{DelayBefore}}}; &amp;#xA;        $WaitTime         = {{{WaitTime}}}; &amp;#xA;        $OnlyText         = ${{{OnlyText}}};  &amp;#xA;        $OffsetX          = {{{OffsetX}}};&amp;#xA;        $OffsetY          = {{{OffsetY}}};  &amp;#xA;        $DelayBeforeSelector2 = {{{DelayBeforeSelector2}}};&amp;#xA;        $WaitTimeSelector2    = {{{WaitTimeSelector2}}};&amp;#xA;        $AttemptsSelector2    = {{{AttemptsSelector2}}}; &amp;#xA;        $AppearTypeSelector2  = &amp;quot;{{{AppearTypeSelector2}}}&amp;quot;;&amp;#xA;        &amp;#xA;        Start-Sleep -Seconds $DelayBefore; &amp;#xA;                  &amp;#xA;        $KeysValue = _checkpassword($KeysValueObj);&amp;#xA;        &amp;#xA;        if($OnlyText)&amp;#xA;        {&amp;#xA;            $KeysValue = &amp;quot;[TEXT]&amp;quot; + $KeysValue;&amp;#xA;        }&amp;#xA;        &amp;#xA;        $val = _shield $KeysValue;&amp;#xA;        &amp;#xA;        $psresultstr = Read-Host(&amp;quot;&amp;lt;block&amp;gt;&amp;lt;ID&amp;gt;{{{block_native_id}}}&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;SendKeys&amp;lt;/InternalName&amp;gt;&amp;lt;ProcessID&amp;gt;$ProcessID&amp;lt;/ProcessID&amp;gt;&amp;lt;InternalType&amp;gt;Internet&amp;lt;/InternalType&amp;gt;&amp;lt;InteractiveType&amp;gt;{{{InteractiveType}}}&amp;lt;/InteractiveType&amp;gt;&amp;lt;InteractiveDelay&amp;gt;$InteractiveDelay&amp;lt;/InteractiveDelay&amp;gt;&amp;lt;OffsetX&amp;gt;$OffsetX&amp;lt;/OffsetX&amp;gt;&amp;lt;OffsetY&amp;gt;$OffsetY&amp;lt;/OffsetY&amp;gt;&amp;lt;KeysValue&amp;gt;$val&amp;lt;/KeysValue&amp;gt;&amp;lt;SelectAll&amp;gt;{{{SelectAll}}}&amp;lt;/SelectAll&amp;gt;&amp;lt;WaitTime&amp;gt;$WaitTime&amp;lt;/WaitTime&amp;gt;&amp;lt;SimulateMessages&amp;gt;{{{SimulateMessages}}}&amp;lt;/SimulateMessages&amp;gt;&amp;lt;SimulateMove&amp;gt;{{{SimulateMove}}}&amp;lt;/SimulateMove&amp;gt;&amp;lt;AutoScroll&amp;gt;{{{AutoScroll}}}&amp;lt;/AutoScroll&amp;gt;&amp;lt;AutoDepressing&amp;gt;{{{AutoDepressing}}}&amp;lt;/AutoDepressing&amp;gt;{{{Selector}}}&amp;lt;DelayBeforeSelector2&amp;gt;$DelayBeforeSelector2&amp;lt;/DelayBeforeSelector2&amp;gt;&amp;lt;WaitTimeSelector2&amp;gt;$WaitTimeSelector2&amp;lt;/WaitTimeSelector2&amp;gt;&amp;lt;AttemptsSelector2&amp;gt;$AttemptsSelector2&amp;lt;/AttemptsSelector2&amp;gt;&amp;lt;AppearTypeSelector2&amp;gt;$AppearTypeSelector2&amp;lt;/AppearTypeSelector2&amp;gt;{{{Selector2}}}&amp;lt;/block&amp;gt;&amp;quot;);                        &amp;#xA;        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);&amp;#xA;        if($__Error.CheckResult($psResult)) { return; } &amp;#xA;        &amp;#xA;        Start-Sleep -Seconds $DelayAfter; &amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_);&amp;#xA;        return;&amp;#xA;    }&amp;#xA;    $__Error.Quit();  &amp;#xA;}                   &amp;#xA;                " TextColor="#FFFFFFFF" ProtoName="" Language="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="32"&gt;&lt;Property Name="KeysValue" Tooltip="[Текст] Текст или клавиши, которые необходимо эмулировать. Например: &amp;quot;Test text&amp;quot; - будут эмулироваться клавиши для ввода этой строки; &amp;quot;[ENTER]&amp;quot; - будет нажата клавиша Enter. В рамках одного блока можно сочетать непрерывный ввод текста и нажатия клавиш. Для записи комбинаций клавиш зайдите в окно селектора и нажмите кнопку &amp;quot;Запись&amp;quot;" CatalogName="Required" Type="Expression" Value="&amp;quot;[LBUTTON]&amp;quot;" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="{x:Null}" Caption="Клавиши" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="Selector" Tooltip="[Селектор] Идентификатор окна браузера и элемента веб-страницы. Если задано данное свойство, то фокус будет установлен на заданный элемент веб-страницы перед началом ввода текста." CatalogName="Main properties" Type="Selector" Value="&amp;lt;Selector&amp;gt;&amp;lt;Process Name=&amp;quot;chrome&amp;quot; /&amp;gt;&amp;lt;CSSElement CSS=&amp;quot;INPUT[name='text']&amp;quot; /&amp;gt;&amp;lt;/Selector&amp;gt;" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Selector" EnumVariants="{x:Null}" Caption="Селектор" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="7d79d1c9-a126-4931-b464-6a17dbce9356" Visible="False" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="{x:Null}" Caption="ThumbImage" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ProcessID" Tooltip="[Ссылка] Переменная, в которой хранится идентификатор процесса и вкладки браузера, используемые данным блоком. Если свойство оставить пустым, либо если переменная &amp;quot;ID процесса&amp;quot; не была ранее присвоена в момент открытия браузера, приложение и вкладка браузера будут определены из содержимого соответствующей строки селектора. ID процесса может быть получен, например, с помощью блоков Запустить IE, Запустить Chrome или Присоединиться к браузеру." CatalogName="Main properties" Type="Variable" Value="$ProcessID" Visible="True" DefaultValue="" ValueType="ProcessID" EnumVariants="" Caption="ID процесса" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="InteractiveType" Tooltip="Если задано, то между нажатиями клавиш будут вставляться паузы. Рекомендуем включить это свойство, если из-за особенностей приложения или веб-страницы в процессе эмуляции ввода текста теряются отдельные буквы." CatalogName="Main properties" Type="Bool" Value="True" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Интерактивно" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="InteractiveDelay" Tooltip="[Число] Если задано свойство Интерактивно, то между нажатиями клавиш будет вставляться указанная здесь в миллисекундах пауза" CatalogName="Main properties" Type="Expression" Value="100" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Время паузы" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="SelectAll" Tooltip="Перед началом ввода посылать сочетание клавиш &amp;quot;выбрать все&amp;quot; (Ctrl+A)." CatalogName="Main properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Выбрать все" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="OnlyText" Tooltip="Если включено, то весь текст считается символами и не будет разбиваться на управляющие клавиши" CatalogName="Main properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Только текст" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayBefore" Tooltip="[Число] Задержка в секундах перед выполением блока" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Задержка перед" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayAfter" Tooltip="[Число] Задержка в секундах после выполения блока" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Задержка после" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="WaitTime" Tooltip="[Число] Предельное время ожидания заданного элемента в секундах" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="{x:Null}" Caption="Время ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="OffsetX" Tooltip="[Число] Относительное смещение клика по координате X от левого верхнего угла элемента. Если не указано никакое значение (свойство пустое), то в качестве точки клика будет использоваться центр элемента" CatalogName="Main properties" Type="Expression" Value="199" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Смещение по X" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="OffsetY" Tooltip="[Число] Относительное смещение клика по координате Y от левого верхнего угла элемента. Если не указано никакое значение (свойство пустое), то в качестве точки клика будет использоваться центр элемента" CatalogName="Main properties" Type="Expression" Value="15" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Смещение по Y" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Selector2" Tooltip="[Селектор] Идентификатор элемента пользовательского интерфейса. Если селектор будет пустым, то блок не будет ожидать появление этого элемента" CatalogName="Main properties" Type="Selector" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Selector" EnumVariants="{x:Null}" Caption="Селектор ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AppearTypeSelector2" Tooltip="Выбор типа ожидания. AppearAfter - появление после ввода текста, DisappearAfter - исчезновение после ввода текста; AppearBefore - появление перед вводом текста; DisappearBefore -исчезновение перед вводом текста. При выборе After - сначала будет сделан клик мышкой, потом ввод текста, потом проверка селектора ожидания. При выборе Before - сначала будет сделан клик мышкой, потом проверка селектора ожидания, потом ввод текста" CatalogName="Main properties" Type="Enum" Value="AppearAfter" Visible="True" DefaultValue="" ValueType="" EnumVariants="AppearAfter;DisappearAfter;AppearBefore;DisappearBefore" Caption="Тип ожидания селектора ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayBeforeSelector2" Tooltip="[Число] Задержка перед проверкой селектора ожидания" CatalogName="Main properties" Type="Expression" Value="2" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Задержка перед проверкой селектора ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="WaitTimeSelector2" Tooltip="[Число] Предельное время ожидания элемента, заданного в селекторе ожидания в секундах" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="{x:Null}" Caption="Время ожидания для селектора ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AttemptsSelector2" Tooltip="[Число] Количество попыток для селектора ожидания. Если селектор ожидания не будет найден, то блок будет производить клик по основному селектору" CatalogName="Main properties" Type="Expression" Value="1" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Количество попыток для селектора ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AutoScroll" Tooltip="Если выбрано, будет автоматически произведена прокрутка списка до элемента, находящегося вне видимой области" CatalogName="Custom properties" Type="Bool" Value="True" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Автоскроллинг" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="SimulateMove" Tooltip="При включении будет симулироваться движение курсора мышки от текущей позиции до рассчитанной блоком точки" CatalogName="Custom properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Симуляция движения" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="SimulateMessages" Tooltip="(Только для IE) При включении будет выполнена симуляция ввода средствами браузера" CatalogName="Custom properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Симуляция ввода" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AutoDepressing" Tooltip="При включении зажатые клавиши (с модификатором +, например [+CTRL]) будут автоматически отжаты после выполнения блока. Если свойство выключено, то необходимо вручную отжать ранее зажатую клавишу (с модификатором -, например [-CTRL])" CatalogName="Custom properties" Type="Bool" Value="True" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Автоматическое отжатие" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>1035</Left>
      <Top>1560</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>ee8e6a55-3913-4787-a006-f567952dbce6</ID>
      <zIndex>31</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors>&lt;StorageSelector&gt;&lt;Selector&gt;&lt;Process Name="chrome" /&gt;&lt;CSSElement CSS="INPUT[name='text']" /&gt;&lt;/Selector&gt;&lt;ThumbImageID&gt;3f8fdb15-d0c9-4f5c-a004-0f9569d84c94&lt;/ThumbImageID&gt;&lt;Snapshot&gt;AAEAAAD/////AQAAAAAAAAAEAQAAAOIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuRGljdGlvbmFyeWAyW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQQAAAAHVmVyc2lvbghDb21wYXJlcghIYXNoU2l6ZQ1LZXlWYWx1ZVBhaXJzAAMAAwiSAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkdlbmVyaWNFcXVhbGl0eUNvbXBhcmVyYDFbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dCOYBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dW10NAAAACQIAAAARAAAACQMAAAAEAgAAAJIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuR2VuZXJpY0VxdWFsaXR5Q29tcGFyZXJgMVtbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0AAAAABwMAAAAAAQAAAAwAAAAD5AFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5LZXlWYWx1ZVBhaXJgMltbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0E/P///+QBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dAgAAAANrZXkFdmFsdWUBAQYFAAAAB3RhZ05hbWUGBgAAAAVJTlBVVAH5/////P///wYIAAAAC3NvdXJjZUluZGV4BgkAAAAEMTUwNwH2/////P///wYLAAAAC3BsYWNlaG9sZGVyBgwAAAAW0JjRgdC60LDRgtGMINC90LAgT3pvbgHz/////P///wYOAAAABHR5cGUGDwAAAAR0ZXh0AfD////8////BhEAAAAEbmFtZQYSAAAABHRleHQB7f////z///8GFAAAAA5hdXRvY2FwaXRhbGl6ZQYVAAAAA29mZgHq/////P///wYXAAAADGF1dG9jb21wbGV0ZQYYAAAAA29mZgHn/////P///wYaAAAAC2F1dG9jb3JyZWN0BhsAAAADb2ZmAeT////8////Bh0AAAAKc3BlbGxjaGVjawYeAAAABWZhbHNlAeH////8////BiAAAAAJbWF4bGVuZ3RoBiEAAAADMjU1Ad7////8////BiMAAAAFY2xhc3MGJAAAABN5NHYgdHNCb2R5NTAwTWVkaXVtAdv////8////BiYAAAAFc3R5bGUGJwAAAAtvcGFjaXR5OiAxOws=&lt;/Snapshot&gt;&lt;Created&gt;26.09.2023 13:40:04&lt;/Created&gt;&lt;/StorageSelector&gt;</StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Нажать клавиши" InternalName="PressKeysInternet" FriendlyName="Эмуляция нажатия клавиш на клавиатуре. Может эмулировать как непрерывный ввод текста, так и нажатия комбинаций клавиш, а также любые сочетания специальных клавиш и текста. В составе комбинаций могут использоваться не только клавиши клавиатуры, но и мыши. Для записи комбинаций клавиш зайдите в окно селектора и нажмите кнопку &amp;quot;Запись&amp;quot;" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Press Keys.png" PathToToolboxImage="{x:Null}" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="47" Code="&amp;#xA;function PressKeysInternet{{{block_id}}}&amp;#xA;{&amp;#xA;    try&amp;#xA;    {&amp;#xA;        $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;        $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);&amp;#xA;           &amp;#xA;        $KeysValueObj     = {{{KeysValue}}};&amp;#xA;        $ProcessID        = {{{ProcessID}}};  &amp;#xA;        $InteractiveDelay = {{{InteractiveDelay}}}; &amp;#xA;        $DelayAfter       = {{{DelayAfter}}}; &amp;#xA;        $DelayBefore      = {{{DelayBefore}}}; &amp;#xA;        $WaitTime         = {{{WaitTime}}}; &amp;#xA;        $OnlyText         = ${{{OnlyText}}};  &amp;#xA;        $OffsetX          = {{{OffsetX}}};&amp;#xA;        $OffsetY          = {{{OffsetY}}};  &amp;#xA;        $DelayBeforeSelector2 = {{{DelayBeforeSelector2}}};&amp;#xA;        $WaitTimeSelector2    = {{{WaitTimeSelector2}}};&amp;#xA;        $AttemptsSelector2    = {{{AttemptsSelector2}}}; &amp;#xA;        $AppearTypeSelector2  = &amp;quot;{{{AppearTypeSelector2}}}&amp;quot;;&amp;#xA;        &amp;#xA;        Start-Sleep -Seconds $DelayBefore; &amp;#xA;                  &amp;#xA;        $KeysValue = _checkpassword($KeysValueObj);&amp;#xA;        &amp;#xA;        if($OnlyText)&amp;#xA;        {&amp;#xA;            $KeysValue = &amp;quot;[TEXT]&amp;quot; + $KeysValue;&amp;#xA;        }&amp;#xA;        &amp;#xA;        $val = _shield $KeysValue;&amp;#xA;        &amp;#xA;        $psresultstr = Read-Host(&amp;quot;&amp;lt;block&amp;gt;&amp;lt;ID&amp;gt;{{{block_native_id}}}&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;SendKeys&amp;lt;/InternalName&amp;gt;&amp;lt;ProcessID&amp;gt;$ProcessID&amp;lt;/ProcessID&amp;gt;&amp;lt;InternalType&amp;gt;Internet&amp;lt;/InternalType&amp;gt;&amp;lt;InteractiveType&amp;gt;{{{InteractiveType}}}&amp;lt;/InteractiveType&amp;gt;&amp;lt;InteractiveDelay&amp;gt;$InteractiveDelay&amp;lt;/InteractiveDelay&amp;gt;&amp;lt;OffsetX&amp;gt;$OffsetX&amp;lt;/OffsetX&amp;gt;&amp;lt;OffsetY&amp;gt;$OffsetY&amp;lt;/OffsetY&amp;gt;&amp;lt;KeysValue&amp;gt;$val&amp;lt;/KeysValue&amp;gt;&amp;lt;SelectAll&amp;gt;{{{SelectAll}}}&amp;lt;/SelectAll&amp;gt;&amp;lt;WaitTime&amp;gt;$WaitTime&amp;lt;/WaitTime&amp;gt;&amp;lt;SimulateMessages&amp;gt;{{{SimulateMessages}}}&amp;lt;/SimulateMessages&amp;gt;&amp;lt;SimulateMove&amp;gt;{{{SimulateMove}}}&amp;lt;/SimulateMove&amp;gt;&amp;lt;AutoScroll&amp;gt;{{{AutoScroll}}}&amp;lt;/AutoScroll&amp;gt;&amp;lt;AutoDepressing&amp;gt;{{{AutoDepressing}}}&amp;lt;/AutoDepressing&amp;gt;{{{Selector}}}&amp;lt;DelayBeforeSelector2&amp;gt;$DelayBeforeSelector2&amp;lt;/DelayBeforeSelector2&amp;gt;&amp;lt;WaitTimeSelector2&amp;gt;$WaitTimeSelector2&amp;lt;/WaitTimeSelector2&amp;gt;&amp;lt;AttemptsSelector2&amp;gt;$AttemptsSelector2&amp;lt;/AttemptsSelector2&amp;gt;&amp;lt;AppearTypeSelector2&amp;gt;$AppearTypeSelector2&amp;lt;/AppearTypeSelector2&amp;gt;{{{Selector2}}}&amp;lt;/block&amp;gt;&amp;quot;);                        &amp;#xA;        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);&amp;#xA;        if($__Error.CheckResult($psResult)) { return; } &amp;#xA;        &amp;#xA;        Start-Sleep -Seconds $DelayAfter; &amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_);&amp;#xA;        return;&amp;#xA;    }&amp;#xA;    $__Error.Quit();  &amp;#xA;}                   &amp;#xA;                " TextColor="#FFFFFFFF" ProtoName="" Language="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="32"&gt;&lt;Property Name="KeysValue" Tooltip="[Текст] Текст или клавиши, которые необходимо эмулировать. Например: &amp;quot;Test text&amp;quot; - будут эмулироваться клавиши для ввода этой строки; &amp;quot;[ENTER]&amp;quot; - будет нажата клавиша Enter. В рамках одного блока можно сочетать непрерывный ввод текста и нажатия клавиш. Для записи комбинаций клавиш зайдите в окно селектора и нажмите кнопку &amp;quot;Запись&amp;quot;" CatalogName="Required" Type="Expression" Value="$Result" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="{x:Null}" Caption="Клавиши" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="Selector" Tooltip="[Селектор] Идентификатор окна браузера и элемента веб-страницы. Если задано данное свойство, то фокус будет установлен на заданный элемент веб-страницы перед началом ввода текста." CatalogName="Main properties" Type="Selector" Value="&amp;lt;Selector&amp;gt;&amp;lt;Process Name=&amp;quot;chrome&amp;quot; /&amp;gt;&amp;lt;CSSElement CSS=&amp;quot;INPUT[name='text']&amp;quot; /&amp;gt;&amp;lt;/Selector&amp;gt;" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Selector" EnumVariants="{x:Null}" Caption="Селектор" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="3f8fdb15-d0c9-4f5c-a004-0f9569d84c94" Visible="False" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="{x:Null}" Caption="ThumbImage" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ProcessID" Tooltip="[Ссылка] Переменная, в которой хранится идентификатор процесса и вкладки браузера, используемые данным блоком. Если свойство оставить пустым, либо если переменная &amp;quot;ID процесса&amp;quot; не была ранее присвоена в момент открытия браузера, приложение и вкладка браузера будут определены из содержимого соответствующей строки селектора. ID процесса может быть получен, например, с помощью блоков Запустить IE, Запустить Chrome или Присоединиться к браузеру." CatalogName="Main properties" Type="Variable" Value="$ProcessID" Visible="True" DefaultValue="" ValueType="ProcessID" EnumVariants="" Caption="ID процесса" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="InteractiveType" Tooltip="Если задано, то между нажатиями клавиш будут вставляться паузы. Рекомендуем включить это свойство, если из-за особенностей приложения или веб-страницы в процессе эмуляции ввода текста теряются отдельные буквы." CatalogName="Main properties" Type="Bool" Value="True" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Интерактивно" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="InteractiveDelay" Tooltip="[Число] Если задано свойство Интерактивно, то между нажатиями клавиш будет вставляться указанная здесь в миллисекундах пауза" CatalogName="Main properties" Type="Expression" Value="100" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Время паузы" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="SelectAll" Tooltip="Перед началом ввода посылать сочетание клавиш &amp;quot;выбрать все&amp;quot; (Ctrl+A)." CatalogName="Main properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Выбрать все" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="OnlyText" Tooltip="Если включено, то весь текст считается символами и не будет разбиваться на управляющие клавиши" CatalogName="Main properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Только текст" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayBefore" Tooltip="[Число] Задержка в секундах перед выполением блока" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Задержка перед" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayAfter" Tooltip="[Число] Задержка в секундах после выполения блока" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Задержка после" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="WaitTime" Tooltip="[Число] Предельное время ожидания заданного элемента в секундах" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="{x:Null}" Caption="Время ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="OffsetX" Tooltip="[Число] Относительное смещение клика по координате X от левого верхнего угла элемента. Если не указано никакое значение (свойство пустое), то в качестве точки клика будет использоваться центр элемента" CatalogName="Main properties" Type="Expression" Value="148" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Смещение по X" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="OffsetY" Tooltip="[Число] Относительное смещение клика по координате Y от левого верхнего угла элемента. Если не указано никакое значение (свойство пустое), то в качестве точки клика будет использоваться центр элемента" CatalogName="Main properties" Type="Expression" Value="16" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Смещение по Y" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Selector2" Tooltip="[Селектор] Идентификатор элемента пользовательского интерфейса. Если селектор будет пустым, то блок не будет ожидать появление этого элемента" CatalogName="Main properties" Type="Selector" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Selector" EnumVariants="{x:Null}" Caption="Селектор ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AppearTypeSelector2" Tooltip="Выбор типа ожидания. AppearAfter - появление после ввода текста, DisappearAfter - исчезновение после ввода текста; AppearBefore - появление перед вводом текста; DisappearBefore -исчезновение перед вводом текста. При выборе After - сначала будет сделан клик мышкой, потом ввод текста, потом проверка селектора ожидания. При выборе Before - сначала будет сделан клик мышкой, потом проверка селектора ожидания, потом ввод текста" CatalogName="Main properties" Type="Enum" Value="AppearAfter" Visible="True" DefaultValue="" ValueType="" EnumVariants="AppearAfter;DisappearAfter;AppearBefore;DisappearBefore" Caption="Тип ожидания селектора ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayBeforeSelector2" Tooltip="[Число] Задержка перед проверкой селектора ожидания" CatalogName="Main properties" Type="Expression" Value="2" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Задержка перед проверкой селектора ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="WaitTimeSelector2" Tooltip="[Число] Предельное время ожидания элемента, заданного в селекторе ожидания в секундах" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="{x:Null}" Caption="Время ожидания для селектора ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AttemptsSelector2" Tooltip="[Число] Количество попыток для селектора ожидания. Если селектор ожидания не будет найден, то блок будет производить клик по основному селектору" CatalogName="Main properties" Type="Expression" Value="1" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Количество попыток для селектора ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AutoScroll" Tooltip="Если выбрано, будет автоматически произведена прокрутка списка до элемента, находящегося вне видимой области" CatalogName="Custom properties" Type="Bool" Value="True" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Автоскроллинг" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="SimulateMove" Tooltip="При включении будет симулироваться движение курсора мышки от текущей позиции до рассчитанной блоком точки" CatalogName="Custom properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Симуляция движения" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="SimulateMessages" Tooltip="(Только для IE) При включении будет выполнена симуляция ввода средствами браузера" CatalogName="Custom properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Симуляция ввода" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AutoDepressing" Tooltip="При включении зажатые клавиши (с модификатором +, например [+CTRL]) будут автоматически отжаты после выполнения блока. Если свойство выключено, то необходимо вручную отжать ранее зажатую клавишу (с модификатором -, например [-CTRL])" CatalogName="Custom properties" Type="Bool" Value="True" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Автоматическое отжатие" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>1035</Left>
      <Top>1635</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>b504dcd8-fa06-4684-a7ab-6ac5ee13bb7b</ID>
      <zIndex>33</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors>&lt;StorageSelector&gt;&lt;Selector&gt;&lt;Process Name="chrome" /&gt;&lt;CSSElement CSS="SPAN.a2423-b1.a2423-e3.a2423-f0.a2423-a3" /&gt;&lt;/Selector&gt;&lt;ThumbImageID&gt;b736b24c-9887-402c-9c4c-8dcdcbbd4bce&lt;/ThumbImageID&gt;&lt;Snapshot&gt;AAEAAAD/////AQAAAAAAAAAEAQAAAOIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuRGljdGlvbmFyeWAyW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQQAAAAHVmVyc2lvbghDb21wYXJlcghIYXNoU2l6ZQ1LZXlWYWx1ZVBhaXJzAAMAAwiSAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkdlbmVyaWNFcXVhbGl0eUNvbXBhcmVyYDFbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dCOYBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dW10FAAAACQIAAAAHAAAACQMAAAAEAgAAAJIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuR2VuZXJpY0VxdWFsaXR5Q29tcGFyZXJgMVtbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0AAAAABwMAAAAAAQAAAAQAAAAD5AFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5LZXlWYWx1ZVBhaXJgMltbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0E/P///+QBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dAgAAAANrZXkFdmFsdWUBAQYFAAAAB3RhZ05hbWUGBgAAAARTUEFOAfn////8////BggAAAALc291cmNlSW5kZXgGCQAAAAMyODkB9v////z///8GCwAAAAVjbGFzcwYMAAAAI2EyNDIzLWIxIGEyNDIzLWUzIGEyNDIzLWYwIGEyNDIzLWEzAfP////8////Bg4AAAAFc3R5bGUGDwAAABJib3JkZXItcmFkaXVzOjZweDsL&lt;/Snapshot&gt;&lt;Created&gt;26.09.2023 13:40:04&lt;/Created&gt;&lt;/StorageSelector&gt;</StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Нажать клавиши" InternalName="PressKeysInternet" FriendlyName="Эмуляция нажатия клавиш на клавиатуре. Может эмулировать как непрерывный ввод текста, так и нажатия комбинаций клавиш, а также любые сочетания специальных клавиш и текста. В составе комбинаций могут использоваться не только клавиши клавиатуры, но и мыши. Для записи комбинаций клавиш зайдите в окно селектора и нажмите кнопку &amp;quot;Запись&amp;quot;" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Press Keys.png" PathToToolboxImage="{x:Null}" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="47" Code="&amp;#xA;function PressKeysInternet{{{block_id}}}&amp;#xA;{&amp;#xA;    try&amp;#xA;    {&amp;#xA;        $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;        $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);&amp;#xA;           &amp;#xA;        $KeysValueObj     = {{{KeysValue}}};&amp;#xA;        $ProcessID        = {{{ProcessID}}};  &amp;#xA;        $InteractiveDelay = {{{InteractiveDelay}}}; &amp;#xA;        $DelayAfter       = {{{DelayAfter}}}; &amp;#xA;        $DelayBefore      = {{{DelayBefore}}}; &amp;#xA;        $WaitTime         = {{{WaitTime}}}; &amp;#xA;        $OnlyText         = ${{{OnlyText}}};  &amp;#xA;        $OffsetX          = {{{OffsetX}}};&amp;#xA;        $OffsetY          = {{{OffsetY}}};  &amp;#xA;        $DelayBeforeSelector2 = {{{DelayBeforeSelector2}}};&amp;#xA;        $WaitTimeSelector2    = {{{WaitTimeSelector2}}};&amp;#xA;        $AttemptsSelector2    = {{{AttemptsSelector2}}}; &amp;#xA;        $AppearTypeSelector2  = &amp;quot;{{{AppearTypeSelector2}}}&amp;quot;;&amp;#xA;        &amp;#xA;        Start-Sleep -Seconds $DelayBefore; &amp;#xA;                  &amp;#xA;        $KeysValue = _checkpassword($KeysValueObj);&amp;#xA;        &amp;#xA;        if($OnlyText)&amp;#xA;        {&amp;#xA;            $KeysValue = &amp;quot;[TEXT]&amp;quot; + $KeysValue;&amp;#xA;        }&amp;#xA;        &amp;#xA;        $val = _shield $KeysValue;&amp;#xA;        &amp;#xA;        $psresultstr = Read-Host(&amp;quot;&amp;lt;block&amp;gt;&amp;lt;ID&amp;gt;{{{block_native_id}}}&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;SendKeys&amp;lt;/InternalName&amp;gt;&amp;lt;ProcessID&amp;gt;$ProcessID&amp;lt;/ProcessID&amp;gt;&amp;lt;InternalType&amp;gt;Internet&amp;lt;/InternalType&amp;gt;&amp;lt;InteractiveType&amp;gt;{{{InteractiveType}}}&amp;lt;/InteractiveType&amp;gt;&amp;lt;InteractiveDelay&amp;gt;$InteractiveDelay&amp;lt;/InteractiveDelay&amp;gt;&amp;lt;OffsetX&amp;gt;$OffsetX&amp;lt;/OffsetX&amp;gt;&amp;lt;OffsetY&amp;gt;$OffsetY&amp;lt;/OffsetY&amp;gt;&amp;lt;KeysValue&amp;gt;$val&amp;lt;/KeysValue&amp;gt;&amp;lt;SelectAll&amp;gt;{{{SelectAll}}}&amp;lt;/SelectAll&amp;gt;&amp;lt;WaitTime&amp;gt;$WaitTime&amp;lt;/WaitTime&amp;gt;&amp;lt;SimulateMessages&amp;gt;{{{SimulateMessages}}}&amp;lt;/SimulateMessages&amp;gt;&amp;lt;SimulateMove&amp;gt;{{{SimulateMove}}}&amp;lt;/SimulateMove&amp;gt;&amp;lt;AutoScroll&amp;gt;{{{AutoScroll}}}&amp;lt;/AutoScroll&amp;gt;&amp;lt;AutoDepressing&amp;gt;{{{AutoDepressing}}}&amp;lt;/AutoDepressing&amp;gt;{{{Selector}}}&amp;lt;DelayBeforeSelector2&amp;gt;$DelayBeforeSelector2&amp;lt;/DelayBeforeSelector2&amp;gt;&amp;lt;WaitTimeSelector2&amp;gt;$WaitTimeSelector2&amp;lt;/WaitTimeSelector2&amp;gt;&amp;lt;AttemptsSelector2&amp;gt;$AttemptsSelector2&amp;lt;/AttemptsSelector2&amp;gt;&amp;lt;AppearTypeSelector2&amp;gt;$AppearTypeSelector2&amp;lt;/AppearTypeSelector2&amp;gt;{{{Selector2}}}&amp;lt;/block&amp;gt;&amp;quot;);                        &amp;#xA;        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);&amp;#xA;        if($__Error.CheckResult($psResult)) { return; } &amp;#xA;        &amp;#xA;        Start-Sleep -Seconds $DelayAfter; &amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_);&amp;#xA;        return;&amp;#xA;    }&amp;#xA;    $__Error.Quit();  &amp;#xA;}                   &amp;#xA;                " TextColor="#FFFFFFFF" ProtoName="" Language="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="32"&gt;&lt;Property Name="KeysValue" Tooltip="[Текст] Текст или клавиши, которые необходимо эмулировать. Например: &amp;quot;Test text&amp;quot; - будут эмулироваться клавиши для ввода этой строки; &amp;quot;[ENTER]&amp;quot; - будет нажата клавиша Enter. В рамках одного блока можно сочетать непрерывный ввод текста и нажатия клавиш. Для записи комбинаций клавиш зайдите в окно селектора и нажмите кнопку &amp;quot;Запись&amp;quot;" CatalogName="Required" Type="Expression" Value="&amp;quot;[LBUTTON]&amp;quot;" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="{x:Null}" Caption="Клавиши" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="Selector" Tooltip="[Селектор] Идентификатор окна браузера и элемента веб-страницы. Если задано данное свойство, то фокус будет установлен на заданный элемент веб-страницы перед началом ввода текста." CatalogName="Main properties" Type="Selector" Value="&amp;lt;Selector&amp;gt;&amp;lt;Process Name=&amp;quot;chrome&amp;quot; /&amp;gt;&amp;lt;CSSElement CSS=&amp;quot;SPAN.a2423-b1.a2423-e3.a2423-f0.a2423-a3&amp;quot; /&amp;gt;&amp;lt;/Selector&amp;gt;" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Selector" EnumVariants="{x:Null}" Caption="Селектор" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="b736b24c-9887-402c-9c4c-8dcdcbbd4bce" Visible="False" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="{x:Null}" Caption="ThumbImage" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ProcessID" Tooltip="[Ссылка] Переменная, в которой хранится идентификатор процесса и вкладки браузера, используемые данным блоком. Если свойство оставить пустым, либо если переменная &amp;quot;ID процесса&amp;quot; не была ранее присвоена в момент открытия браузера, приложение и вкладка браузера будут определены из содержимого соответствующей строки селектора. ID процесса может быть получен, например, с помощью блоков Запустить IE, Запустить Chrome или Присоединиться к браузеру." CatalogName="Main properties" Type="Variable" Value="$ProcessID" Visible="True" DefaultValue="" ValueType="ProcessID" EnumVariants="" Caption="ID процесса" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="InteractiveType" Tooltip="Если задано, то между нажатиями клавиш будут вставляться паузы. Рекомендуем включить это свойство, если из-за особенностей приложения или веб-страницы в процессе эмуляции ввода текста теряются отдельные буквы." CatalogName="Main properties" Type="Bool" Value="True" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Интерактивно" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="InteractiveDelay" Tooltip="[Число] Если задано свойство Интерактивно, то между нажатиями клавиш будет вставляться указанная здесь в миллисекундах пауза" CatalogName="Main properties" Type="Expression" Value="100" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Время паузы" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="SelectAll" Tooltip="Перед началом ввода посылать сочетание клавиш &amp;quot;выбрать все&amp;quot; (Ctrl+A)." CatalogName="Main properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Выбрать все" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="OnlyText" Tooltip="Если включено, то весь текст считается символами и не будет разбиваться на управляющие клавиши" CatalogName="Main properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Только текст" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayBefore" Tooltip="[Число] Задержка в секундах перед выполением блока" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Задержка перед" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayAfter" Tooltip="[Число] Задержка в секундах после выполения блока" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Задержка после" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="WaitTime" Tooltip="[Число] Предельное время ожидания заданного элемента в секундах" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="{x:Null}" Caption="Время ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="OffsetX" Tooltip="[Число] Относительное смещение клика по координате X от левого верхнего угла элемента. Если не указано никакое значение (свойство пустое), то в качестве точки клика будет использоваться центр элемента" CatalogName="Main properties" Type="Expression" Value="54" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Смещение по X" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="OffsetY" Tooltip="[Число] Относительное смещение клика по координате Y от левого верхнего угла элемента. Если не указано никакое значение (свойство пустое), то в качестве точки клика будет использоваться центр элемента" CatalogName="Main properties" Type="Expression" Value="11" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Смещение по Y" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Selector2" Tooltip="[Селектор] Идентификатор элемента пользовательского интерфейса. Если селектор будет пустым, то блок не будет ожидать появление этого элемента" CatalogName="Main properties" Type="Selector" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Selector" EnumVariants="{x:Null}" Caption="Селектор ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AppearTypeSelector2" Tooltip="Выбор типа ожидания. AppearAfter - появление после ввода текста, DisappearAfter - исчезновение после ввода текста; AppearBefore - появление перед вводом текста; DisappearBefore -исчезновение перед вводом текста. При выборе After - сначала будет сделан клик мышкой, потом ввод текста, потом проверка селектора ожидания. При выборе Before - сначала будет сделан клик мышкой, потом проверка селектора ожидания, потом ввод текста" CatalogName="Main properties" Type="Enum" Value="AppearAfter" Visible="True" DefaultValue="" ValueType="" EnumVariants="AppearAfter;DisappearAfter;AppearBefore;DisappearBefore" Caption="Тип ожидания селектора ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayBeforeSelector2" Tooltip="[Число] Задержка перед проверкой селектора ожидания" CatalogName="Main properties" Type="Expression" Value="2" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Задержка перед проверкой селектора ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="WaitTimeSelector2" Tooltip="[Число] Предельное время ожидания элемента, заданного в селекторе ожидания в секундах" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="{x:Null}" Caption="Время ожидания для селектора ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AttemptsSelector2" Tooltip="[Число] Количество попыток для селектора ожидания. Если селектор ожидания не будет найден, то блок будет производить клик по основному селектору" CatalogName="Main properties" Type="Expression" Value="1" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Количество попыток для селектора ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AutoScroll" Tooltip="Если выбрано, будет автоматически произведена прокрутка списка до элемента, находящегося вне видимой области" CatalogName="Custom properties" Type="Bool" Value="True" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Автоскроллинг" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="SimulateMove" Tooltip="При включении будет симулироваться движение курсора мышки от текущей позиции до рассчитанной блоком точки" CatalogName="Custom properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Симуляция движения" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="SimulateMessages" Tooltip="(Только для IE) При включении будет выполнена симуляция ввода средствами браузера" CatalogName="Custom properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Симуляция ввода" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AutoDepressing" Tooltip="При включении зажатые клавиши (с модификатором +, например [+CTRL]) будут автоматически отжаты после выполнения блока. Если свойство выключено, то необходимо вручную отжать ранее зажатую клавишу (с модификатором -, например [-CTRL])" CatalogName="Custom properties" Type="Bool" Value="True" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Автоматическое отжатие" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>1475</Left>
      <Top>1595</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>00879d00-32e8-4452-bf0d-90c397ff2525</ID>
      <zIndex>18</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors>&lt;StorageSelector&gt;&lt;Selector&gt;&lt;Process Name="chrome" /&gt;&lt;CSSElement Text="5 849 ₽" CSS="SPAN" /&gt;&lt;/Selector&gt;&lt;ThumbImageID&gt;4cffdef8-c8cc-4825-9cd5-ad634b08554d&lt;/ThumbImageID&gt;&lt;Snapshot&gt;AAEAAAD/////AQAAAAAAAAAEAQAAAOIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuRGljdGlvbmFyeWAyW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQQAAAAHVmVyc2lvbghDb21wYXJlcghIYXNoU2l6ZQ1LZXlWYWx1ZVBhaXJzAAMAAwiSAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkdlbmVyaWNFcXVhbGl0eUNvbXBhcmVyYDFbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dCOYBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dW10EAAAACQIAAAADAAAACQMAAAAEAgAAAJIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuR2VuZXJpY0VxdWFsaXR5Q29tcGFyZXJgMVtbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0AAAAABwMAAAAAAQAAAAMAAAAD5AFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5LZXlWYWx1ZVBhaXJgMltbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0E/P///+QBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dAgAAAANrZXkFdmFsdWUBAQYFAAAAB3RhZ05hbWUGBgAAAARTUEFOAfn////8////BggAAAALc291cmNlSW5kZXgGCQAAAAM3NDgB9v////z///8GCwAAAAVjbGFzcwYMAAAAJWMzMTEyLWExIHRzSGVhZGxpbmU1MDBNZWRpdW0gYzMxMTItYjkL&lt;/Snapshot&gt;&lt;Created&gt;26.09.2023 13:46:08&lt;/Created&gt;&lt;/StorageSelector&gt;</StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Получить текст" InternalName="GetUITextInternet" FriendlyName="Получить текст или значение атрибута заданного элемента веб-страницы (заголовка, ссылки, поля редактирования, текстового блока и т.д.)" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Get Control Text.png" PathToToolboxImage="{x:Null}" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="65" Code="&amp;#xA;function GetUITextInternet{{{block_id}}}&amp;#xA;{&amp;#xA; try&amp;#xA; {&amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;    $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;); &amp;#xA;    &amp;#xA;    $UITextType    = &amp;quot;{{{UITextType}}}&amp;quot;;   &amp;#xA;    $ProcessID     = {{{ProcessID}}}; &amp;#xA;    $DelayAfter    = {{{DelayAfter}}}; &amp;#xA;    $DelayBefore   = {{{DelayBefore}}}; &amp;#xA;    $WaitTime      = {{{WaitTime}}};  &amp;#xA;    $AttributeName = {{{AttributeName}}};&amp;#xA;    &amp;#xA;        {{{Result}}} = &amp;quot;&amp;quot;;&amp;#xA;                      &amp;#xA;        Start-Sleep -Seconds $DelayBefore; &amp;#xA;                   &amp;#xA;        $psresultstr = Read-Host(&amp;quot;&amp;lt;block&amp;gt;&amp;lt;ID&amp;gt;{{{block_native_id}}}&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;GetUIText&amp;lt;/InternalName&amp;gt;&amp;lt;ProcessID&amp;gt;$ProcessID&amp;lt;/ProcessID&amp;gt;&amp;lt;UITextType&amp;gt;$UITextType&amp;lt;/UITextType&amp;gt;&amp;lt;InternalType&amp;gt;Internet&amp;lt;/InternalType&amp;gt;&amp;lt;WaitTime&amp;gt;$WaitTime&amp;lt;/WaitTime&amp;gt;&amp;lt;AutoScroll&amp;gt;{{{AutoScroll}}}&amp;lt;/AutoScroll&amp;gt;&amp;lt;AttributeName&amp;gt;$AttributeName&amp;lt;/AttributeName&amp;gt;{{{Selector}}}&amp;lt;/block&amp;gt;&amp;quot;);                                             &amp;#xA;        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);&amp;#xA;        if($__Error.CheckResult($psResult)) { return; }&amp;#xA;      &amp;#xA;        {{{Result}}} = $psResult.Result;  &amp;#xA;        &amp;#xA;        Start-Sleep -Seconds $DelayAfter; &amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_);&amp;#xA;        return;&amp;#xA;    }                                            &amp;#xA;    $__Error.Quit();&amp;#xA;}                   &amp;#xA;                " TextColor="#FFFFFFFF" ProtoName="" Language="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="16"&gt;&lt;Property Name="Selector" Tooltip="[Селектор] Идентификатор окна браузера и элемента веб-страницы" CatalogName="Main properties" Type="Selector" Value="&amp;lt;Selector&amp;gt;&amp;lt;Process Name=&amp;quot;chrome&amp;quot; /&amp;gt;&amp;lt;CSSElement CSS=&amp;quot;SPAN.p8l&amp;quot; /&amp;gt;&amp;lt;/Selector&amp;gt;" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Selector" EnumVariants="{x:Null}" Caption="Селектор" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="UITextType" Tooltip="Выбор типа извлекаемого значения" CatalogName="Main properties" Type="Enum" Value="Text" Visible="True" DefaultValue="" ValueType="{x:Null}" EnumVariants="Text;Class;InnerHtml;InnerText;Href;Attribute" Caption="Тип значения" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AttributeName" Tooltip="[Текст] Имя атрибута. Данное свойство используется при выборе типа значения &amp;quot;Attribute&amp;quot;" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="" Caption="Имя атрибута" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ProcessID" Tooltip="[Ссылка] Переменная, в которой хранится идентификатор процесса и вкладки браузера, используемые данным блоком. Если свойство оставить пустым, либо если переменная &amp;quot;ID процесса&amp;quot; не была ранее присвоена в момент открытия браузера, приложение и вкладка браузера будут определены из содержимого соответствующей строки селектора. ID процесса может быть получен, например, с помощью блоков Запустить IE, Запустить Chrome или Присоединиться к браузеру." CatalogName="Main properties" Type="Variable" Value="$ProcessID" Visible="True" DefaultValue="" ValueType="ProcessID" EnumVariants="" Caption="ID процесса" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="4cffdef8-c8cc-4825-9cd5-ad634b08554d" Visible="False" DefaultValue="&amp;quot;&amp;quot;" ValueType="{x:Null}" EnumVariants="{x:Null}" Caption="ThumbImage" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayBefore" Tooltip="[Число] Задержка в секундах перед выполением блока" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Задержка перед" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayAfter" Tooltip="[Число] Задержка в секундах после выполения блока" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Задержка после" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="WaitTime" Tooltip="[Число] Предельное время ожидания заданного элемента в секундах" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="{x:Null}" Caption="Время ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AutoScroll" Tooltip="Если выбрано, то будет произведен автоматический скроллинг до элемента" CatalogName="Main properties" Type="Bool" Value="True" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="{x:Null}" EnumVariants="" Caption="Автоскроллинг" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Result" Tooltip="[Текст] В указанную переменную будет записан полученный текст или значение атрибута элемента" CatalogName="Output" Type="Variable" Value="$ResultText" Visible="True" DefaultValue="" ValueType="Text" EnumVariants="{x:Null}" Caption="Результат" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>645</Left>
      <Top>875</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>930c3587-e201-4552-a4b7-42c34c6270fb</ID>
      <zIndex>17</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Открыть документ" InternalName="OpenExcelDocument" FriendlyName="Открыть Excel-документ" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\Excel.ico" PathToToolboxImage="{x:Null}" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="103" Code="&amp;#xA;function OpenExcelDocument{{{block_id}}}&amp;#xA;{        &amp;#xA; try&amp;#xA; {&amp;#xA;    {AddTypesXSLX}&amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;    $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;); &amp;#xA;                    &amp;#xA;    $ReadOnly         = ${{{ReadOnly}}};&amp;#xA;    $fileexcel        = {{{Path}}};&amp;#xA;    $usecom           = ${{{UseCOM}}}; &amp;#xA;    $ReadPasswordObj  = {{{ReadPassword}}};&amp;#xA;    $WritePasswordObj = {{{WritePassword}}};  &amp;#xA;    $UpdateLinks      = ${{{UpdateLinks}}};&amp;#xA;        &amp;#xA;        $fileexcel = ExpandConstFilePath $fileexcel&amp;#xA;        &amp;#xA;        $ReadPassword = _checkpassword($ReadPasswordObj);&amp;#xA;        $WritePassword = _checkpassword($WritePasswordObj);       &amp;#xA;&amp;#xA;        if(-not [System.IO.File]::Exists($fileexcel))&amp;#xA;        {&amp;#xA;            $__Error.Exception(&amp;quot;ERRORCONST_PATHNOTFOUND: $fileexcel&amp;quot;);&amp;#xA;            return;&amp;#xA;        }&amp;#xA;        &amp;#xA;        if($usecom)&amp;#xA;        {          &amp;#xA;            Add-Type -AssemblyName 'Microsoft.Office.Interop.Excel'&amp;#xA;            &amp;#xA;            if(!$script:__ExcelInstances) { $script:__ExcelInstances = [MainHelpers.ClassExcelInstances]::new(); }&amp;#xA;            &amp;#xA;            {{{ExcelInstance}}} = New-Object -ComObject Excel.Application;&amp;#xA;            {{{ExcelInstance}}}.DisplayAlerts = $false;&amp;#xA;            {{{ExcelInstance}}}.Visible = ${{{Visible}}};&amp;#xA;                        &amp;#xA;            if([string]::IsNullOrEmpty($ReadPassword))&amp;#xA;            {&amp;#xA;                $ReadPassword_com = [System.Reflection.Missing]::Value;&amp;#xA;            } &amp;#xA;            else&amp;#xA;            {&amp;#xA;                $ReadPassword_com = $ReadPassword;&amp;#xA;            }&amp;#xA;            if([string]::IsNullOrEmpty($WritePassword))&amp;#xA;            {&amp;#xA;                $WritePassword_com = [System.Reflection.Missing]::Value;&amp;#xA;            } &amp;#xA;            else&amp;#xA;            {&amp;#xA;                $WritePassword_com = $WritePassword;&amp;#xA;            }&amp;#xA;            &amp;#xA;            $UpdateLinksObj = [Microsoft.Office.Interop.Excel.XlUpdateLinks]::xlUpdateLinksNever;&amp;#xA;            if($UpdateLinks) { $UpdateLinksObj = [Microsoft.Office.Interop.Excel.XlUpdateLinks]::xlUpdateLinksAlways; }&amp;#xA;            &amp;#xA;            {{{ExcelWorkbookInstance}}} = {{{ExcelInstance}}}.Workbooks.Open($fileexcel, $UpdateLinksObj, $ReadOnly, [System.Reflection.Missing]::Value, $ReadPassword_com, $WritePassword_com, $true); &amp;#xA;&amp;#xA;                        &amp;#xA;            $script:__ExcelInstances.Assign({{{ExcelInstance}}}.hWnd);&amp;#xA;        }&amp;#xA;        else&amp;#xA;        {        &amp;#xA;            $ext = [System.IO.Path]::GetExtension($fileexcel);&amp;#xA;            if($ext -ne &amp;quot;.xlsx&amp;quot; -and $ext -ne &amp;quot;.xlsm&amp;quot;)&amp;#xA;            {&amp;#xA;                $__Error.Exception(&amp;quot;ERRORCONST_ONLYSUPPORTXLSXFILE&amp;quot;); &amp;#xA;                return;&amp;#xA;            }   &amp;#xA;        &amp;#xA;            {{{ExcelInstance}}} = [OfficeOpenXml.ExcelPackage]::new($fileexcel);&amp;#xA;            &amp;#xA;            {{{ExcelWorkbookInstance}}} = {{{ExcelInstance}}}.Workbook;&amp;#xA;           &amp;#xA;            {{{ExcelWorkbookInstance}}}.CalcMode = [OfficeOpenXml.ExcelCalcMode]::Automatic; &amp;#xA;        }&amp;#xA;        &amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_);&amp;#xA;        return;&amp;#xA;    }&amp;#xA;                        &amp;#xA;    $__Error.Quit();&amp;#xA;}                   &amp;#xA;                " TextColor="#FF000000" ProtoName="" Language="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF006838&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF006838&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="16"&gt;&lt;Property Name="ExcelInstance" Tooltip="[Ссылка] Возвращает ссылку на процесс обработки Excel-документа" CatalogName="Output" Type="Variable" Value="$Excel1" Visible="True" DefaultValue="" ValueType="ExcelInstance" EnumVariants="{x:Null}" Caption="Ссылка на Excel" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ExcelWorkbookInstance" Tooltip="[Ссылка] Возвращает ссылку на открытый Excel-документ, в котором в данный момент происходит работа" CatalogName="Output" Type="Variable" Value="$ExcelWorkbook1" Visible="True" DefaultValue="" ValueType="ExcelWorkbookInstance" EnumVariants="{x:Null}" Caption="Ссылка на документ" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="UseCOM" Tooltip="Если галочка установлена, то работа будет происходить с помощью установленного Excel. В противном случае - без него" CatalogName="Main properties" Type="Bool" Value="True" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Использовать COM" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Visible" Tooltip="Если установлена галочка &amp;quot;Использовать COM&amp;quot; и галочка &amp;quot;Видимость&amp;quot;, то интерфейс Excel будет отображаться на экране монитора. Если галочка &amp;quot;Использовать COM&amp;quot; установлена, а галочка &amp;quot;Видимость&amp;quot; снята, то работа будет с физически запущенным в памяти Экселем, при этом его окно не будет видно на экране. Если галочка &amp;quot;Использовать COM&amp;quot; не установлена, то значение свойства &amp;quot;Видимость&amp;quot; учитываться не будет. " CatalogName="Main properties" Type="Bool" Value="True" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="{x:Null}" Caption="Видимость" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReadOnly" Tooltip="Если включено, то документ будет открыт с флагом &amp;quot;Только для чтения&amp;quot;" CatalogName="Main properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Только для чтения" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Path" Tooltip="[Текст] Путь к Excel-документу, который требуется открыть" CatalogName="Required" Type="Expression" Value="&amp;quot;прайслист.xlsx&amp;quot;" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="{x:Null}" Caption="Путь к файлу" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="ReadPassword" Tooltip="[Текст/SecureString] Укажите пароль для чтения документа, если он был указан при сохранении. Если значение не указано, а пароль был задан, то блок приостановит работу пока пользователь не введет пароль" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text/SecureString" EnumVariants="" Caption="Пароль для чтения" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="WritePassword" Tooltip="[Текст/SecureString] Укажите пароль для записи документа, если он был указан при сохранении. Если значение не указано, а пароль был задан, то блок приостановит работу пока пользователь не введет пароль. Можно включить свойство &amp;quot;Только для чтения&amp;quot;, чтобы данный пароль не запрашивался у пользователя" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text/SecureString" EnumVariants="" Caption="Пароль для записи" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="UpdateLinks" Tooltip="Включить автообновление ссылок, иначе обновление происходить не будет" CatalogName="Main properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Обновлять ссылки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>1035</Left>
      <Top>1350</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>359adad0-3cbe-41ba-ad79-e9138a820d87</ID>
      <zIndex>50</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Получить значение ячейки" InternalName="GetExcelCellValue" FriendlyName="Считать значение из ячейки Excel-документа" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\Excel.ico" PathToToolboxImage="{x:Null}" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="102" Code="&amp;#xA;function GetExcelCellValue{{{block_id}}}&amp;#xA;{&amp;#xA;    try&amp;#xA;    {&amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;    $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);  &amp;#xA;             &amp;#xA;        $Worksheet = {{{Worksheet}}};&amp;#xA;        $Row       = {{{Row}}};&amp;#xA;        $Col       = {{{Col}}}; &amp;#xA;        $Cell      = {{{Cell}}}; &amp;#xA;        $GetGroups = ${{{GetGroups}}};&amp;#xA;    &amp;#xA;        $listGroup = New-Object Collections.Generic.List[string];&amp;#xA;        &amp;#xA;        if($Cell.Length -gt 0)&amp;#xA;        {       &amp;#xA;            if($Cell.StartsWith(&amp;quot;R&amp;quot;))&amp;#xA;            {&amp;#xA;                $Cell = $Cell.TrimStart(&amp;quot;R&amp;quot;);&amp;#xA;                $CellArr = $Cell.Split(&amp;quot;C&amp;quot;);&amp;#xA;                $Row = [int]$CellArr[0];&amp;#xA;                $Col = [int]$CellArr[1];&amp;#xA;            }&amp;#xA;            else&amp;#xA;            {&amp;#xA;                $Row     = [int]($Cell -replace &amp;quot;[^0-9]&amp;quot; , '');&amp;#xA;                $nameCol = $Cell -replace $Row.ToString() , '';&amp;#xA;                $Col     = 0;&amp;#xA;                $pow     = 1;&amp;#xA;                for ($i = $nameCol.Length - 1; $i -ge 0; $i--)&amp;#xA;                {&amp;#xA;                    $Col += ($nameCol[$i] - 65 + 1) * $pow;&amp;#xA;                    $pow *= 26;&amp;#xA;                }  &amp;#xA;            }&amp;#xA;        }    &amp;#xA;            &amp;#xA;        $numtemp = 0;&amp;#xA;        if([int]::TryParse($Worksheet, [ref] $numtemp))&amp;#xA;        {&amp;#xA;            $worksheetvalue = $numtemp;&amp;#xA;        }&amp;#xA;        else&amp;#xA;        {&amp;#xA;            $worksheetvalue = $Worksheet;&amp;#xA;        }&amp;#xA;        &amp;#xA;        $typename = {{{ExcelWorkbookInstance}}}.GetType().Name;&amp;#xA;        if($typename -ne &amp;quot;ExcelWorkbook&amp;quot;)&amp;#xA;        {                      &amp;#xA;            $rangecell = {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue).cells.item($Row,$Col);&amp;#xA;            $cellValue = $rangecell.Value2;&amp;#xA;                               &amp;#xA;            if($GetGroups)&amp;#xA;            {&amp;#xA;                $OutlineLevel = [string]$rangecell.EntireRow.OutlineLevel;&amp;#xA;                $OutlineLevelInt = _toint($OutlineLevel);&amp;#xA;                if($OutlineLevelInt -gt 1)&amp;#xA;                {&amp;#xA;                    $temprow = $Row;&amp;#xA;                    $styleOutline = {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue).Outline.SummaryRow;&amp;#xA;                    while($OutlineLevelInt -gt 1)&amp;#xA;                    {&amp;#xA;                        while($true)&amp;#xA;                        {&amp;#xA;                            if($styleOutline -eq 0) { $temprow--; }&amp;#xA;                            else { $temprow++; }&amp;#xA;                            $tempOutlineLevel = {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue).cells.item($temprow,$Col).EntireRow.OutlineLevel;&amp;#xA;                            $tempOutlineLevelInt = _toint($tempOutlineLevel);&amp;#xA;                            if($tempOutlineLevelInt -lt $OutlineLevelInt) { break; }&amp;#xA;                        }&amp;#xA;                        if($styleOutline -eq 0) { $temprangecell = {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue).cells.item($temprow,$Col); }&amp;#xA;                        else { $temprangecell = {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue).cells.item($temprow,$Col); }&amp;#xA;                        $tempcellValue = $temprangecell.Value2;&amp;#xA;                        if($null -eq $tempcellValue) { $tempcellValue = &amp;quot;&amp;quot;; }&amp;#xA;                        $listGroup.Add($tempcellValue.ToString());&amp;#xA;                        $OutlineLevel = [string]$temprangecell.EntireRow.OutlineLevel;&amp;#xA;                        $OutlineLevelInt = _toint($OutlineLevel);&amp;#xA;                    }&amp;#xA;                } &amp;#xA;            }        &amp;#xA;        }&amp;#xA;        else&amp;#xA;        {        &amp;#xA;            if($numtemp -gt 0) { $worksheetvalue-- ; } &amp;#xA;            &amp;#xA;            $rangecell = {{{ExcelWorkbookInstance}}}.Worksheets[$worksheetvalue].Cells[$Row,$Col];&amp;#xA;            $cellValue = $rangecell.Value;&amp;#xA;&amp;#xA;            if($GetGroups)&amp;#xA;            {&amp;#xA;                $OutlineLevel = [string]$rangecell.EntireRow.OutlineLevel;&amp;#xA;                $OutlineLevelInt = _toint($OutlineLevel);&amp;#xA;                if($OutlineLevelInt -gt 0)&amp;#xA;                {&amp;#xA;                    $temprow = $Row;&amp;#xA;                    $styleOutline = 0;&amp;#xA;                    if({{{ExcelWorkbookInstance}}}.WorkSheets[$worksheetvalue].OutLineSummaryBelow) { $styleOutline = 1; }&amp;#xA;                    while($OutlineLevelInt -gt 0)&amp;#xA;                    {&amp;#xA;                        while($true)&amp;#xA;                        {&amp;#xA;                            if($styleOutline -eq 0) { $temprow--; }&amp;#xA;                            else { $temprow++; }&amp;#xA;                            $tempOutlineLevel = {{{ExcelWorkbookInstance}}}.WorkSheets[$worksheetvalue].Cells[$temprow,$Col].EntireRow.OutlineLevel;&amp;#xA;                            $tempOutlineLevelInt = _toint($tempOutlineLevel);&amp;#xA;                            if($tempOutlineLevelInt -lt $OutlineLevelInt) { break; }&amp;#xA;                        }&amp;#xA;                        if($styleOutline -eq 0) { $temprangecell = {{{ExcelWorkbookInstance}}}.WorkSheets[$worksheetvalue].Cells[$temprow,$Col]; }&amp;#xA;                        else { $temprangecell = {{{ExcelWorkbookInstance}}}.WorkSheets[$worksheetvalue].Cells[$temprow,$Col]; }&amp;#xA;                        $tempcellValue = $temprangecell.Value;&amp;#xA;                        if($null -eq $tempcellValue) { $tempcellValue = &amp;quot;&amp;quot;; }&amp;#xA;                        $listGroup.Add($tempcellValue.ToString());&amp;#xA;                        $OutlineLevel = [string]$temprangecell.EntireRow.OutlineLevel;&amp;#xA;                        $OutlineLevelInt = _toint($OutlineLevel);&amp;#xA;                    }&amp;#xA;                }&amp;#xA;            }&amp;#xA;        }  &amp;#xA;           &amp;#xA;        if($null -ne {{{Result}}})&amp;#xA;        {&amp;#xA;            $resultType = {{{Result}}}.GetType().Name;&amp;#xA;            if($null -eq $cellValue) { $cellValue = &amp;quot;&amp;quot;; }&amp;#xA;            &amp;#xA;            if($resultType -eq &amp;quot;Int32&amp;quot;) { $resultValue = _toint($cellValue); }&amp;#xA;            elseif($resultType -eq &amp;quot;Double&amp;quot;) { $resultValue = _todouble($cellValue); }&amp;#xA;            elseif($resultType -eq &amp;quot;Decimal&amp;quot;) { $resultValue = _todecimal($cellValue); }&amp;#xA;            elseif($resultType -eq &amp;quot;Boolean&amp;quot;) { $resultValue = _tobool($cellValue); }&amp;#xA;            elseif($columnType -eq &amp;quot;DateTime&amp;quot;) &amp;#xA;            { &amp;#xA;                $tempval = 0; &amp;#xA;                if([double]::TryParse($cellValue.ToString(), [ref] $tempval)) { $resultValue = [DateTime]::FromOADate($tempval); } &amp;#xA;                else { $resultValue = [DateTime]::Parse($cellValue.ToString()); }&amp;#xA;            } &amp;#xA;            else { $resultValue = $cellValue.ToString(); }  &amp;#xA;        }&amp;#xA;        else&amp;#xA;        {&amp;#xA;            $resultValue = $cellValue;&amp;#xA;        }&amp;#xA;            &amp;#xA;&amp;#xA;        {{{Result}}} = $resultValue; &amp;#xA;        {{{ResultGroups}}} = $listGroup; &amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_);&amp;#xA;        return;&amp;#xA;    }                                                                                                                &amp;#xA;    $__Error.Quit();&amp;#xA;}                   &amp;#xA;                " TextColor="#FF000000" ProtoName="" Language="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF006838&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF006838&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="16"&gt;&lt;Property Name="ExcelWorkbookInstance" Tooltip="[Ссылка] Ссылка на документ, с которым в данный момент происходит работа. Название переменной в данном свойстве должно совпадать с названием переменной в свойстве &amp;quot;Ссылка на документ&amp;quot;, блоков &amp;quot;Создать документ&amp;quot; или &amp;quot;Открыть документ&amp;quot; из группы Excel, которые ранее использовались для создания или открытия данного документа" CatalogName="Required" Type="Variable" Value="$ExcelWorkbook1" Visible="True" DefaultValue="" ValueType="ExcelWorkbookInstance" EnumVariants="{x:Null}" Caption="Ссылка на документ" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="Worksheet" Tooltip="[Число/Текст] ID(порядковый номер) или название листа, на котором расположена требуемая ячейка. Нумерация начинается с 1" CatalogName="Required" Type="Expression" Value="1" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number/Text" EnumVariants="{x:Null}" Caption="Лист" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="Row" Tooltip="[Число] Номер строки, на которой расположена требуемая ячейка. Нумерация начинается с 1" CatalogName="Main properties" Type="Expression" Value="$Index" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="{x:Null}" Caption="Строка" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Col" Tooltip="[Число] Номер столбца, в котором расположена требуемая ячейка. Нумерация начинается с 1" CatalogName="Main properties" Type="Expression" Value="1" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="{x:Null}" Caption="Столбец" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Cell" Tooltip="[Текст] Имя ячейки. Если значение задано, то игнорируются свойства &amp;quot;Строка&amp;quot; и &amp;quot;Столбец&amp;quot;. Например: &amp;quot;B4&amp;quot;" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="" Caption="Имя ячейки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="GetGroups" Tooltip="При включении будут извлекаться группы, в которые входит заданная ячейка. Внимание! На больших документах это может занимать продолжительное время" CatalogName="Main properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="List" EnumVariants="" Caption="Извлекать группы" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Result" Tooltip="[Текст/Число] Возвращает содержимое ячейки того же типа данных, что и в Excel-документе" CatalogName="Output" Type="Variable" Value="$Result" Visible="True" DefaultValue="" ValueType="Text/Number" EnumVariants="{x:Null}" Caption="Результат" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ResultGroups" Tooltip="[Список] Возвращается список групп, в которые входит заданная ячейка" CatalogName="Output" Type="Variable" Value="$ResultGroups" Visible="True" DefaultValue="" ValueType="List" EnumVariants="" Caption="Группы ячейки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FFE6E6FA" Caption="{x:Null}" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FFE6E6FA" Caption="{x:Null}" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FFE6E6FA" Caption="{x:Null}" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>690</Left>
      <Top>1075</Top>
      <Width>100</Width>
      <Height>100</Height>
      <ID>b90cc89c-21a2-49da-b09d-e19855fee802</ID>
      <zIndex>37</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Цикл" InternalName="For" FriendlyName="Цикл позволяет повторить цепочку действий (блоков) несколько раз и при этом посчитать количество итераций цикла, записывая текущее количество в специальную переменную (указанную в свойстве Цикл), которую можно затем использовать в других блоках. При первом входе в блок значение переменной из свойства Цикл приравнивается к Начальному значению, а затем выполнение сценария продолжается в сторону выхода Цикл данного блока (в так называемое &amp;quot;тело цикла&amp;quot;). Как только выполнение сценария вновь дойдет до данного блока, значение переменной Цикл увеличится на значение Шаг, и вновь произойдёт переход в сторону выхода Цикл. Как только значение переменной Цикл станет больше или равно Конечному значению, выполнение сценария продолжится в сторону нижнего выхода блока.&amp;#xA;Не забудьте соединить выход последнего блока в теле цикла со входом данного блока или какого-либо из предшествующих блоков." Width="100" Height="100" PathToImage="ExternalToolboxes\Image\icotb_While simple.png" PathToToolboxImage="ExternalToolboxes\Image\icotb_While.png" ImageType="TopImageDockSmall" NoDelete="False" Invisible="False" Proportional="True" Version="48" Code="&amp;#xA;function For{{{block_id}}}&amp;#xA;{     &amp;#xA;    try&amp;#xA;    {&amp;#xA;        $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;); &amp;#xA;        $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);  &amp;#xA;              &amp;#xA;        &amp;#xA;        if($script:__FuncIndex -gt $script:__LastFuncIndex) &amp;#xA;        { &amp;#xA;            {{{Index}}} = {{{StartIndex}}}; &amp;#xA;            $__Error.Jump(&amp;quot;{{{connector-Index}}}&amp;quot;);&amp;#xA;            return;&amp;#xA;        } &amp;#xA;        else&amp;#xA;        {&amp;#xA;            {{{Index}}} = {{{Index}}} + {{{Step}}};&amp;#xA;            if({{{Step}}} -gt 0)&amp;#xA;            {&amp;#xA;                if ({{{Index}}} -ge {{{EndIndex}}})&amp;#xA;                {                 &amp;#xA;                    $__Error.Jump(&amp;quot;{{{connector-Next}}}&amp;quot;);&amp;#xA;                    return;&amp;#xA;                }&amp;#xA;                else&amp;#xA;                {       &amp;#xA;                    $__Error.Jump(&amp;quot;{{{connector-Index}}}&amp;quot;);&amp;#xA;                    return;&amp;#xA;                }&amp;#xA;            }&amp;#xA;            else&amp;#xA;            {&amp;#xA;                if ({{{Index}}} -lt {{{EndIndex}}})&amp;#xA;                {                 &amp;#xA;                    $__Error.Jump(&amp;quot;{{{connector-Next}}}&amp;quot;);&amp;#xA;                    return;&amp;#xA;                }&amp;#xA;                else&amp;#xA;                {       &amp;#xA;                    $__Error.Jump(&amp;quot;{{{connector-Index}}}&amp;quot;);&amp;#xA;                    return;&amp;#xA;                }&amp;#xA;            }&amp;#xA;        }&amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_); &amp;#xA;        return;&amp;#xA;    } &amp;#xA;            &amp;#xA;    $__Error.Quit();&amp;#xA;}&amp;#xA;" TextColor="#FF000000" ProtoName="" Language="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,10L20,0 40,10 20,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,10L20,0 40,10 20,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="8"&gt;&lt;Property Name="StartIndex" Tooltip="[Число] Начальное значение переменной из свойства Цикл, будет присвоено этой переменной в начале цикла" CatalogName="Required" Type="Expression" Value="2" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Начальное значение" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="EndIndex" Tooltip="[Число] Конечное значение переменной из свойства Цикл. Итерации цикла будут выполняться пока значение переменной Цикл меньше заданного в этом свойстве" CatalogName="Required" Type="Expression" Value="6" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Конечное значение" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="Step" Tooltip="[Число] Шаг приращения значения переменной из свойства Цикл в каждой итерации цикла. Шаг может иметь отрицательное значение, это полезно когда Начальное значение больше Конечного значения, и требуется считать в обратную сторону." CatalogName="Required" Type="Expression" Value="1" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Шаг" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="Index" Tooltip="[Число] Переменная, в которую будет записано текущее значение цикла. Например: если Начальное значение = 0, Конечное значение = 7, а Шаг = 2, то значениями цикла будут последовательно числа 0,2,4,6." CatalogName="Output" Type="Variable" Value="$Index" Visible="True" DefaultValue="" ValueType="Number" EnumVariants="" Caption="Цикл" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorDirection" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Right&amp;quot; - направо; &amp;quot;Bottom&amp;quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &amp;quot;Если ошибка&amp;quot; (например блок &amp;quot;Условие&amp;quot;). Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Right;Bottom" Caption="Направление выхода" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Index" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FF008000" Caption="Цикл" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>1195</Left>
      <Top>2025</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>8a6541d8-8d37-4a15-89a6-9992cae07860</ID>
      <zIndex>23</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Записать значение в ячейку" InternalName="SetExcelCellValue" FriendlyName="Записать значение в ячейку Excel-документа" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\Excel.ico" PathToToolboxImage="{x:Null}" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="177" Code="&amp;#xA;function SetExcelCellValue{{{block_id}}}&amp;#xA;{   &amp;#xA; try&amp;#xA; {&amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;    $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);&amp;#xA;                         &amp;#xA;    $Worksheet = {{{Worksheet}}};&amp;#xA;    $Row       = {{{Row}}};&amp;#xA;    $Col       = {{{Col}}};&amp;#xA;    $Cell      = {{{Cell}}};&amp;#xA;    $Value     = {{{Value}}};&amp;#xA;    $TypeValue = &amp;quot;{{{TypeValue}}}&amp;quot;;&amp;#xA;    &amp;#xA;        if($Cell.Length -gt 0)&amp;#xA;        {&amp;#xA;            if($Cell.StartsWith(&amp;quot;R&amp;quot;) -and $Cell.Contains(&amp;quot;C&amp;quot;))&amp;#xA;            {&amp;#xA;                $Cell = $Cell.TrimStart(&amp;quot;R&amp;quot;);&amp;#xA;                $CellArr = $Cell.Split(&amp;quot;C&amp;quot;);&amp;#xA;                $Row = [int]$CellArr[0];&amp;#xA;                $Col = [int]$CellArr[1];&amp;#xA;            }&amp;#xA;            else&amp;#xA;            {&amp;#xA;                $Row     = [int]($Cell -replace &amp;quot;[^0-9]&amp;quot; , '');&amp;#xA;                $nameCol = $Cell -replace $Row.ToString() , '';&amp;#xA;                $Col     = 0;&amp;#xA;                $pow     = 1;&amp;#xA;                for ($i = $nameCol.Length - 1; $i -ge 0; $i--)&amp;#xA;                {&amp;#xA;                    $Col += ($nameCol[$i] - 65 + 1) * $pow;&amp;#xA;                    $pow *= 26;&amp;#xA;                }  &amp;#xA;            }&amp;#xA;        } &amp;#xA;           &amp;#xA;        if([string]::IsNullOrEmpty($Value)) { $Value = &amp;quot;&amp;quot;; }&amp;#xA;              &amp;#xA;        if($TypeValue -eq &amp;quot;Number&amp;quot;)&amp;#xA;        {                         &amp;#xA;            $value_str  = $Value.ToString();&amp;#xA;            $writeValue = [float]::Parse($value_str.Replace(&amp;quot;,&amp;quot;, &amp;quot;.&amp;quot;), [CultureInfo]::InvariantCulture);&amp;#xA;        }&amp;#xA;        elseif($TypeValue -eq &amp;quot;Money&amp;quot;)&amp;#xA;        {         &amp;#xA;            $value_str  = $Value.ToString();&amp;#xA;            $valmoney   = [decimal]::Parse($value_str.Replace(&amp;quot;,&amp;quot;, &amp;quot;.&amp;quot;), [CultureInfo]::InvariantCulture);&amp;#xA;            $writeValue = [decimal][Math]::Round($valmoney, 2);&amp;#xA;        } &amp;#xA;        elseif($TypeValue -eq &amp;quot;Text&amp;quot;) &amp;#xA;        {&amp;#xA;            $writeValue = $Value.ToString();&amp;#xA;        }  &amp;#xA;        else&amp;#xA;        {&amp;#xA;            $writeValue = $Value;&amp;#xA;        }&amp;#xA;           &amp;#xA;        $numtemp = 0;&amp;#xA;        if([int]::TryParse($Worksheet, [ref] $numtemp))&amp;#xA;        {&amp;#xA;            $worksheetvalue = $numtemp;&amp;#xA;        }&amp;#xA;        else&amp;#xA;        {&amp;#xA;            $worksheetvalue = $Worksheet;&amp;#xA;        }&amp;#xA;          &amp;#xA;        &amp;#xA;        $typename = {{{ExcelWorkbookInstance}}}.GetType().Name;&amp;#xA;        if($typename -ne &amp;quot;ExcelWorkbook&amp;quot;)&amp;#xA;        {      &amp;#xA;            $worksheetobj = {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue);&amp;#xA;            if($TypeValue -eq &amp;quot;Image&amp;quot;)&amp;#xA;            {        &amp;#xA;                $range = $worksheetobj.cells.item($Row,$Col);&amp;#xA;                $Left = [float]$range.Left;&amp;#xA;                $Top = [float]$range.Top;&amp;#xA;                $worksheetobj.Shapes.AddPicture($writeValue, [Microsoft.Office.Core.MsoTriState]::msoFalse, [Microsoft.Office.Core.MsoTriState]::msoCTrue, $Left, $Top, -1, -1);&amp;#xA;            } &amp;#xA;            else&amp;#xA;            {&amp;#xA;                if($TypeValue -eq &amp;quot;Text&amp;quot;)&amp;#xA;                {   &amp;#xA;                    $isformula = $false; &amp;#xA;                    if($writeValue.Length -gt 0)&amp;#xA;                    {&amp;#xA;                        if($writeValue[0] -eq &amp;quot;=&amp;quot;) { $isformula=$true; }&amp;#xA;                    } &amp;#xA;                    if(!$isformula) { try { $worksheetobj.cells.item($Row,$Col).NumberFormat = &amp;quot;@&amp;quot;; } catch{} }&amp;#xA;                }&amp;#xA;                $worksheetobj.cells.item($Row,$Col) = $writeValue;&amp;#xA;            }&amp;#xA;        }&amp;#xA;        else&amp;#xA;        {    &amp;#xA;            if($numtemp -gt 0) { $worksheetvalue-- ; }&amp;#xA;            $worksheetobj = {{{ExcelWorkbookInstance}}}.Worksheets[$worksheetvalue];&amp;#xA;            if($TypeValue -eq &amp;quot;Image&amp;quot;)&amp;#xA;            {&amp;#xA;                $image = [System.Drawing.Image]::FromFile($writeValue);&amp;#xA;                $excelImage = $worksheetobj.Drawings.AddPicture(&amp;quot;My image&amp;quot;, $image);&amp;#xA;                $excelImage.SetPosition($Row-1, 0, $Col-1, 0);&amp;#xA;            }&amp;#xA;            else&amp;#xA;            {&amp;#xA;                $isformula = $false;            &amp;#xA;                if($writeValue.GetType().Name -eq &amp;quot;String&amp;quot;)&amp;#xA;                {&amp;#xA;                    if($writeValue.Length -gt 0)&amp;#xA;                    {&amp;#xA;                        if($writeValue[0] -eq &amp;quot;=&amp;quot;) { $isformula=$true; }&amp;#xA;                    }    &amp;#xA;                }&amp;#xA;&amp;#xA;                if($isformula)&amp;#xA;                {&amp;#xA;                    $writeValue = $writeValue.TrimStart(&amp;quot;=&amp;quot;);&amp;#xA;                    $worksheetobj.Cells[$Row,$Col].Formula = $writeValue;&amp;#xA;                }&amp;#xA;                else &amp;#xA;                {       &amp;#xA;                    $worksheetobj.Cells[$Row,$Col].Value = $writeValue;&amp;#xA;                }            &amp;#xA;            }&amp;#xA;        }&amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_);&amp;#xA;        return;&amp;#xA;    }                                                                                                                    &amp;#xA;    $__Error.Quit();&amp;#xA;}                   &amp;#xA;                " TextColor="#FF000000" ProtoName="" Language="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF006838&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF006838&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="16"&gt;&lt;Property Name="ExcelWorkbookInstance" Tooltip="[Ссылка] Ссылка на документ, с которым в данный момент происходит работа. Название переменной в данном свойстве должно совпадать с названием переменной в свойстве &amp;quot;Ссылка на документ&amp;quot;, блоков &amp;quot;Создать документ&amp;quot; или &amp;quot;Открыть документ&amp;quot; из группы Excel, которые ранее использовались для создания или открытия данного документа" CatalogName="Required" Type="Variable" Value="$ExcelWorkbook1" Visible="True" DefaultValue="" ValueType="ExcelWorkbookInstance" EnumVariants="{x:Null}" Caption="Ссылка на документ" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="Worksheet" Tooltip="[Число/Текст] ID(порядковый номер) или название листа, на котором расположена требуемая ячейка. Нумерация начинается с 1" CatalogName="Required" Type="Expression" Value="1" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number/Text" EnumVariants="{x:Null}" Caption="Лист" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="Row" Tooltip="[Число] Номер строки, на которой расположена требуемая ячейка. Нумерация начинается с 1" CatalogName="Required" Type="Expression" Value="$Index" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="{x:Null}" Caption="Строка" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="Col" Tooltip="[Число] Номер столбца, в котором расположена требуемая ячейка. Нумерация начинается с 1" CatalogName="Required" Type="Expression" Value="2" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="{x:Null}" Caption="Столбец" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="Cell" Tooltip="[Текст] Имя ячейки. Если значение задано, то игнорируются свойства &amp;quot;Строка&amp;quot; и &amp;quot;Столбец&amp;quot;. Например: &amp;quot;B4&amp;quot;" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="" Caption="Имя ячейки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Value" Tooltip="[Текст/Число] Константа, переменная или результат вычислений, которые необходимо записать в требуемую ячейку. Для записи формулы в ячейку начинайте ее писать со знака равно, например: &amp;quot;=SUM(A2:A10)&amp;quot;" CatalogName="Required" Type="Expression" Value="$Table[1]" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text/Number" EnumVariants="{x:Null}" Caption="Значение" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="TypeValue" Tooltip="Тип записываемого значения. Возможные варианты: Any - запись без преобразования; Text - значение запсиывается как текст; Number - значение записывается как число; Money - значение записывается как денежный тип (происходит округление до 2 знака после запятой); Image - изображение (в свойстве &amp;quot;Значение&amp;quot; указывается полный путь к изображению на диске)" CatalogName="Main properties" Type="Enum" Value="Any" Visible="True" DefaultValue="" ValueType="" EnumVariants="Any;Text;Number;Money;Image" Caption="Тип значения" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FFE6E6FA" Caption="{x:Null}" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FFE6E6FA" Caption="{x:Null}" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FFE6E6FA" Caption="{x:Null}" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>705</Left>
      <Top>1535</Top>
      <Width>70</Width>
      <Height>70</Height>
      <ID>c6d5c9c1-8be5-4695-b585-bdc6d7ab7ae7</ID>
      <zIndex>4</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Конец" InternalName="ReturnOrStop" FriendlyName="Блок обозначает завершение работы сценария или возврат из диаграммы подпроцесса в основной процесс. В диаграмме можно использовать более одного блока Конец. В диаграмме подпроцесса должен быть хотя бы один такой блок, иначе после завершения работы подпроцесса не произойдёт возврат в основной процесс." Width="70" Height="70" PathToImage="ExternalToolboxes\Image\ico_Process Stop.png" PathToToolboxImage="ExternalToolboxes\Image\icotb_Process Stop.png" ImageType="OnlyImage" NoDelete="False" Invisible="False" Proportional="True" Version="113" Code="&amp;#xA;function ReturnOrStop{{{block_id}}}&amp;#xA;{       &amp;#xA;    try&amp;#xA;    {&amp;#xA;    $currentblockid = &amp;quot;{{{block_native_id}}}&amp;quot;;&amp;#xA;       &amp;#xA;        $Value        = {{{Value}}};&amp;#xA;        $SendOrkest   = ${{{SendOrkest}}};&amp;#xA;        $IsScreenshot = ${{{IsScreenshot}}};&amp;#xA;        &amp;#xA;        $ValueStr = VarToString($Value); &amp;#xA;             &amp;#xA;        $val = _shield $ValueStr;&amp;#xA;        if($SendOrkest -or $IsScreenshot)&amp;#xA;        {                      &amp;#xA;            if($val.Length -eq 0)&amp;#xA;            {&amp;#xA;                $val = &amp;quot;Screenshot &amp;quot;+[DateTime]::Now.ToString();&amp;#xA;            }&amp;#xA;            Write-Host(&amp;quot;&amp;lt;block&amp;gt;&amp;lt;ID&amp;gt;{{{block_native_id}}}&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;SendLogOrkest&amp;lt;/InternalName&amp;gt;&amp;lt;UITextValue&amp;gt;$val&amp;lt;/UITextValue&amp;gt;&amp;lt;UITextType&amp;gt;Info&amp;lt;/UITextType&amp;gt;&amp;lt;IsScreenshot&amp;gt;{{{IsScreenshot}}}&amp;lt;/IsScreenshot&amp;gt;&amp;lt;/block&amp;gt;&amp;quot;); &amp;#xA;        }&amp;#xA;        if($val.Length -gt 0)&amp;#xA;        {&amp;#xA;            $xmlvar = &amp;quot;&amp;quot;;&amp;#xA;            try&amp;#xA;            {&amp;#xA;                $xmlvar = $script:__BinFormatter.vartoxmlraw($Value);&amp;#xA;            }&amp;#xA;            catch{} &amp;#xA;            Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;{{{block_native_id}}}&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;Log&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$val&amp;lt;/InternalValue&amp;gt;$xmlvar&amp;lt;/info&amp;gt;&amp;quot;);&amp;#xA;        }&amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;    }&amp;#xA;    &amp;#xA;    try&amp;#xA;    {&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable1}}} = {{{Expression1}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable1: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable2}}} = {{{Expression2}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable2: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable3}}} = {{{Expression3}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable3: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable4}}} = {{{Expression4}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable4: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable5}}} = {{{Expression5}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable5: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression6}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression6: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression7}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression7: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression8}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression8: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression9}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression9: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression10}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression10: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA; &amp;#xA;    }&amp;#xA;    catch {}&amp;#xA;    &amp;#xA;    $__Error.Quit(); &amp;#xA;    try&amp;#xA;    {    &amp;#xA;        $script:__NextBlockID = &amp;quot;&amp;quot;;&amp;#xA;        $ProcessContainer = &amp;quot;&amp;quot;; &amp;#xA;        if ($script:__callstack.Count -gt 0)&amp;#xA;        {&amp;#xA;            $stackitem = $script:__callstack.Pop();&amp;#xA;            $script:__NextBlockID = $stackitem.ConnectorNext;&amp;#xA;            $ProcessContainer = $stackitem.ProcessContainer;&amp;#xA;            while($script:__NextBlockID.Length -eq 0)&amp;#xA;            {       &amp;#xA;                if ($script:__callstack.Count -eq 0) { break; } &amp;#xA;                $containerName = $stackitem.ProcessContainer;&amp;#xA;                if($containerName.StartsWith(&amp;quot;TryCatchContainer&amp;quot;) -or $containerName.StartsWith(&amp;quot;CollapseContainer&amp;quot;))&amp;#xA;                {&amp;#xA;                    $__Error.Quit();&amp;#xA;                    $stackitem = $script:__callstack.Pop();&amp;#xA;                    $script:__NextBlockID = $stackitem.ConnectorNext;  &amp;#xA;                    $ProcessContainer = $stackitem.ProcessContainer;&amp;#xA;                }&amp;#xA;                else&amp;#xA;                {&amp;#xA;                    break;&amp;#xA;                }&amp;#xA;            } &amp;#xA;                       &amp;#xA;            if($script:__RobotFileVersion -eq &amp;quot;125&amp;quot;)&amp;#xA;            {        &amp;#xA;                if($ProcessContainer.StartsWith(&amp;quot;TryCatchContainer&amp;quot;) -or $ProcessContainer.StartsWith(&amp;quot;CollapseContainer&amp;quot;))&amp;#xA;                {&amp;#xA;                &amp;#xA;                }&amp;#xA;                else&amp;#xA;                {&amp;#xA;                    try&amp;#xA;                    { &amp;#xA;                        $callOut = $ProcessContainer + &amp;quot;Out&amp;quot;; &amp;amp;$callOut;&amp;#xA;                    }&amp;#xA;                    catch&amp;#xA;                    {       &amp;#xA;                        $guidstr        = $ProcessContainer.Substring($ProcessContainer.Length - 32);&amp;#xA;                        $currentblockid = [Guid]::Parse($guidstr).ToString();  &amp;#xA;                        $errormes       = &amp;quot;Error in output parameters: &amp;quot; + $_.Exception.Message;  &amp;#xA;                        try {&amp;#xA;                            $othermsg = $_.InvocationInfo.Line.Trim();&amp;#xA;                            if(-not $othermsg.StartsWith(&amp;quot;throw&amp;quot;)) {&amp;#xA;                                $errormes += &amp;quot; : &amp;quot; + $othermsg; &amp;#xA;                            }&amp;#xA;                        }&amp;#xA;                        catch { }&amp;#xA;                        Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlock&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormes&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;);&amp;#xA;                        $script:__ScriptAborted = $true;&amp;#xA;                        $script:__NextBlockID = &amp;quot;&amp;quot;;   &amp;#xA;                        $script:__LastBlockID = $currentblockid;&amp;#xA;                        return;&amp;#xA;                    }&amp;#xA;                }                        &amp;#xA;            }&amp;#xA;        } &amp;#xA;    }&amp;#xA;    catch{} &amp;#xA;    $script:__LastBlockID = &amp;quot;{{{block_native_id}}}&amp;quot;;&amp;#xA;}               &amp;#xA;                " TextColor="#FF000000" ProtoName="" Language="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M75,50C75,63.8071187457698 63.8071187457698,75 50,75 36.1928812542302,75 25,63.8071187457698 25,50 25,36.1928812542302 36.1928812542302,25 50,25 63.8071187457698,25 75,36.1928812542302 75,50z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M75,50C75,63.8071187457698 63.8071187457698,75 50,75 36.1928812542302,75 25,63.8071187457698 25,50 25,36.1928812542302 36.1928812542302,25 50,25 63.8071187457698,25 75,36.1928812542302 75,50z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="32"&gt;&lt;Property Name="Value" Tooltip="[Любой тип данных] Числовая, текстовая константа (в кавычках), имя переменной (начинающееся с $) или любое выражение, значение которого будет выведено в лог в процессе работы сценария робота. Значение может в том числе иметь сложный тип данных, например Список, Таблица или Словарь." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Записать в лог" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable1" Tooltip="[Переменная] Имя первой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 1" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression1" Tooltip="[Любой тип данных] Новое значение первой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 1" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable2" Tooltip="[Переменная] Имя второй переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 2" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression2" Tooltip="[Любой тип данных] Новое значение второй переменной. Свойство игнорируется, если не задано имя второй переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 2" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable3" Tooltip="[Переменная] Имя третьей переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 3" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression3" Tooltip="[Любой тип данных] Новое значение третьей переменной. Свойство игнорируется, если не задано имя третьей переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 3" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable4" Tooltip="[Переменная] Имя четвертой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 4" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression4" Tooltip="[Любой тип данных] Новое значение четвертой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 4" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable5" Tooltip="[Переменная] Имя пятой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 5" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression5" Tooltip="[Любой тип данных] Новое значение пятой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 5" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression6" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Выражение 1" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression7" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Выражение 2" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression8" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Выражение 3" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression9" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Выражение 4" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression10" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Выражение 5" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="SendOrkest" Tooltip="Если выбрано, то текст будет также логироваться в оркестратор, если подключение к нему активно" CatalogName="Main properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Логировать в оркестратор" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="IsScreenshot" Tooltip="Если выбрано, то будет создан скриншот экрана и отправлен в оркестратор, если подключение к нему активно" CatalogName="Main properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Скриншот в оркестратор" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>640</Left>
      <Top>1300</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>fe140166-acf3-47d0-877f-ffe794525b4a</ID>
      <zIndex>8</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Окно с сообщением" InternalName="MessageBox" FriendlyName="Показать пользователю модальное диалоговое окно с заданным заголовком, текстом и набором кнопок. Если используется окно с несколькими кнопками, блок позволяет записать в переменную текстовую константу, соответствующую нажатой пользователем кнопке." Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Dialogs.png" PathToToolboxImage="{x:Null}" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="67" Code="&amp;#xA;function MessageBox{{{block_id}}}&amp;#xA;{&amp;#xA;    try&amp;#xA;    {&amp;#xA;        $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;        $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);&amp;#xA;          &amp;#xA;        $Title       = {{{Title}}};&amp;#xA;        $Message     = {{{Message}}}; &amp;#xA;        $WaitTimeObj = {{{WaitTime}}}; &amp;#xA;        $WordWrap    = ${{{WordWrap}}};&amp;#xA;    &amp;#xA;        $form = [PSHelpers.ClassMessageBox]::new();&amp;#xA;       &amp;#xA;        try { $form.WaitTime = _toint($WaitTimeObj); }&amp;#xA;        catch{}  &amp;#xA;        try { $form.WordWrap = $WordWrap; }&amp;#xA;        catch{}&amp;#xA;        &amp;#xA;        $Message = VarToString($Message);&amp;#xA;        $result  = $form.Show($Title, $Message, &amp;quot;{{{Buttons}}}&amp;quot;, &amp;quot;{{{MessageImage}}}&amp;quot;);&amp;#xA;        if($result.IsError)&amp;#xA;        {           &amp;#xA;            $__Error.Exception($result.ErrorMessage);&amp;#xA;            return;&amp;#xA;        } &amp;#xA;           &amp;#xA;        {{{Result}}} = $result.Value;&amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_);&amp;#xA;        return;&amp;#xA;    }&amp;#xA;    $__Error.Quit();&amp;#xA;}                   &amp;#xA;                " TextColor="#FF000000" ProtoName="" Language="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF4870C1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF4870C1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="16"&gt;&lt;Property Name="Title" Tooltip="[Текст] Текст, значение переменной или результат вычислений, который будет отображен в заголовке диалогового окна" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="{x:Null}" Caption="Заголовок" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Message" Tooltip="[Текст] Текст, значение переменной или результат вычислений, который будет отображен  внутри диалогового окна" CatalogName="Required" Type="Expression" Value="&amp;quot;таблица сохранена&amp;quot;" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="{x:Null}" Caption="Сообщение" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="Buttons" Tooltip="Кнопки, которые будут доступны пользователю для нажатия" CatalogName="Main properties" Type="Enum" Value="OK" Visible="True" DefaultValue="" ValueType="" EnumVariants="OK;OKCancel;YesNo;YesNoCancel" Caption="Кнопки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="MessageImage" Tooltip="Изображение, которое будет отображаться в диалоговом окне" CatalogName="Main properties" Type="Enum" Value="None" Visible="True" DefaultValue="" ValueType="" EnumVariants="None;Error;Exclamation;Hand;Information;Question;Warning;Stop;Asterisk" Caption="Изображение" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="WaitTime" Tooltip="[Число] Время ожидания. Если задано значение больше нуля, то окно автоматически закроется через это время. В свойство &amp;quot;Результат&amp;quot; при этом будет записано первое значение из указанных в свойстве &amp;quot;Кнопки&amp;quot;." CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Время ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="WordWrap" Tooltip="Включается перенос строк" CatalogName="Main properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Перенос строк" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Result" Tooltip="[Текст] Переменная, в которую будет сохранено название кнопки, нажатой пользователем. Один из возможных результатов: OK, Cancel, Yes, No. Данные текстовые константы не зависят от языка робота или операционной системы" CatalogName="Output" Type="Variable" Value="$Result" Visible="True" DefaultValue="" ValueType="Text" EnumVariants="{x:Null}" Caption="Результат" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>1035</Left>
      <Top>1150</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>fda7fb5c-9183-482b-887a-a964eda3c82e</ID>
      <zIndex>51</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors>&lt;StorageSelector&gt;&lt;Selector&gt;&lt;Process Name="chrome" /&gt;&lt;CSSElement CSS="INPUT[name='text']" /&gt;&lt;/Selector&gt;&lt;ThumbImageID&gt;7d79d1c9-a126-4931-b464-6a17dbce9356&lt;/ThumbImageID&gt;&lt;Snapshot&gt;AAEAAAD/////AQAAAAAAAAAEAQAAAOIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuRGljdGlvbmFyeWAyW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQQAAAAHVmVyc2lvbghDb21wYXJlcghIYXNoU2l6ZQ1LZXlWYWx1ZVBhaXJzAAMAAwiSAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkdlbmVyaWNFcXVhbGl0eUNvbXBhcmVyYDFbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dCOYBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dW10NAAAACQIAAAARAAAACQMAAAAEAgAAAJIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuR2VuZXJpY0VxdWFsaXR5Q29tcGFyZXJgMVtbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0AAAAABwMAAAAAAQAAAAwAAAAD5AFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5LZXlWYWx1ZVBhaXJgMltbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0E/P///+QBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dAgAAAANrZXkFdmFsdWUBAQYFAAAAB3RhZ05hbWUGBgAAAAVJTlBVVAH5/////P///wYIAAAAC3NvdXJjZUluZGV4BgkAAAAEMTUwNQH2/////P///wYLAAAAC3BsYWNlaG9sZGVyBgwAAAAW0JjRgdC60LDRgtGMINC90LAgT3pvbgHz/////P///wYOAAAABHR5cGUGDwAAAAR0ZXh0AfD////8////BhEAAAAEbmFtZQYSAAAABHRleHQB7f////z///8GFAAAAA5hdXRvY2FwaXRhbGl6ZQYVAAAAA29mZgHq/////P///wYXAAAADGF1dG9jb21wbGV0ZQYYAAAAA29mZgHn/////P///wYaAAAAC2F1dG9jb3JyZWN0BhsAAAADb2ZmAeT////8////Bh0AAAAKc3BlbGxjaGVjawYeAAAABWZhbHNlAeH////8////BiAAAAAJbWF4bGVuZ3RoBiEAAAADMjU1Ad7////8////BiMAAAAFY2xhc3MGJAAAABN5NHYgdHNCb2R5NTAwTWVkaXVtAdv////8////BiYAAAAFc3R5bGUGJwAAAAtvcGFjaXR5OiAxOws=&lt;/Snapshot&gt;&lt;Created&gt;26.09.2023 13:01:44&lt;/Created&gt;&lt;/StorageSelector&gt;</StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Нажать клавиши" InternalName="PressKeysInternet" FriendlyName="Эмуляция нажатия клавиш на клавиатуре. Может эмулировать как непрерывный ввод текста, так и нажатия комбинаций клавиш, а также любые сочетания специальных клавиш и текста. В составе комбинаций могут использоваться не только клавиши клавиатуры, но и мыши. Для записи комбинаций клавиш зайдите в окно селектора и нажмите кнопку &amp;quot;Запись&amp;quot;" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Press Keys.png" PathToToolboxImage="{x:Null}" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="47" Code="&amp;#xA;function PressKeysInternet{{{block_id}}}&amp;#xA;{&amp;#xA;    try&amp;#xA;    {&amp;#xA;        $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;        $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);&amp;#xA;           &amp;#xA;        $KeysValueObj     = {{{KeysValue}}};&amp;#xA;        $ProcessID        = {{{ProcessID}}};  &amp;#xA;        $InteractiveDelay = {{{InteractiveDelay}}}; &amp;#xA;        $DelayAfter       = {{{DelayAfter}}}; &amp;#xA;        $DelayBefore      = {{{DelayBefore}}}; &amp;#xA;        $WaitTime         = {{{WaitTime}}}; &amp;#xA;        $OnlyText         = ${{{OnlyText}}};  &amp;#xA;        $OffsetX          = {{{OffsetX}}};&amp;#xA;        $OffsetY          = {{{OffsetY}}};  &amp;#xA;        $DelayBeforeSelector2 = {{{DelayBeforeSelector2}}};&amp;#xA;        $WaitTimeSelector2    = {{{WaitTimeSelector2}}};&amp;#xA;        $AttemptsSelector2    = {{{AttemptsSelector2}}}; &amp;#xA;        $AppearTypeSelector2  = &amp;quot;{{{AppearTypeSelector2}}}&amp;quot;;&amp;#xA;        &amp;#xA;        Start-Sleep -Seconds $DelayBefore; &amp;#xA;                  &amp;#xA;        $KeysValue = _checkpassword($KeysValueObj);&amp;#xA;        &amp;#xA;        if($OnlyText)&amp;#xA;        {&amp;#xA;            $KeysValue = &amp;quot;[TEXT]&amp;quot; + $KeysValue;&amp;#xA;        }&amp;#xA;        &amp;#xA;        $val = _shield $KeysValue;&amp;#xA;        &amp;#xA;        $psresultstr = Read-Host(&amp;quot;&amp;lt;block&amp;gt;&amp;lt;ID&amp;gt;{{{block_native_id}}}&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;SendKeys&amp;lt;/InternalName&amp;gt;&amp;lt;ProcessID&amp;gt;$ProcessID&amp;lt;/ProcessID&amp;gt;&amp;lt;InternalType&amp;gt;Internet&amp;lt;/InternalType&amp;gt;&amp;lt;InteractiveType&amp;gt;{{{InteractiveType}}}&amp;lt;/InteractiveType&amp;gt;&amp;lt;InteractiveDelay&amp;gt;$InteractiveDelay&amp;lt;/InteractiveDelay&amp;gt;&amp;lt;OffsetX&amp;gt;$OffsetX&amp;lt;/OffsetX&amp;gt;&amp;lt;OffsetY&amp;gt;$OffsetY&amp;lt;/OffsetY&amp;gt;&amp;lt;KeysValue&amp;gt;$val&amp;lt;/KeysValue&amp;gt;&amp;lt;SelectAll&amp;gt;{{{SelectAll}}}&amp;lt;/SelectAll&amp;gt;&amp;lt;WaitTime&amp;gt;$WaitTime&amp;lt;/WaitTime&amp;gt;&amp;lt;SimulateMessages&amp;gt;{{{SimulateMessages}}}&amp;lt;/SimulateMessages&amp;gt;&amp;lt;SimulateMove&amp;gt;{{{SimulateMove}}}&amp;lt;/SimulateMove&amp;gt;&amp;lt;AutoScroll&amp;gt;{{{AutoScroll}}}&amp;lt;/AutoScroll&amp;gt;&amp;lt;AutoDepressing&amp;gt;{{{AutoDepressing}}}&amp;lt;/AutoDepressing&amp;gt;{{{Selector}}}&amp;lt;DelayBeforeSelector2&amp;gt;$DelayBeforeSelector2&amp;lt;/DelayBeforeSelector2&amp;gt;&amp;lt;WaitTimeSelector2&amp;gt;$WaitTimeSelector2&amp;lt;/WaitTimeSelector2&amp;gt;&amp;lt;AttemptsSelector2&amp;gt;$AttemptsSelector2&amp;lt;/AttemptsSelector2&amp;gt;&amp;lt;AppearTypeSelector2&amp;gt;$AppearTypeSelector2&amp;lt;/AppearTypeSelector2&amp;gt;{{{Selector2}}}&amp;lt;/block&amp;gt;&amp;quot;);                        &amp;#xA;        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);&amp;#xA;        if($__Error.CheckResult($psResult)) { return; } &amp;#xA;        &amp;#xA;        Start-Sleep -Seconds $DelayAfter; &amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_);&amp;#xA;        return;&amp;#xA;    }&amp;#xA;    $__Error.Quit();  &amp;#xA;}                   &amp;#xA;                " TextColor="#FFFFFFFF" ProtoName="" Language="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="32"&gt;&lt;Property Name="KeysValue" Tooltip="[Текст] Текст или клавиши, которые необходимо эмулировать. Например: &amp;quot;Test text&amp;quot; - будут эмулироваться клавиши для ввода этой строки; &amp;quot;[ENTER]&amp;quot; - будет нажата клавиша Enter. В рамках одного блока можно сочетать непрерывный ввод текста и нажатия клавиш. Для записи комбинаций клавиш зайдите в окно селектора и нажмите кнопку &amp;quot;Запись&amp;quot;" CatalogName="Required" Type="Expression" Value="&amp;quot;[LBUTTON]&amp;quot;" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="{x:Null}" Caption="Клавиши" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="Selector" Tooltip="[Селектор] Идентификатор окна браузера и элемента веб-страницы. Если задано данное свойство, то фокус будет установлен на заданный элемент веб-страницы перед началом ввода текста." CatalogName="Main properties" Type="Selector" Value="&amp;lt;Selector&amp;gt;&amp;lt;Process Name=&amp;quot;chrome&amp;quot; /&amp;gt;&amp;lt;CSSElement CSS=&amp;quot;INPUT[name='text']&amp;quot; /&amp;gt;&amp;lt;/Selector&amp;gt;" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Selector" EnumVariants="{x:Null}" Caption="Селектор" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="7d79d1c9-a126-4931-b464-6a17dbce9356" Visible="False" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="{x:Null}" Caption="ThumbImage" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ProcessID" Tooltip="[Ссылка] Переменная, в которой хранится идентификатор процесса и вкладки браузера, используемые данным блоком. Если свойство оставить пустым, либо если переменная &amp;quot;ID процесса&amp;quot; не была ранее присвоена в момент открытия браузера, приложение и вкладка браузера будут определены из содержимого соответствующей строки селектора. ID процесса может быть получен, например, с помощью блоков Запустить IE, Запустить Chrome или Присоединиться к браузеру." CatalogName="Main properties" Type="Variable" Value="$ProcessID" Visible="True" DefaultValue="" ValueType="ProcessID" EnumVariants="" Caption="ID процесса" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="InteractiveType" Tooltip="Если задано, то между нажатиями клавиш будут вставляться паузы. Рекомендуем включить это свойство, если из-за особенностей приложения или веб-страницы в процессе эмуляции ввода текста теряются отдельные буквы." CatalogName="Main properties" Type="Bool" Value="True" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Интерактивно" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="InteractiveDelay" Tooltip="[Число] Если задано свойство Интерактивно, то между нажатиями клавиш будет вставляться указанная здесь в миллисекундах пауза" CatalogName="Main properties" Type="Expression" Value="100" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Время паузы" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="SelectAll" Tooltip="Перед началом ввода посылать сочетание клавиш &amp;quot;выбрать все&amp;quot; (Ctrl+A)." CatalogName="Main properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Выбрать все" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="OnlyText" Tooltip="Если включено, то весь текст считается символами и не будет разбиваться на управляющие клавиши" CatalogName="Main properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Только текст" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayBefore" Tooltip="[Число] Задержка в секундах перед выполением блока" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Задержка перед" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayAfter" Tooltip="[Число] Задержка в секундах после выполения блока" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Задержка после" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="WaitTime" Tooltip="[Число] Предельное время ожидания заданного элемента в секундах" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="{x:Null}" Caption="Время ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="OffsetX" Tooltip="[Число] Относительное смещение клика по координате X от левого верхнего угла элемента. Если не указано никакое значение (свойство пустое), то в качестве точки клика будет использоваться центр элемента" CatalogName="Main properties" Type="Expression" Value="199" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Смещение по X" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="OffsetY" Tooltip="[Число] Относительное смещение клика по координате Y от левого верхнего угла элемента. Если не указано никакое значение (свойство пустое), то в качестве точки клика будет использоваться центр элемента" CatalogName="Main properties" Type="Expression" Value="15" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Смещение по Y" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Selector2" Tooltip="[Селектор] Идентификатор элемента пользовательского интерфейса. Если селектор будет пустым, то блок не будет ожидать появление этого элемента" CatalogName="Main properties" Type="Selector" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Selector" EnumVariants="{x:Null}" Caption="Селектор ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AppearTypeSelector2" Tooltip="Выбор типа ожидания. AppearAfter - появление после ввода текста, DisappearAfter - исчезновение после ввода текста; AppearBefore - появление перед вводом текста; DisappearBefore -исчезновение перед вводом текста. При выборе After - сначала будет сделан клик мышкой, потом ввод текста, потом проверка селектора ожидания. При выборе Before - сначала будет сделан клик мышкой, потом проверка селектора ожидания, потом ввод текста" CatalogName="Main properties" Type="Enum" Value="AppearAfter" Visible="True" DefaultValue="" ValueType="" EnumVariants="AppearAfter;DisappearAfter;AppearBefore;DisappearBefore" Caption="Тип ожидания селектора ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayBeforeSelector2" Tooltip="[Число] Задержка перед проверкой селектора ожидания" CatalogName="Main properties" Type="Expression" Value="2" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Задержка перед проверкой селектора ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="WaitTimeSelector2" Tooltip="[Число] Предельное время ожидания элемента, заданного в селекторе ожидания в секундах" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="{x:Null}" Caption="Время ожидания для селектора ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AttemptsSelector2" Tooltip="[Число] Количество попыток для селектора ожидания. Если селектор ожидания не будет найден, то блок будет производить клик по основному селектору" CatalogName="Main properties" Type="Expression" Value="1" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Количество попыток для селектора ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AutoScroll" Tooltip="Если выбрано, будет автоматически произведена прокрутка списка до элемента, находящегося вне видимой области" CatalogName="Custom properties" Type="Bool" Value="True" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Автоскроллинг" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="SimulateMove" Tooltip="При включении будет симулироваться движение курсора мышки от текущей позиции до рассчитанной блоком точки" CatalogName="Custom properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Симуляция движения" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="SimulateMessages" Tooltip="(Только для IE) При включении будет выполнена симуляция ввода средствами браузера" CatalogName="Custom properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Симуляция ввода" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AutoDepressing" Tooltip="При включении зажатые клавиши (с модификатором +, например [+CTRL]) будут автоматически отжаты после выполнения блока. Если свойство выключено, то необходимо вручную отжать ранее зажатую клавишу (с модификатором -, например [-CTRL])" CatalogName="Custom properties" Type="Bool" Value="True" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Автоматическое отжатие" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>640</Left>
      <Top>1225</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>7e7bf4cc-3fd8-4690-9571-be6db54471bb</ID>
      <zIndex>26</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Сохранить документ" InternalName="SaveExcelDocument" FriendlyName="Сохранить Excel-документ" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\Excel.ico" PathToToolboxImage="{x:Null}" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="97" Code="&amp;#xA;function SaveExcelDocument{{{block_id}}}&amp;#xA;{          &amp;#xA;    try&amp;#xA;    {&amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;    $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;); &amp;#xA;    &amp;#xA;    $ExcelPath     = {{{Path}}};  &amp;#xA;    $ReadPasswordObj  = {{{ReadPassword}}};&amp;#xA;    $WritePasswordObj = {{{WritePassword}}};&amp;#xA;    &amp;#xA;        $ExcelPath = ExpandConstFilePath $ExcelPath&amp;#xA;             &amp;#xA;        $ReadPassword = _checkpassword($ReadPasswordObj);&amp;#xA;        $WritePassword = _checkpassword($WritePasswordObj);  &amp;#xA;        &amp;#xA;        $ExcelInstance         = {{{ExcelInstance}}};&amp;#xA;        $ExcelWorkbookInstance = {{{ExcelWorkbookInstance}}};&amp;#xA;        if($null -eq $ExcelInstance) { $ExcelInstance = $ExcelWorkbookInstance.Application; }&amp;#xA;             &amp;#xA;        $typename = $ExcelWorkbookInstance.GetType().Name; &amp;#xA;            &amp;#xA;        if($ExcelPath.Length -eq 0)&amp;#xA;        {&amp;#xA;            if($typename -ne &amp;quot;ExcelWorkbook&amp;quot;)&amp;#xA;            {                                    &amp;#xA;                $ExcelInstance.DisplayAlerts = $false;&amp;#xA;                $ExcelInstance.EnableEvents = $false;&amp;#xA;                $ExcelWorkbookInstance.Save(); &amp;#xA;                $ExcelInstance.DisplayAlerts = $true;&amp;#xA;                $ExcelInstance.EnableEvents = $true;&amp;#xA;            }&amp;#xA;            else&amp;#xA;            {          &amp;#xA;                $ExcelInstance.Save();&amp;#xA;            }&amp;#xA;        }&amp;#xA;        else&amp;#xA;        {          &amp;#xA;            try { [System.IO.File]::Delete($ExcelPath); }&amp;#xA;            catch { }&amp;#xA;            &amp;#xA;            if($typename -ne &amp;quot;ExcelWorkbook&amp;quot;)&amp;#xA;            {                        &amp;#xA;                $ext = [System.IO.Path]::GetExtension($ExcelPath).ToLower(); &amp;#xA;                if($ext -eq &amp;quot;.pdf&amp;quot;)&amp;#xA;                {&amp;#xA;                    $ExcelWorkbookInstance.ExportAsFixedFormat([Microsoft.Office.Interop.Excel.XlFixedFormatType]::xlTypePDF, $ExcelPath, [Microsoft.Office.Interop.Excel.XlFixedFormatQuality]::xlQualityStandard, $false, $true);&amp;#xA;                }&amp;#xA;                else&amp;#xA;                {&amp;#xA;                    $saveformat = [Microsoft.Office.Interop.Excel.XlFileFormat]::xlOpenXMLWorkbook;&amp;#xA;                    if($ext -eq &amp;quot;.xlsm&amp;quot;) &amp;#xA;                    {&amp;#xA;                        $saveformat = [Microsoft.Office.Interop.Excel.XlFileFormat]::xlOpenXMLWorkbookMacroEnabled;&amp;#xA;                    } &amp;#xA;                    if($ext -eq &amp;quot;.xls&amp;quot;) &amp;#xA;                    {&amp;#xA;                        $saveformat = [Microsoft.Office.Interop.Excel.XlFileFormat]::xlExcel8;&amp;#xA;                    } &amp;#xA;                    if($ext -eq &amp;quot;.csv&amp;quot;) &amp;#xA;                    {&amp;#xA;                        $saveformat = [Microsoft.Office.Interop.Excel.XlFileFormat]::xlCSV;&amp;#xA;                    }&amp;#xA;                    if($ext -eq &amp;quot;.xml&amp;quot;) &amp;#xA;                    {&amp;#xA;                        $saveformat = [Microsoft.Office.Interop.Excel.XlFileFormat]::xlXMLSpreadsheet;&amp;#xA;                    }  &amp;#xA;                    &amp;#xA;                    if([string]::IsNullOrEmpty($ReadPassword))&amp;#xA;                    {&amp;#xA;                        $ReadPassword_com = [System.Reflection.Missing]::Value;&amp;#xA;                    } &amp;#xA;                    else&amp;#xA;                    {&amp;#xA;                        $ReadPassword_com = $ReadPassword;&amp;#xA;                    }&amp;#xA;                    if([string]::IsNullOrEmpty($WritePassword))&amp;#xA;                    {&amp;#xA;                        $WritePassword_com = [System.Reflection.Missing]::Value;&amp;#xA;                    } &amp;#xA;                    else&amp;#xA;                    {&amp;#xA;                        $WritePassword_com = $WritePassword;&amp;#xA;                    }&amp;#xA;                          &amp;#xA;                    $ExcelInstance.DisplayAlerts = $false;&amp;#xA;                    $ExcelInstance.EnableEvents = $false;&amp;#xA;                    $ExcelWorkbookInstance.SaveAs($ExcelPath, $saveformat, $ReadPassword_com, $WritePassword_com);&amp;#xA;                    $ExcelInstance.DisplayAlerts = $true;&amp;#xA;                    $ExcelInstance.EnableEvents = $true;  &amp;#xA;                }&amp;#xA;            }&amp;#xA;            else&amp;#xA;            {         &amp;#xA;                if(-not [string]::IsNullOrEmpty($ReadPassword))&amp;#xA;                {     &amp;#xA;                    $ExcelInstance.Encryption.Password = $ReadPassword;&amp;#xA;                } &amp;#xA;                elseif(-not [string]::IsNullOrEmpty($WritePassword))&amp;#xA;                {     &amp;#xA;                    $ExcelInstance.Encryption.Password = $WritePassword;&amp;#xA;                }&amp;#xA;                $ExcelInstance.SaveAs($ExcelPath);&amp;#xA;            } &amp;#xA;        }&amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_);&amp;#xA;        return;&amp;#xA;    }                                                                    &amp;#xA;    $__Error.Quit();&amp;#xA;}                   &amp;#xA;                " TextColor="#FF000000" ProtoName="" Language="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF006838&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF006838&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="8"&gt;&lt;Property Name="ExcelInstance" Tooltip="[Ссылка] Ссылка на процесс обработки Excel-документа. Название переменной в данном свойстве должно совпадать с названием переменной в свойстве &amp;quot;Ссылка на Excel&amp;quot;, блоков &amp;quot;Создать документ&amp;quot; или &amp;quot;Открыть документ&amp;quot; из группы Excel, которые ранее использовались для создания или открытия данного документа" CatalogName="Required" Type="Variable" Value="$Excel1" Visible="True" DefaultValue="" ValueType="ExcelInstance" EnumVariants="{x:Null}" Caption="Ссылка на Excel" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="ExcelWorkbookInstance" Tooltip="[Ссылка] Ссылка на документ, который необходимо сохранить. Название переменной в данном свойстве должно совпадать с названием переменной в свойстве &amp;quot;Ссылка на документ&amp;quot;, блоков &amp;quot;Создать документ&amp;quot; или &amp;quot;Открыть документ&amp;quot; из группы Excel, которые ранее использовались для создания или открытия данного документа" CatalogName="Required" Type="Variable" Value="$ExcelWorkbook1" Visible="True" DefaultValue="" ValueType="ExcelWorkbookInstance" EnumVariants="{x:Null}" Caption="Ссылка на документ" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="Path" Tooltip="[Текст] Путь к Excel-документу. Внимание! Чтобы сохранить документ в тот же файл оставьте значение пустым. Иначе введите новый путь к файлу. Если указанный файл существует, то он будет перезаписан. Доступные форматы: &amp;quot;.xlsx&amp;quot;, &amp;quot;.xlsm&amp;quot;, &amp;quot;.xls&amp;quot;, &amp;quot;.csv&amp;quot;, &amp;quot;.pdf&amp;quot;, &amp;quot;.xml&amp;quot;" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="{x:Null}" Caption="Путь к файлу" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReadPassword" Tooltip="[Текст/SecureString] Укажите пароль для чтения документа" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text/SecureString" EnumVariants="" Caption="Пароль для чтения" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="WritePassword" Tooltip="[Текст/SecureString] Укажите пароль для записи документа" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text/SecureString" EnumVariants="" Caption="Пароль для записи" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="{x:Null}" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="{x:Null}" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="{x:Null}" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>640</Left>
      <Top>1412.601694915254</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>789ed6d5-552b-4381-b379-eeeeb5bfd787</ID>
      <zIndex>2</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Закрыть документ" InternalName="CloseExcelDocument" FriendlyName="Закрыть Excel-документ" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\Excel.ico" PathToToolboxImage="{x:Null}" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="73" Code="&amp;#xA;function CloseExcelDocument{{{block_id}}}&amp;#xA;{        &amp;#xA; try&amp;#xA; {&amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;    $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);&amp;#xA;    &amp;#xA;        $ExcelInstance         = {{{ExcelInstance}}};&amp;#xA;        $ExcelWorkbookInstance = {{{ExcelWorkbookInstance}}};&amp;#xA;        if($null -eq $ExcelInstance) { $ExcelInstance = $ExcelWorkbookInstance.Application; }&amp;#xA;        &amp;#xA;        $typename = $ExcelWorkbookInstance.GetType().Name;&amp;#xA;        &amp;#xA;        if($typename -ne &amp;quot;ExcelWorkbook&amp;quot;)&amp;#xA;        {           &amp;#xA;            if(!$script:__ExcelInstances) { $script:__ExcelInstances = [MainHelpers.ClassExcelInstances]::new(); }&amp;#xA;            $thispid = $script:__ExcelInstances.GetAndRemove($ExcelInstance.hWnd);&amp;#xA;            &amp;#xA;            $ExcelWorkbookInstance.Saved = $true;&amp;#xA;            $ExcelWorkbookInstance.Close($true);&amp;#xA;            $ExcelInstance.Quit();&amp;#xA;            [System.Runtime.Interopservices.Marshal]::ReleaseComObject($ExcelWorkbookInstance);&amp;#xA;            [System.Runtime.Interopservices.Marshal]::ReleaseComObject($ExcelInstance); &amp;#xA;                   &amp;#xA;            try &amp;#xA;            {     &amp;#xA;                if($thispid -gt 0) &amp;#xA;                {&amp;#xA;                    $proc = [System.Diagnostics.Process]::GetProcessById($thispid);&amp;#xA;                    $proc.Kill();   &amp;#xA;                }&amp;#xA;            }&amp;#xA;            catch{}&amp;#xA;        }&amp;#xA;        else&amp;#xA;        {&amp;#xA;            $ExcelWorkbookInstance.Dispose(); &amp;#xA;            $ExcelInstance.Dispose();  &amp;#xA;        } &amp;#xA;        &amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_);&amp;#xA;        return;&amp;#xA;    }                                                &amp;#xA;    $__Error.Quit();&amp;#xA;}                   &amp;#xA;                " TextColor="#FF000000" ProtoName="" Language="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF006838&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF006838&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="8"&gt;&lt;Property Name="ExcelInstance" Tooltip="[Ссылка] Ссылка на процесс обработки Excel-документа. Название переменной в данном свойстве должно совпадать с названием переменной в свойстве &amp;quot;Ссылка на Excel&amp;quot;, блоков &amp;quot;Создать документ&amp;quot; или &amp;quot;Открыть документ&amp;quot; из группы Excel, которые ранее использовались для создания или открытия данного документа" CatalogName="Required" Type="Variable" Value="$Excel1" Visible="True" DefaultValue="" ValueType="ExcelInstance" EnumVariants="{x:Null}" Caption="Ссылка на Excel" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="ExcelWorkbookInstance" Tooltip="[Ссылка] Ссылка на документ, который необходимо закрыть. Название переменной в данном свойстве должно совпадать с названием переменной в свойстве &amp;quot;Ссылка на документ&amp;quot;, блоков &amp;quot;Создать документ&amp;quot; или &amp;quot;Открыть документ&amp;quot; из группы Excel, которые ранее использовались для создания или открытия данного документа" CatalogName="Required" Type="Variable" Value="$ExcelWorkbook1" Visible="True" DefaultValue="" ValueType="ExcelWorkbookInstance" EnumVariants="{x:Null}" Caption="Ссылка на документ" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="{x:Null}" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="{x:Null}" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="{x:Null}" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>640</Left>
      <Top>1655</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>0cafdda3-a91a-4303-97cf-8b6f96d50dbd</ID>
      <zIndex>5</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors>&lt;StorageSelector&gt;&lt;Selector&gt;&lt;Process Name="chrome" /&gt;&lt;CSSElement Text="6 767 ₽" CSS="SPAN.c3112-a1.tsHeadline500Medium.c3112-b9" /&gt;&lt;/Selector&gt;&lt;ThumbImageID&gt;53dd14de-6ab3-4a0f-a965-bcc1d1d46fbc&lt;/ThumbImageID&gt;&lt;Snapshot&gt;AAEAAAD/////AQAAAAAAAAAEAQAAAOIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuRGljdGlvbmFyeWAyW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQQAAAAHVmVyc2lvbghDb21wYXJlcghIYXNoU2l6ZQ1LZXlWYWx1ZVBhaXJzAAMAAwiSAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkdlbmVyaWNFcXVhbGl0eUNvbXBhcmVyYDFbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dCOYBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dW10EAAAACQIAAAADAAAACQMAAAAEAgAAAJIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuR2VuZXJpY0VxdWFsaXR5Q29tcGFyZXJgMVtbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0AAAAABwMAAAAAAQAAAAMAAAAD5AFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5LZXlWYWx1ZVBhaXJgMltbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0E/P///+QBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dAgAAAANrZXkFdmFsdWUBAQYFAAAAB3RhZ05hbWUGBgAAAARTUEFOAfn////8////BggAAAALc291cmNlSW5kZXgGCQAAAAM0OTgB9v////z///8GCwAAAAVjbGFzcwYMAAAAJWMzMTEyLWExIHRzSGVhZGxpbmU1MDBNZWRpdW0gYzMxMTItYjkL&lt;/Snapshot&gt;&lt;Created&gt;26.09.2023 16:54:04&lt;/Created&gt;&lt;/StorageSelector&gt;</StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Получить текст" InternalName="GetUITextInternet" FriendlyName="Получить текст или значение атрибута заданного элемента веб-страницы (заголовка, ссылки, поля редактирования, текстового блока и т.д.)" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Get Control Text.png" PathToToolboxImage="{x:Null}" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="65" Code="&amp;#xA;function GetUITextInternet{{{block_id}}}&amp;#xA;{&amp;#xA; try&amp;#xA; {&amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;    $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;); &amp;#xA;    &amp;#xA;    $UITextType    = &amp;quot;{{{UITextType}}}&amp;quot;;   &amp;#xA;    $ProcessID     = {{{ProcessID}}}; &amp;#xA;    $DelayAfter    = {{{DelayAfter}}}; &amp;#xA;    $DelayBefore   = {{{DelayBefore}}}; &amp;#xA;    $WaitTime      = {{{WaitTime}}};  &amp;#xA;    $AttributeName = {{{AttributeName}}};&amp;#xA;    &amp;#xA;        {{{Result}}} = &amp;quot;&amp;quot;;&amp;#xA;                      &amp;#xA;        Start-Sleep -Seconds $DelayBefore; &amp;#xA;                   &amp;#xA;        $psresultstr = Read-Host(&amp;quot;&amp;lt;block&amp;gt;&amp;lt;ID&amp;gt;{{{block_native_id}}}&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;GetUIText&amp;lt;/InternalName&amp;gt;&amp;lt;ProcessID&amp;gt;$ProcessID&amp;lt;/ProcessID&amp;gt;&amp;lt;UITextType&amp;gt;$UITextType&amp;lt;/UITextType&amp;gt;&amp;lt;InternalType&amp;gt;Internet&amp;lt;/InternalType&amp;gt;&amp;lt;WaitTime&amp;gt;$WaitTime&amp;lt;/WaitTime&amp;gt;&amp;lt;AutoScroll&amp;gt;{{{AutoScroll}}}&amp;lt;/AutoScroll&amp;gt;&amp;lt;AttributeName&amp;gt;$AttributeName&amp;lt;/AttributeName&amp;gt;{{{Selector}}}&amp;lt;/block&amp;gt;&amp;quot;);                                             &amp;#xA;        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);&amp;#xA;        if($__Error.CheckResult($psResult)) { return; }&amp;#xA;      &amp;#xA;        {{{Result}}} = $psResult.Result;  &amp;#xA;        &amp;#xA;        Start-Sleep -Seconds $DelayAfter; &amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_);&amp;#xA;        return;&amp;#xA;    }                                            &amp;#xA;    $__Error.Quit();&amp;#xA;}                   &amp;#xA;                " TextColor="#FFFFFFFF" ProtoName="" Language="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="16"&gt;&lt;Property Name="Selector" Tooltip="[Селектор] Идентификатор окна браузера и элемента веб-страницы" CatalogName="Main properties" Type="Selector" Value="&amp;lt;Selector&amp;gt;&amp;lt;Process Name=&amp;quot;chrome&amp;quot; /&amp;gt;&amp;lt;CSSElement Text=&amp;quot;6 767 ₽&amp;quot; CSS=&amp;quot;SPAN.c3112-a1.tsHeadline500Medium.c3112-b9&amp;quot; /&amp;gt;&amp;lt;/Selector&amp;gt;" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Selector" EnumVariants="{x:Null}" Caption="Селектор" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="UITextType" Tooltip="Выбор типа извлекаемого значения" CatalogName="Main properties" Type="Enum" Value="Text" Visible="True" DefaultValue="" ValueType="{x:Null}" EnumVariants="Text;Class;InnerHtml;InnerText;Href;Attribute" Caption="Тип значения" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AttributeName" Tooltip="[Текст] Имя атрибута. Данное свойство используется при выборе типа значения &amp;quot;Attribute&amp;quot;" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="" Caption="Имя атрибута" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ProcessID" Tooltip="[Ссылка] Переменная, в которой хранится идентификатор процесса и вкладки браузера, используемые данным блоком. Если свойство оставить пустым, либо если переменная &amp;quot;ID процесса&amp;quot; не была ранее присвоена в момент открытия браузера, приложение и вкладка браузера будут определены из содержимого соответствующей строки селектора. ID процесса может быть получен, например, с помощью блоков Запустить IE, Запустить Chrome или Присоединиться к браузеру." CatalogName="Main properties" Type="Variable" Value="$ProcessID" Visible="True" DefaultValue="" ValueType="ProcessID" EnumVariants="" Caption="ID процесса" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="53dd14de-6ab3-4a0f-a965-bcc1d1d46fbc" Visible="False" DefaultValue="&amp;quot;&amp;quot;" ValueType="{x:Null}" EnumVariants="{x:Null}" Caption="ThumbImage" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayBefore" Tooltip="[Число] Задержка в секундах перед выполением блока" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Задержка перед" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayAfter" Tooltip="[Число] Задержка в секундах после выполения блока" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Задержка после" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="WaitTime" Tooltip="[Число] Предельное время ожидания заданного элемента в секундах" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="{x:Null}" Caption="Время ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AutoScroll" Tooltip="Если выбрано, то будет произведен автоматический скроллинг до элемента" CatalogName="Main properties" Type="Bool" Value="True" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="{x:Null}" EnumVariants="" Caption="Автоскроллинг" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Result" Tooltip="[Текст] В указанную переменную будет записан полученный текст или значение атрибута элемента" CatalogName="Output" Type="Variable" Value="$Result" Visible="True" DefaultValue="" ValueType="Text" EnumVariants="{x:Null}" Caption="Результат" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>505</Left>
      <Top>1855</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>cb3a5ff2-6281-4a57-8451-a68b841da25f</ID>
      <zIndex>6</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors>&lt;StorageSelector&gt;&lt;Selector&gt;&lt;Process Name="chrome" /&gt;&lt;CSSElement ColumnName="Колонка1" ColumnAttribute="InnerText" CSS="DIV.a1c.ac2.ca2.i8q"&gt;&lt;AlternateSelectors&gt;&lt;string&gt;DIV[id='paginatorContent'] &amp;gt; DIV &amp;gt; DIV &amp;gt; DIV:nth-child(2) &amp;gt; DIV:nth-child(2) &amp;gt; A:nth-child(3) &amp;gt; DIV&lt;/string&gt;&lt;string&gt;DIV[id='paginatorContent'] &amp;gt; DIV.widget-search-result-container.wi &amp;gt; DIV.iw0 &amp;gt; DIV.t7i.ti8 &amp;gt; DIV.t8i &amp;gt; A.i8q.iq9 &amp;gt; DIV.a1c.ac2.ca2.i8q&lt;/string&gt;&lt;string&gt;DIV[id='paginatorContent'] &amp;gt; DIV.widget-search-result-container &amp;gt; DIV.iw0 &amp;gt; DIV.t7i &amp;gt; DIV.t8i &amp;gt; A.i8q &amp;gt; DIV.a1c&lt;/string&gt;&lt;/AlternateSelectors&gt;&lt;/CSSElement&gt;&lt;CSSElement ColumnName="Колонка2" ColumnAttribute="InnerText" ParentIndent="2" CSS=":scope &amp;gt; DIV &amp;gt; DIV &amp;gt; SPAN" /&gt;&lt;/Selector&gt;&lt;ThumbImageID&gt;b0d793c8-bae9-41e7-ab42-51b1a1af7494&lt;/ThumbImageID&gt;&lt;Snapshot&gt;AAEAAAD/////AQAAAAAAAAAEAQAAAOIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuRGljdGlvbmFyeWAyW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQQAAAAHVmVyc2lvbghDb21wYXJlcghIYXNoU2l6ZQ1LZXlWYWx1ZVBhaXJzAAMAAwiSAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkdlbmVyaWNFcXVhbGl0eUNvbXBhcmVyYDFbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dCOYBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dW10FAAAACQIAAAAHAAAACQMAAAAEAgAAAJIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuR2VuZXJpY0VxdWFsaXR5Q29tcGFyZXJgMVtbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0AAAAABwMAAAAAAQAAAAQAAAAD5AFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5LZXlWYWx1ZVBhaXJgMltbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0E/P///+QBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dAgAAAANrZXkFdmFsdWUBAQYFAAAAB3RhZ05hbWUGBgAAAANESVYB+f////z///8GCAAAAAtzb3VyY2VJbmRleAYJAAAAAzQzMAH2/////P///wYLAAAABWNsYXNzBgwAAAAPYTFjIGFjMiBjYTIgaThxAfP////8////Bg4AAAAFc3R5bGUGDwAAAAdjb2xvcjo7Cw==&lt;/Snapshot&gt;&lt;Created&gt;26.09.2023 18:08:17&lt;/Created&gt;&lt;/StorageSelector&gt;</StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Извлечь данные" InternalName="CollectDataInternet" FriendlyName="Блок позволяет извлечь однотипные структурированные данные из веб-страниц (результаты поиска, элементы меню, списки, таблицы и т.д.) и поместить их в переменную в виде Таблицы Данных. Для указания необходимого источника данных и настроек извлечения воспользуйтесь кнопкой Извлечь данные на панели инструментов Дизайнера или кнопкой Запись в окне редактирования Селектора данного блока." Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Extract Data.png" PathToToolboxImage="{x:Null}" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="67" Code="&amp;#xA;function CollectDataInternet{{{block_id}}}&amp;#xA;{    &amp;#xA; try&amp;#xA; {&amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;    $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);&amp;#xA;   &amp;#xA;    $ProcessID   = {{{ProcessID}}};&amp;#xA;    $DelayAfter  = {{{DelayAfter}}};  &amp;#xA;    $DelayBefore = {{{DelayBefore}}};&amp;#xA;    $WaitTime    = {{{WaitTime}}}; &amp;#xA;    $RowsCount   = {{{RowsCount}}};   &amp;#xA;    $PageCount   = {{{PageCount}}}; &amp;#xA;    $OffsetX2    = {{{OffsetX2}}};&amp;#xA;    $OffsetY2    = {{{OffsetY2}}};&amp;#xA;    $DelayPage   = {{{DelayPage}}};&amp;#xA;    &amp;#xA;        Start-Sleep -Seconds $DelayBefore; &amp;#xA;        &amp;#xA;        $psresultstr = Read-Host(&amp;quot;&amp;lt;block&amp;gt;&amp;lt;ID&amp;gt;{{{block_native_id}}}&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;CollectDataInternet&amp;lt;/InternalName&amp;gt;&amp;lt;ProcessID&amp;gt;$ProcessID&amp;lt;/ProcessID&amp;gt;&amp;lt;RowsCount&amp;gt;$RowsCount&amp;lt;/RowsCount&amp;gt;&amp;lt;InternalType&amp;gt;Internet&amp;lt;/InternalType&amp;gt;{{{Selector}}}&amp;lt;WaitTime&amp;gt;$WaitTime&amp;lt;/WaitTime&amp;gt;&amp;lt;PageCount&amp;gt;$PageCount&amp;lt;/PageCount&amp;gt;&amp;lt;OffsetX2&amp;gt;$OffsetX2&amp;lt;/OffsetX2&amp;gt;&amp;lt;OffsetY2&amp;gt;$OffsetY2&amp;lt;/OffsetY2&amp;gt;&amp;lt;DelayPage&amp;gt;$DelayPage&amp;lt;/DelayPage&amp;gt;{{{Selector2}}}&amp;lt;/block&amp;gt;&amp;quot;);                       &amp;#xA;        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);&amp;#xA;        if($__Error.CheckResult($psResult)) { return; }               &amp;#xA;                    &amp;#xA;        {{{Result}}} = $__BinFormatter.frombin($psResult.Result); &amp;#xA;                                     &amp;#xA;        Start-Sleep -Seconds $DelayAfter;&amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_);&amp;#xA;        return;&amp;#xA;    }                                            &amp;#xA;    $__Error.Quit();&amp;#xA;}                   &amp;#xA;                " TextColor="#FFFFFFFF" ProtoName="" Language="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="16"&gt;&lt;Property Name="Selector" Tooltip="[Селектор] Идентификатор окна браузера и элемента веб-страницы, либо набора однотипных элементов (заголовков, ссылок, блоков текста и т.д.), которые необходимо извлечь" CatalogName="Main properties" Type="Selector" Value="&amp;lt;Selector&amp;gt;&amp;lt;Process Name=&amp;quot;chrome&amp;quot; /&amp;gt;&amp;lt;CSSElement ColumnName=&amp;quot;Колонка1&amp;quot; ColumnAttribute=&amp;quot;InnerText&amp;quot; CSS=&amp;quot;DIV.a1c.ac2.ca2.i8q&amp;quot;&amp;gt;&amp;lt;AlternateSelectors&amp;gt;&amp;lt;string&amp;gt;DIV[id='paginatorContent'] &amp;amp;gt; DIV &amp;amp;gt; DIV &amp;amp;gt; DIV:nth-child(2) &amp;amp;gt; DIV:nth-child(2) &amp;amp;gt; A:nth-child(3) &amp;amp;gt; DIV&amp;lt;/string&amp;gt;&amp;lt;string&amp;gt;DIV[id='paginatorContent'] &amp;amp;gt; DIV.widget-search-result-container.wi &amp;amp;gt; DIV.iw0 &amp;amp;gt; DIV.t7i.ti8 &amp;amp;gt; DIV.t8i &amp;amp;gt; A.i8q.iq9 &amp;amp;gt; DIV.a1c.ac2.ca2.i8q&amp;lt;/string&amp;gt;&amp;lt;string&amp;gt;DIV[id='paginatorContent'] &amp;amp;gt; DIV.widget-search-result-container &amp;amp;gt; DIV.iw0 &amp;amp;gt; DIV.t7i &amp;amp;gt; DIV.t8i &amp;amp;gt; A.i8q &amp;amp;gt; DIV.a1c&amp;lt;/string&amp;gt;&amp;lt;/AlternateSelectors&amp;gt;&amp;lt;/CSSElement&amp;gt;&amp;lt;CSSElement ColumnName=&amp;quot;Колонка2&amp;quot; ColumnAttribute=&amp;quot;InnerText&amp;quot; ParentIndent=&amp;quot;2&amp;quot; CSS=&amp;quot;:scope &amp;amp;gt; DIV &amp;amp;gt; DIV &amp;amp;gt; SPAN&amp;quot; /&amp;gt;&amp;lt;/Selector&amp;gt;" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Selector" EnumVariants="{x:Null}" Caption="Селектор" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Selector2" Tooltip="[Селектор] Селектор для перехода на следующую страницу. Если он задан, то будет произведен автоматический сбор данных со всех страниц" CatalogName="Main properties" Type="Selector" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Selector" EnumVariants="" Caption="Следующая страница" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="OffsetX2" Tooltip="[Число] Относительное смещение по координате X от левого верхнего угла целевого элемента следующей страницы" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Смещение по X" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="OffsetY2" Tooltip="[Число] Относительное смещение по координате Y от левого верхнего угла целевого элемента следующей страницы" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Смещение по Y" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayPage" Tooltip="[Число] Время паузы после нажатия на элемент следующей страницы в секундах. Может использоваться если данные на странице обновляются через AJAX" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Пауза следующей страницы" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="PageCount" Tooltip="[Число] Количество обрабатываемых страниц. Если значение не задано или равно нулю, то обрабатываются все возможные страницы пока доступен элемент следующая страница" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Количество страниц" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="RowsCount" Tooltip="[Число] Максимальное количество извлекаемых строк" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Количество строк" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ProcessID" Tooltip="[Ссылка] Переменная, в которой хранится идентификатор процесса и вкладки браузера, используемые данным блоком. Если свойство оставить пустым, либо если переменная &amp;quot;ID процесса&amp;quot; не была ранее присвоена в момент открытия браузера, приложение и вкладка браузера будут определены из содержимого соответствующей строки селектора. ID процесса может быть получен, например, с помощью блоков Запустить IE, Запустить Chrome или Присоединиться к браузеру." CatalogName="Main properties" Type="Variable" Value="$ProcessID" Visible="True" DefaultValue="" ValueType="ProcessID" EnumVariants="" Caption="ID процесса" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayBefore" Tooltip="[Число] Задержка в секундах перед выполнением блока" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Задержка перед" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayAfter" Tooltip="[Число] Задержка в секундах после выполения блока" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Задержка после" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="WaitTime" Tooltip="[Число] Предельное время ожидания появления элемента в секундах" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="{x:Null}" Caption="Время ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Result" Tooltip="[Таблица Данных] Таблица, содержащая извлеченные данные" CatalogName="Output" Type="Variable" Value="$Table" Visible="True" DefaultValue="" ValueType="Text" EnumVariants="{x:Null}" Caption="Результат" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>1450</Left>
      <Top>2400</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>bff9cb0e-7470-4361-9986-96fa996121e5</ID>
      <zIndex>14</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Окно с сообщением" InternalName="MessageBox" FriendlyName="Показать пользователю модальное диалоговое окно с заданным заголовком, текстом и набором кнопок. Если используется окно с несколькими кнопками, блок позволяет записать в переменную текстовую константу, соответствующую нажатой пользователем кнопке." Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Dialogs.png" PathToToolboxImage="{x:Null}" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="67" Code="&amp;#xA;function MessageBox{{{block_id}}}&amp;#xA;{&amp;#xA;    try&amp;#xA;    {&amp;#xA;        $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;        $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);&amp;#xA;          &amp;#xA;        $Title       = {{{Title}}};&amp;#xA;        $Message     = {{{Message}}}; &amp;#xA;        $WaitTimeObj = {{{WaitTime}}}; &amp;#xA;        $WordWrap    = ${{{WordWrap}}};&amp;#xA;    &amp;#xA;        $form = [PSHelpers.ClassMessageBox]::new();&amp;#xA;       &amp;#xA;        try { $form.WaitTime = _toint($WaitTimeObj); }&amp;#xA;        catch{}  &amp;#xA;        try { $form.WordWrap = $WordWrap; }&amp;#xA;        catch{}&amp;#xA;        &amp;#xA;        $Message = VarToString($Message);&amp;#xA;        $result  = $form.Show($Title, $Message, &amp;quot;{{{Buttons}}}&amp;quot;, &amp;quot;{{{MessageImage}}}&amp;quot;);&amp;#xA;        if($result.IsError)&amp;#xA;        {           &amp;#xA;            $__Error.Exception($result.ErrorMessage);&amp;#xA;            return;&amp;#xA;        } &amp;#xA;           &amp;#xA;        {{{Result}}} = $result.Value;&amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_);&amp;#xA;        return;&amp;#xA;    }&amp;#xA;    $__Error.Quit();&amp;#xA;}                   &amp;#xA;                " TextColor="#FF000000" ProtoName="" Language="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF4870C1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF4870C1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="16"&gt;&lt;Property Name="Title" Tooltip="[Текст] Текст, значение переменной или результат вычислений, который будет отображен в заголовке диалогового окна" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="{x:Null}" Caption="Заголовок" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Message" Tooltip="[Текст] Текст, значение переменной или результат вычислений, который будет отображен  внутри диалогового окна" CatalogName="Required" Type="Expression" Value="$Table[0]" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="{x:Null}" Caption="Сообщение" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="Buttons" Tooltip="Кнопки, которые будут доступны пользователю для нажатия" CatalogName="Main properties" Type="Enum" Value="OK" Visible="True" DefaultValue="" ValueType="" EnumVariants="OK;OKCancel;YesNo;YesNoCancel" Caption="Кнопки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="MessageImage" Tooltip="Изображение, которое будет отображаться в диалоговом окне" CatalogName="Main properties" Type="Enum" Value="None" Visible="True" DefaultValue="" ValueType="" EnumVariants="None;Error;Exclamation;Hand;Information;Question;Warning;Stop;Asterisk" Caption="Изображение" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="WaitTime" Tooltip="[Число] Время ожидания. Если задано значение больше нуля, то окно автоматически закроется через это время. В свойство &amp;quot;Результат&amp;quot; при этом будет записано первое значение из указанных в свойстве &amp;quot;Кнопки&amp;quot;." CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Время ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="WordWrap" Tooltip="Включается перенос строк" CatalogName="Main properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Перенос строк" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Result" Tooltip="[Текст] Переменная, в которую будет сохранено название кнопки, нажатой пользователем. Один из возможных результатов: OK, Cancel, Yes, No. Данные текстовые константы не зависят от языка робота или операционной системы" CatalogName="Output" Type="Variable" Value="$Result" Visible="True" DefaultValue="" ValueType="Text" EnumVariants="{x:Null}" Caption="Результат" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>1035</Left>
      <Top>1710</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>410e8157-9cc3-472a-bd43-5f7b6269f653</ID>
      <zIndex>35</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors>&lt;StorageSelector&gt;&lt;Selector&gt;&lt;Process Name="chrome" /&gt;&lt;CSSElement ColumnName="Колонка1" ColumnAttribute="InnerText" CSS="DIV.a1c.ac2.ca2.i8q"&gt;&lt;AlternateSelectors&gt;&lt;string&gt;DIV[id='paginatorContent'] &amp;gt; DIV &amp;gt; DIV &amp;gt; DIV:nth-child(2) &amp;gt; DIV:nth-child(2) &amp;gt; A:nth-child(2) &amp;gt; DIV&lt;/string&gt;&lt;string&gt;DIV[id='paginatorContent'] &amp;gt; DIV.widget-search-result-container.wi &amp;gt; DIV.iw0 &amp;gt; DIV.t7i.ti8 &amp;gt; DIV.t8i &amp;gt; A.i8q.iq9 &amp;gt; DIV.a1c.ac2.ca2.i8q&lt;/string&gt;&lt;string&gt;DIV[id='paginatorContent'] &amp;gt; DIV.widget-search-result-container &amp;gt; DIV.iw0 &amp;gt; DIV.t7i &amp;gt; DIV.t8i &amp;gt; A.i8q &amp;gt; DIV.a1c&lt;/string&gt;&lt;/AlternateSelectors&gt;&lt;/CSSElement&gt;&lt;CSSElement ColumnName="Колонка2" ColumnAttribute="InnerText" ParentIndent="2" CSS=":scope &amp;gt; DIV &amp;gt; DIV &amp;gt; SPAN" /&gt;&lt;/Selector&gt;&lt;ThumbImageID&gt;c62842fd-f0bd-4ec5-9990-0c5f32364776&lt;/ThumbImageID&gt;&lt;Snapshot&gt;AAEAAAD/////AQAAAAAAAAAEAQAAAOIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuRGljdGlvbmFyeWAyW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQQAAAAHVmVyc2lvbghDb21wYXJlcghIYXNoU2l6ZQ1LZXlWYWx1ZVBhaXJzAAMAAwiSAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkdlbmVyaWNFcXVhbGl0eUNvbXBhcmVyYDFbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dCOYBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dW10FAAAACQIAAAAHAAAACQMAAAAEAgAAAJIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuR2VuZXJpY0VxdWFsaXR5Q29tcGFyZXJgMVtbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0AAAAABwMAAAAAAQAAAAQAAAAD5AFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5LZXlWYWx1ZVBhaXJgMltbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0E/P///+QBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dAgAAAANrZXkFdmFsdWUBAQYFAAAAB3RhZ05hbWUGBgAAAANESVYB+f////z///8GCAAAAAtzb3VyY2VJbmRleAYJAAAAAzUwMwH2/////P///wYLAAAABWNsYXNzBgwAAAAPYTFjIGFjMiBjYTIgaThxAfP////8////Bg4AAAAFc3R5bGUGDwAAAAdjb2xvcjo7Cw==&lt;/Snapshot&gt;&lt;Created&gt;26.09.2023 18:15:20&lt;/Created&gt;&lt;/StorageSelector&gt;</StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Извлечь данные" InternalName="CollectDataInternet" FriendlyName="Блок позволяет извлечь однотипные структурированные данные из веб-страниц (результаты поиска, элементы меню, списки, таблицы и т.д.) и поместить их в переменную в виде Таблицы Данных. Для указания необходимого источника данных и настроек извлечения воспользуйтесь кнопкой Извлечь данные на панели инструментов Дизайнера или кнопкой Запись в окне редактирования Селектора данного блока." Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Extract Data.png" PathToToolboxImage="{x:Null}" ImageType="LeftImage" NoDelete="False" Invisible="True" Proportional="True" Version="67" Code="&amp;#xA;function CollectDataInternet{{{block_id}}}&amp;#xA;{    &amp;#xA; try&amp;#xA; {&amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;    $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);&amp;#xA;   &amp;#xA;    $ProcessID   = {{{ProcessID}}};&amp;#xA;    $DelayAfter  = {{{DelayAfter}}};  &amp;#xA;    $DelayBefore = {{{DelayBefore}}};&amp;#xA;    $WaitTime    = {{{WaitTime}}}; &amp;#xA;    $RowsCount   = {{{RowsCount}}};   &amp;#xA;    $PageCount   = {{{PageCount}}}; &amp;#xA;    $OffsetX2    = {{{OffsetX2}}};&amp;#xA;    $OffsetY2    = {{{OffsetY2}}};&amp;#xA;    $DelayPage   = {{{DelayPage}}};&amp;#xA;    &amp;#xA;        Start-Sleep -Seconds $DelayBefore; &amp;#xA;        &amp;#xA;        $psresultstr = Read-Host(&amp;quot;&amp;lt;block&amp;gt;&amp;lt;ID&amp;gt;{{{block_native_id}}}&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;CollectDataInternet&amp;lt;/InternalName&amp;gt;&amp;lt;ProcessID&amp;gt;$ProcessID&amp;lt;/ProcessID&amp;gt;&amp;lt;RowsCount&amp;gt;$RowsCount&amp;lt;/RowsCount&amp;gt;&amp;lt;InternalType&amp;gt;Internet&amp;lt;/InternalType&amp;gt;{{{Selector}}}&amp;lt;WaitTime&amp;gt;$WaitTime&amp;lt;/WaitTime&amp;gt;&amp;lt;PageCount&amp;gt;$PageCount&amp;lt;/PageCount&amp;gt;&amp;lt;OffsetX2&amp;gt;$OffsetX2&amp;lt;/OffsetX2&amp;gt;&amp;lt;OffsetY2&amp;gt;$OffsetY2&amp;lt;/OffsetY2&amp;gt;&amp;lt;DelayPage&amp;gt;$DelayPage&amp;lt;/DelayPage&amp;gt;{{{Selector2}}}&amp;lt;/block&amp;gt;&amp;quot;);                       &amp;#xA;        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);&amp;#xA;        if($__Error.CheckResult($psResult)) { return; }               &amp;#xA;                    &amp;#xA;        {{{Result}}} = $__BinFormatter.frombin($psResult.Result); &amp;#xA;                                     &amp;#xA;        Start-Sleep -Seconds $DelayAfter;&amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_);&amp;#xA;        return;&amp;#xA;    }                                            &amp;#xA;    $__Error.Quit();&amp;#xA;}                   &amp;#xA;                " TextColor="#FFFFFFFF" ProtoName="" Language="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="16"&gt;&lt;Property Name="Selector" Tooltip="[Селектор] Идентификатор окна браузера и элемента веб-страницы, либо набора однотипных элементов (заголовков, ссылок, блоков текста и т.д.), которые необходимо извлечь" CatalogName="Main properties" Type="Selector" Value="&amp;lt;Selector&amp;gt;&amp;lt;Process Name=&amp;quot;chrome&amp;quot; /&amp;gt;&amp;lt;CSSElement ColumnName=&amp;quot;Колонка1&amp;quot; ColumnAttribute=&amp;quot;InnerText&amp;quot; CSS=&amp;quot;DIV.a1c.ac2.ca2.i8q&amp;quot;&amp;gt;&amp;lt;AlternateSelectors&amp;gt;&amp;lt;string&amp;gt;DIV[id='paginatorContent'] &amp;amp;gt; DIV &amp;amp;gt; DIV &amp;amp;gt; DIV:nth-child(2) &amp;amp;gt; DIV:nth-child(2) &amp;amp;gt; A:nth-child(2) &amp;amp;gt; DIV&amp;lt;/string&amp;gt;&amp;lt;string&amp;gt;DIV[id='paginatorContent'] &amp;amp;gt; DIV.widget-search-result-container.wi &amp;amp;gt; DIV.iw0 &amp;amp;gt; DIV.t7i.ti8 &amp;amp;gt; DIV.t8i &amp;amp;gt; A.i8q.iq9 &amp;amp;gt; DIV.a1c.ac2.ca2.i8q&amp;lt;/string&amp;gt;&amp;lt;string&amp;gt;DIV[id='paginatorContent'] &amp;amp;gt; DIV.widget-search-result-container &amp;amp;gt; DIV.iw0 &amp;amp;gt; DIV.t7i &amp;amp;gt; DIV.t8i &amp;amp;gt; A.i8q &amp;amp;gt; DIV.a1c&amp;lt;/string&amp;gt;&amp;lt;/AlternateSelectors&amp;gt;&amp;lt;/CSSElement&amp;gt;&amp;lt;CSSElement ColumnName=&amp;quot;Колонка2&amp;quot; ColumnAttribute=&amp;quot;InnerText&amp;quot; ParentIndent=&amp;quot;2&amp;quot; CSS=&amp;quot;:scope &amp;amp;gt; DIV &amp;amp;gt; DIV &amp;amp;gt; SPAN&amp;quot; /&amp;gt;&amp;lt;/Selector&amp;gt;" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Selector" EnumVariants="{x:Null}" Caption="Селектор" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Selector2" Tooltip="[Селектор] Селектор для перехода на следующую страницу. Если он задан, то будет произведен автоматический сбор данных со всех страниц" CatalogName="Main properties" Type="Selector" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Selector" EnumVariants="" Caption="Следующая страница" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="OffsetX2" Tooltip="[Число] Относительное смещение по координате X от левого верхнего угла целевого элемента следующей страницы" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Смещение по X" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="OffsetY2" Tooltip="[Число] Относительное смещение по координате Y от левого верхнего угла целевого элемента следующей страницы" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Смещение по Y" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayPage" Tooltip="[Число] Время паузы после нажатия на элемент следующей страницы в секундах. Может использоваться если данные на странице обновляются через AJAX" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Пауза следующей страницы" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="PageCount" Tooltip="[Число] Количество обрабатываемых страниц. Если значение не задано или равно нулю, то обрабатываются все возможные страницы пока доступен элемент следующая страница" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Количество страниц" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="RowsCount" Tooltip="[Число] Максимальное количество извлекаемых строк" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Количество строк" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ProcessID" Tooltip="[Ссылка] Переменная, в которой хранится идентификатор процесса и вкладки браузера, используемые данным блоком. Если свойство оставить пустым, либо если переменная &amp;quot;ID процесса&amp;quot; не была ранее присвоена в момент открытия браузера, приложение и вкладка браузера будут определены из содержимого соответствующей строки селектора. ID процесса может быть получен, например, с помощью блоков Запустить IE, Запустить Chrome или Присоединиться к браузеру." CatalogName="Main properties" Type="Variable" Value="$ProcessID" Visible="True" DefaultValue="" ValueType="ProcessID" EnumVariants="" Caption="ID процесса" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayBefore" Tooltip="[Число] Задержка в секундах перед выполнением блока" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Задержка перед" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayAfter" Tooltip="[Число] Задержка в секундах после выполения блока" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Задержка после" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="WaitTime" Tooltip="[Число] Предельное время ожидания появления элемента в секундах" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="{x:Null}" Caption="Время ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Result" Tooltip="[Таблица Данных] Таблица, содержащая извлеченные данные" CatalogName="Output" Type="Variable" Value="$Table" Visible="True" DefaultValue="" ValueType="Text" EnumVariants="{x:Null}" Caption="Результат" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>1310</Left>
      <Top>2770</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>a011275c-bf02-49bf-bb15-bb076730eacd</ID>
      <zIndex>13</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Сохранить документ" InternalName="SaveExcelDocument" FriendlyName="Сохранить Excel-документ" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\Excel.ico" PathToToolboxImage="{x:Null}" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="97" Code="&amp;#xA;function SaveExcelDocument{{{block_id}}}&amp;#xA;{          &amp;#xA;    try&amp;#xA;    {&amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;    $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;); &amp;#xA;    &amp;#xA;    $ExcelPath     = {{{Path}}};  &amp;#xA;    $ReadPasswordObj  = {{{ReadPassword}}};&amp;#xA;    $WritePasswordObj = {{{WritePassword}}};&amp;#xA;    &amp;#xA;        $ExcelPath = ExpandConstFilePath $ExcelPath&amp;#xA;             &amp;#xA;        $ReadPassword = _checkpassword($ReadPasswordObj);&amp;#xA;        $WritePassword = _checkpassword($WritePasswordObj);  &amp;#xA;        &amp;#xA;        $ExcelInstance         = {{{ExcelInstance}}};&amp;#xA;        $ExcelWorkbookInstance = {{{ExcelWorkbookInstance}}};&amp;#xA;        if($null -eq $ExcelInstance) { $ExcelInstance = $ExcelWorkbookInstance.Application; }&amp;#xA;             &amp;#xA;        $typename = $ExcelWorkbookInstance.GetType().Name; &amp;#xA;            &amp;#xA;        if($ExcelPath.Length -eq 0)&amp;#xA;        {&amp;#xA;            if($typename -ne &amp;quot;ExcelWorkbook&amp;quot;)&amp;#xA;            {                                    &amp;#xA;                $ExcelInstance.DisplayAlerts = $false;&amp;#xA;                $ExcelInstance.EnableEvents = $false;&amp;#xA;                $ExcelWorkbookInstance.Save(); &amp;#xA;                $ExcelInstance.DisplayAlerts = $true;&amp;#xA;                $ExcelInstance.EnableEvents = $true;&amp;#xA;            }&amp;#xA;            else&amp;#xA;            {          &amp;#xA;                $ExcelInstance.Save();&amp;#xA;            }&amp;#xA;        }&amp;#xA;        else&amp;#xA;        {          &amp;#xA;            try { [System.IO.File]::Delete($ExcelPath); }&amp;#xA;            catch { }&amp;#xA;            &amp;#xA;            if($typename -ne &amp;quot;ExcelWorkbook&amp;quot;)&amp;#xA;            {                        &amp;#xA;                $ext = [System.IO.Path]::GetExtension($ExcelPath).ToLower(); &amp;#xA;                if($ext -eq &amp;quot;.pdf&amp;quot;)&amp;#xA;                {&amp;#xA;                    $ExcelWorkbookInstance.ExportAsFixedFormat([Microsoft.Office.Interop.Excel.XlFixedFormatType]::xlTypePDF, $ExcelPath, [Microsoft.Office.Interop.Excel.XlFixedFormatQuality]::xlQualityStandard, $false, $true);&amp;#xA;                }&amp;#xA;                else&amp;#xA;                {&amp;#xA;                    $saveformat = [Microsoft.Office.Interop.Excel.XlFileFormat]::xlOpenXMLWorkbook;&amp;#xA;                    if($ext -eq &amp;quot;.xlsm&amp;quot;) &amp;#xA;                    {&amp;#xA;                        $saveformat = [Microsoft.Office.Interop.Excel.XlFileFormat]::xlOpenXMLWorkbookMacroEnabled;&amp;#xA;                    } &amp;#xA;                    if($ext -eq &amp;quot;.xls&amp;quot;) &amp;#xA;                    {&amp;#xA;                        $saveformat = [Microsoft.Office.Interop.Excel.XlFileFormat]::xlExcel8;&amp;#xA;                    } &amp;#xA;                    if($ext -eq &amp;quot;.csv&amp;quot;) &amp;#xA;                    {&amp;#xA;                        $saveformat = [Microsoft.Office.Interop.Excel.XlFileFormat]::xlCSV;&amp;#xA;                    }&amp;#xA;                    if($ext -eq &amp;quot;.xml&amp;quot;) &amp;#xA;                    {&amp;#xA;                        $saveformat = [Microsoft.Office.Interop.Excel.XlFileFormat]::xlXMLSpreadsheet;&amp;#xA;                    }  &amp;#xA;                    &amp;#xA;                    if([string]::IsNullOrEmpty($ReadPassword))&amp;#xA;                    {&amp;#xA;                        $ReadPassword_com = [System.Reflection.Missing]::Value;&amp;#xA;                    } &amp;#xA;                    else&amp;#xA;                    {&amp;#xA;                        $ReadPassword_com = $ReadPassword;&amp;#xA;                    }&amp;#xA;                    if([string]::IsNullOrEmpty($WritePassword))&amp;#xA;                    {&amp;#xA;                        $WritePassword_com = [System.Reflection.Missing]::Value;&amp;#xA;                    } &amp;#xA;                    else&amp;#xA;                    {&amp;#xA;                        $WritePassword_com = $WritePassword;&amp;#xA;                    }&amp;#xA;                          &amp;#xA;                    $ExcelInstance.DisplayAlerts = $false;&amp;#xA;                    $ExcelInstance.EnableEvents = $false;&amp;#xA;                    $ExcelWorkbookInstance.SaveAs($ExcelPath, $saveformat, $ReadPassword_com, $WritePassword_com);&amp;#xA;                    $ExcelInstance.DisplayAlerts = $true;&amp;#xA;                    $ExcelInstance.EnableEvents = $true;  &amp;#xA;                }&amp;#xA;            }&amp;#xA;            else&amp;#xA;            {         &amp;#xA;                if(-not [string]::IsNullOrEmpty($ReadPassword))&amp;#xA;                {     &amp;#xA;                    $ExcelInstance.Encryption.Password = $ReadPassword;&amp;#xA;                } &amp;#xA;                elseif(-not [string]::IsNullOrEmpty($WritePassword))&amp;#xA;                {     &amp;#xA;                    $ExcelInstance.Encryption.Password = $WritePassword;&amp;#xA;                }&amp;#xA;                $ExcelInstance.SaveAs($ExcelPath);&amp;#xA;            } &amp;#xA;        }&amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_);&amp;#xA;        return;&amp;#xA;    }                                                                    &amp;#xA;    $__Error.Quit();&amp;#xA;}                   &amp;#xA;                " TextColor="#FF000000" ProtoName="" Language="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF006838&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF006838&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="8"&gt;&lt;Property Name="ExcelInstance" Tooltip="[Ссылка] Ссылка на процесс обработки Excel-документа. Название переменной в данном свойстве должно совпадать с названием переменной в свойстве &amp;quot;Ссылка на Excel&amp;quot;, блоков &amp;quot;Создать документ&amp;quot; или &amp;quot;Открыть документ&amp;quot; из группы Excel, которые ранее использовались для создания или открытия данного документа" CatalogName="Required" Type="Variable" Value="$Excel2" Visible="True" DefaultValue="" ValueType="ExcelInstance" EnumVariants="{x:Null}" Caption="Ссылка на Excel" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="ExcelWorkbookInstance" Tooltip="[Ссылка] Ссылка на документ, который необходимо сохранить. Название переменной в данном свойстве должно совпадать с названием переменной в свойстве &amp;quot;Ссылка на документ&amp;quot;, блоков &amp;quot;Создать документ&amp;quot; или &amp;quot;Открыть документ&amp;quot; из группы Excel, которые ранее использовались для создания или открытия данного документа" CatalogName="Required" Type="Variable" Value="$ExcelWorkbook2" Visible="True" DefaultValue="" ValueType="ExcelWorkbookInstance" EnumVariants="{x:Null}" Caption="Ссылка на документ" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="Path" Tooltip="[Текст] Путь к Excel-документу. Внимание! Чтобы сохранить документ в тот же файл оставьте значение пустым. Иначе введите новый путь к файлу. Если указанный файл существует, то он будет перезаписан. Доступные форматы: &amp;quot;.xlsx&amp;quot;, &amp;quot;.xlsm&amp;quot;, &amp;quot;.xls&amp;quot;, &amp;quot;.csv&amp;quot;, &amp;quot;.pdf&amp;quot;, &amp;quot;.xml&amp;quot;" CatalogName="Main properties" Type="Expression" Value="&amp;quot;массивЦен.xlsx&amp;quot;" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="{x:Null}" Caption="Путь к файлу" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReadPassword" Tooltip="[Текст/SecureString] Укажите пароль для чтения документа" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text/SecureString" EnumVariants="" Caption="Пароль для чтения" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="WritePassword" Tooltip="[Текст/SecureString] Укажите пароль для записи документа" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text/SecureString" EnumVariants="" Caption="Пароль для записи" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="{x:Null}" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="{x:Null}" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="{x:Null}" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>1310</Left>
      <Top>2620</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>e5fab86e-246f-449d-bafc-518bbca9f20b</ID>
      <zIndex>11</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Записать значение в ячейку" InternalName="SetExcelCellValue" FriendlyName="Записать значение в ячейку Excel-документа" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\Excel.ico" PathToToolboxImage="{x:Null}" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="177" Code="&amp;#xA;function SetExcelCellValue{{{block_id}}}&amp;#xA;{   &amp;#xA; try&amp;#xA; {&amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;    $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);&amp;#xA;                         &amp;#xA;    $Worksheet = {{{Worksheet}}};&amp;#xA;    $Row       = {{{Row}}};&amp;#xA;    $Col       = {{{Col}}};&amp;#xA;    $Cell      = {{{Cell}}};&amp;#xA;    $Value     = {{{Value}}};&amp;#xA;    $TypeValue = &amp;quot;{{{TypeValue}}}&amp;quot;;&amp;#xA;    &amp;#xA;        if($Cell.Length -gt 0)&amp;#xA;        {&amp;#xA;            if($Cell.StartsWith(&amp;quot;R&amp;quot;) -and $Cell.Contains(&amp;quot;C&amp;quot;))&amp;#xA;            {&amp;#xA;                $Cell = $Cell.TrimStart(&amp;quot;R&amp;quot;);&amp;#xA;                $CellArr = $Cell.Split(&amp;quot;C&amp;quot;);&amp;#xA;                $Row = [int]$CellArr[0];&amp;#xA;                $Col = [int]$CellArr[1];&amp;#xA;            }&amp;#xA;            else&amp;#xA;            {&amp;#xA;                $Row     = [int]($Cell -replace &amp;quot;[^0-9]&amp;quot; , '');&amp;#xA;                $nameCol = $Cell -replace $Row.ToString() , '';&amp;#xA;                $Col     = 0;&amp;#xA;                $pow     = 1;&amp;#xA;                for ($i = $nameCol.Length - 1; $i -ge 0; $i--)&amp;#xA;                {&amp;#xA;                    $Col += ($nameCol[$i] - 65 + 1) * $pow;&amp;#xA;                    $pow *= 26;&amp;#xA;                }  &amp;#xA;            }&amp;#xA;        } &amp;#xA;           &amp;#xA;        if([string]::IsNullOrEmpty($Value)) { $Value = &amp;quot;&amp;quot;; }&amp;#xA;              &amp;#xA;        if($TypeValue -eq &amp;quot;Number&amp;quot;)&amp;#xA;        {                         &amp;#xA;            $value_str  = $Value.ToString();&amp;#xA;            $writeValue = [float]::Parse($value_str.Replace(&amp;quot;,&amp;quot;, &amp;quot;.&amp;quot;), [CultureInfo]::InvariantCulture);&amp;#xA;        }&amp;#xA;        elseif($TypeValue -eq &amp;quot;Money&amp;quot;)&amp;#xA;        {         &amp;#xA;            $value_str  = $Value.ToString();&amp;#xA;            $valmoney   = [decimal]::Parse($value_str.Replace(&amp;quot;,&amp;quot;, &amp;quot;.&amp;quot;), [CultureInfo]::InvariantCulture);&amp;#xA;            $writeValue = [decimal][Math]::Round($valmoney, 2);&amp;#xA;        } &amp;#xA;        elseif($TypeValue -eq &amp;quot;Text&amp;quot;) &amp;#xA;        {&amp;#xA;            $writeValue = $Value.ToString();&amp;#xA;        }  &amp;#xA;        else&amp;#xA;        {&amp;#xA;            $writeValue = $Value;&amp;#xA;        }&amp;#xA;           &amp;#xA;        $numtemp = 0;&amp;#xA;        if([int]::TryParse($Worksheet, [ref] $numtemp))&amp;#xA;        {&amp;#xA;            $worksheetvalue = $numtemp;&amp;#xA;        }&amp;#xA;        else&amp;#xA;        {&amp;#xA;            $worksheetvalue = $Worksheet;&amp;#xA;        }&amp;#xA;          &amp;#xA;        &amp;#xA;        $typename = {{{ExcelWorkbookInstance}}}.GetType().Name;&amp;#xA;        if($typename -ne &amp;quot;ExcelWorkbook&amp;quot;)&amp;#xA;        {      &amp;#xA;            $worksheetobj = {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue);&amp;#xA;            if($TypeValue -eq &amp;quot;Image&amp;quot;)&amp;#xA;            {        &amp;#xA;                $range = $worksheetobj.cells.item($Row,$Col);&amp;#xA;                $Left = [float]$range.Left;&amp;#xA;                $Top = [float]$range.Top;&amp;#xA;                $worksheetobj.Shapes.AddPicture($writeValue, [Microsoft.Office.Core.MsoTriState]::msoFalse, [Microsoft.Office.Core.MsoTriState]::msoCTrue, $Left, $Top, -1, -1);&amp;#xA;            } &amp;#xA;            else&amp;#xA;            {&amp;#xA;                if($TypeValue -eq &amp;quot;Text&amp;quot;)&amp;#xA;                {   &amp;#xA;                    $isformula = $false; &amp;#xA;                    if($writeValue.Length -gt 0)&amp;#xA;                    {&amp;#xA;                        if($writeValue[0] -eq &amp;quot;=&amp;quot;) { $isformula=$true; }&amp;#xA;                    } &amp;#xA;                    if(!$isformula) { try { $worksheetobj.cells.item($Row,$Col).NumberFormat = &amp;quot;@&amp;quot;; } catch{} }&amp;#xA;                }&amp;#xA;                $worksheetobj.cells.item($Row,$Col) = $writeValue;&amp;#xA;            }&amp;#xA;        }&amp;#xA;        else&amp;#xA;        {    &amp;#xA;            if($numtemp -gt 0) { $worksheetvalue-- ; }&amp;#xA;            $worksheetobj = {{{ExcelWorkbookInstance}}}.Worksheets[$worksheetvalue];&amp;#xA;            if($TypeValue -eq &amp;quot;Image&amp;quot;)&amp;#xA;            {&amp;#xA;                $image = [System.Drawing.Image]::FromFile($writeValue);&amp;#xA;                $excelImage = $worksheetobj.Drawings.AddPicture(&amp;quot;My image&amp;quot;, $image);&amp;#xA;                $excelImage.SetPosition($Row-1, 0, $Col-1, 0);&amp;#xA;            }&amp;#xA;            else&amp;#xA;            {&amp;#xA;                $isformula = $false;            &amp;#xA;                if($writeValue.GetType().Name -eq &amp;quot;String&amp;quot;)&amp;#xA;                {&amp;#xA;                    if($writeValue.Length -gt 0)&amp;#xA;                    {&amp;#xA;                        if($writeValue[0] -eq &amp;quot;=&amp;quot;) { $isformula=$true; }&amp;#xA;                    }    &amp;#xA;                }&amp;#xA;&amp;#xA;                if($isformula)&amp;#xA;                {&amp;#xA;                    $writeValue = $writeValue.TrimStart(&amp;quot;=&amp;quot;);&amp;#xA;                    $worksheetobj.Cells[$Row,$Col].Formula = $writeValue;&amp;#xA;                }&amp;#xA;                else &amp;#xA;                {       &amp;#xA;                    $worksheetobj.Cells[$Row,$Col].Value = $writeValue;&amp;#xA;                }            &amp;#xA;            }&amp;#xA;        }&amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_);&amp;#xA;        return;&amp;#xA;    }                                                                                                                    &amp;#xA;    $__Error.Quit();&amp;#xA;}                   &amp;#xA;                " TextColor="#FF000000" ProtoName="" Language="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF006838&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF006838&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="16"&gt;&lt;Property Name="ExcelWorkbookInstance" Tooltip="[Ссылка] Ссылка на документ, с которым в данный момент происходит работа. Название переменной в данном свойстве должно совпадать с названием переменной в свойстве &amp;quot;Ссылка на документ&amp;quot;, блоков &amp;quot;Создать документ&amp;quot; или &amp;quot;Открыть документ&amp;quot; из группы Excel, которые ранее использовались для создания или открытия данного документа" CatalogName="Required" Type="Variable" Value="$ExcelWorkbook2" Visible="True" DefaultValue="" ValueType="ExcelWorkbookInstance" EnumVariants="{x:Null}" Caption="Ссылка на документ" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="Worksheet" Tooltip="[Число/Текст] ID(порядковый номер) или название листа, на котором расположена требуемая ячейка. Нумерация начинается с 1" CatalogName="Required" Type="Expression" Value="1" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number/Text" EnumVariants="{x:Null}" Caption="Лист" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="Row" Tooltip="[Число] Номер строки, на которой расположена требуемая ячейка. Нумерация начинается с 1" CatalogName="Required" Type="Expression" Value="1" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="{x:Null}" Caption="Строка" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="Col" Tooltip="[Число] Номер столбца, в котором расположена требуемая ячейка. Нумерация начинается с 1" CatalogName="Required" Type="Expression" Value="1" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="{x:Null}" Caption="Столбец" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="Cell" Tooltip="[Текст] Имя ячейки. Если значение задано, то игнорируются свойства &amp;quot;Строка&amp;quot; и &amp;quot;Столбец&amp;quot;. Например: &amp;quot;B4&amp;quot;" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="" Caption="Имя ячейки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Value" Tooltip="[Текст/Число] Константа, переменная или результат вычислений, которые необходимо записать в требуемую ячейку. Для записи формулы в ячейку начинайте ее писать со знака равно, например: &amp;quot;=SUM(A2:A10)&amp;quot;" CatalogName="Required" Type="Expression" Value="$Table.Колонка1[0]" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text/Number" EnumVariants="{x:Null}" Caption="Значение" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="TypeValue" Tooltip="Тип записываемого значения. Возможные варианты: Any - запись без преобразования; Text - значение запсиывается как текст; Number - значение записывается как число; Money - значение записывается как денежный тип (происходит округление до 2 знака после запятой); Image - изображение (в свойстве &amp;quot;Значение&amp;quot; указывается полный путь к изображению на диске)" CatalogName="Main properties" Type="Enum" Value="Any" Visible="True" DefaultValue="" ValueType="" EnumVariants="Any;Text;Number;Money;Image" Caption="Тип значения" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FFE6E6FA" Caption="{x:Null}" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FFE6E6FA" Caption="{x:Null}" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FFE6E6FA" Caption="{x:Null}" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>660</Left>
      <Top>2465</Top>
      <Width>150</Width>
      <Height>150</Height>
      <ID>345e1a23-4489-4a43-9f9a-cf909ba90e83</ID>
      <zIndex>46</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Цикл Для каждого (Таблица Данных)" InternalName="ForeachRows" FriendlyName="Циклично перебираются все строки Таблицы Данных, которые выводятся в отдельный коннектор. После перебора всех строк таблицы выполнение сценария продолжается в сторону нижнего выхода блока. Не забудьте соединить выход последнего блока в теле цикла со входом данного блока" Width="150" Height="150" PathToImage="ExternalToolboxes\Image\icotb_Foreach datatable simple.png" PathToToolboxImage="ExternalToolboxes\Image\icotb_Foreach datatable.png" ImageType="TopImageDock" NoDelete="False" Invisible="False" Proportional="True" Version="15" Code="&amp;#xA;function ForeachRows{{{block_id}}}&amp;#xA;{     &amp;#xA;    try&amp;#xA;    {&amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;    $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);&amp;#xA;    &amp;#xA;        if($script:__FuncIndex -gt $script:__LastFuncIndex) &amp;#xA;        { &amp;#xA;            $script:__Index{{{block_id}}} = 0; &amp;#xA;        }&amp;#xA;             &amp;#xA;        if ($script:__Index{{{block_id}}} -lt {{{Table}}}.Rows.Count)&amp;#xA;        {       &amp;#xA;            {{{Row}}} = {{{Table}}}.Rows[$script:__Index{{{block_id}}}];  &amp;#xA;            {{{RowIndex}}} = $script:__Index{{{block_id}}};&amp;#xA;                       &amp;#xA;            $script:__Index{{{block_id}}} = $script:__Index{{{block_id}}} + 1;&amp;#xA;                         &amp;#xA;            $__Error.Jump(&amp;quot;{{{connector-Row}}}&amp;quot;);&amp;#xA;            return;&amp;#xA;        }  &amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_);&amp;#xA;        return;&amp;#xA;    }&amp;#xA;    $script:__Index{{{block_id}}} = 0;&amp;#xA;    $__Error.Quit();&amp;#xA;}&amp;#xA;" TextColor="#FF000000" ProtoName="" Language="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,10L20,0 40,10 20,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,10L20,0 40,10 20,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="8"&gt;&lt;Property Name="Table" Tooltip="[Таблица Данных] Таблица данных, в которой перебираются строки" CatalogName="Required" Type="Variable" Value="$Table" Visible="True" DefaultValue="" ValueType="DataTable" EnumVariants="" Caption="Таблица" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="Row" Tooltip="[Ссылка] Возвращается ссылка на строку" CatalogName="Output" Type="Variable" Value="$Row" Visible="True" DefaultValue="" ValueType="Reference" EnumVariants="" Caption="Строка" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="RowIndex" Tooltip="[Число] Порядковый номер строки. Нумерация начинается с нуля" CatalogName="Output" Type="Variable" Value="$RowIndex" Visible="True" DefaultValue="" ValueType="Number" EnumVariants="" Caption="Индекс строки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorDirection" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Right&amp;quot; - направо; &amp;quot;Bottom&amp;quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &amp;quot;Если ошибка&amp;quot; (например блок &amp;quot;Условие&amp;quot;). Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Right;Bottom" Caption="Направление выхода" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Row" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FF008000" Caption="Строка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>435</Left>
      <Top>2945</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>b17a85b5-2836-4f6b-96d9-5385833ef303</ID>
      <zIndex>24</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Записать значение в ячейку" InternalName="SetExcelCellValue" FriendlyName="Записать значение в ячейку Excel-документа" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\Excel.ico" PathToToolboxImage="{x:Null}" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="177" Code="&amp;#xA;function SetExcelCellValue{{{block_id}}}&amp;#xA;{   &amp;#xA; try&amp;#xA; {&amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;    $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);&amp;#xA;                         &amp;#xA;    $Worksheet = {{{Worksheet}}};&amp;#xA;    $Row       = {{{Row}}};&amp;#xA;    $Col       = {{{Col}}};&amp;#xA;    $Cell      = {{{Cell}}};&amp;#xA;    $Value     = {{{Value}}};&amp;#xA;    $TypeValue = &amp;quot;{{{TypeValue}}}&amp;quot;;&amp;#xA;    &amp;#xA;        if($Cell.Length -gt 0)&amp;#xA;        {&amp;#xA;            if($Cell.StartsWith(&amp;quot;R&amp;quot;) -and $Cell.Contains(&amp;quot;C&amp;quot;))&amp;#xA;            {&amp;#xA;                $Cell = $Cell.TrimStart(&amp;quot;R&amp;quot;);&amp;#xA;                $CellArr = $Cell.Split(&amp;quot;C&amp;quot;);&amp;#xA;                $Row = [int]$CellArr[0];&amp;#xA;                $Col = [int]$CellArr[1];&amp;#xA;            }&amp;#xA;            else&amp;#xA;            {&amp;#xA;                $Row     = [int]($Cell -replace &amp;quot;[^0-9]&amp;quot; , '');&amp;#xA;                $nameCol = $Cell -replace $Row.ToString() , '';&amp;#xA;                $Col     = 0;&amp;#xA;                $pow     = 1;&amp;#xA;                for ($i = $nameCol.Length - 1; $i -ge 0; $i--)&amp;#xA;                {&amp;#xA;                    $Col += ($nameCol[$i] - 65 + 1) * $pow;&amp;#xA;                    $pow *= 26;&amp;#xA;                }  &amp;#xA;            }&amp;#xA;        } &amp;#xA;           &amp;#xA;        if([string]::IsNullOrEmpty($Value)) { $Value = &amp;quot;&amp;quot;; }&amp;#xA;              &amp;#xA;        if($TypeValue -eq &amp;quot;Number&amp;quot;)&amp;#xA;        {                         &amp;#xA;            $value_str  = $Value.ToString();&amp;#xA;            $writeValue = [float]::Parse($value_str.Replace(&amp;quot;,&amp;quot;, &amp;quot;.&amp;quot;), [CultureInfo]::InvariantCulture);&amp;#xA;        }&amp;#xA;        elseif($TypeValue -eq &amp;quot;Money&amp;quot;)&amp;#xA;        {         &amp;#xA;            $value_str  = $Value.ToString();&amp;#xA;            $valmoney   = [decimal]::Parse($value_str.Replace(&amp;quot;,&amp;quot;, &amp;quot;.&amp;quot;), [CultureInfo]::InvariantCulture);&amp;#xA;            $writeValue = [decimal][Math]::Round($valmoney, 2);&amp;#xA;        } &amp;#xA;        elseif($TypeValue -eq &amp;quot;Text&amp;quot;) &amp;#xA;        {&amp;#xA;            $writeValue = $Value.ToString();&amp;#xA;        }  &amp;#xA;        else&amp;#xA;        {&amp;#xA;            $writeValue = $Value;&amp;#xA;        }&amp;#xA;           &amp;#xA;        $numtemp = 0;&amp;#xA;        if([int]::TryParse($Worksheet, [ref] $numtemp))&amp;#xA;        {&amp;#xA;            $worksheetvalue = $numtemp;&amp;#xA;        }&amp;#xA;        else&amp;#xA;        {&amp;#xA;            $worksheetvalue = $Worksheet;&amp;#xA;        }&amp;#xA;          &amp;#xA;        &amp;#xA;        $typename = {{{ExcelWorkbookInstance}}}.GetType().Name;&amp;#xA;        if($typename -ne &amp;quot;ExcelWorkbook&amp;quot;)&amp;#xA;        {      &amp;#xA;            $worksheetobj = {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue);&amp;#xA;            if($TypeValue -eq &amp;quot;Image&amp;quot;)&amp;#xA;            {        &amp;#xA;                $range = $worksheetobj.cells.item($Row,$Col);&amp;#xA;                $Left = [float]$range.Left;&amp;#xA;                $Top = [float]$range.Top;&amp;#xA;                $worksheetobj.Shapes.AddPicture($writeValue, [Microsoft.Office.Core.MsoTriState]::msoFalse, [Microsoft.Office.Core.MsoTriState]::msoCTrue, $Left, $Top, -1, -1);&amp;#xA;            } &amp;#xA;            else&amp;#xA;            {&amp;#xA;                if($TypeValue -eq &amp;quot;Text&amp;quot;)&amp;#xA;                {   &amp;#xA;                    $isformula = $false; &amp;#xA;                    if($writeValue.Length -gt 0)&amp;#xA;                    {&amp;#xA;                        if($writeValue[0] -eq &amp;quot;=&amp;quot;) { $isformula=$true; }&amp;#xA;                    } &amp;#xA;                    if(!$isformula) { try { $worksheetobj.cells.item($Row,$Col).NumberFormat = &amp;quot;@&amp;quot;; } catch{} }&amp;#xA;                }&amp;#xA;                $worksheetobj.cells.item($Row,$Col) = $writeValue;&amp;#xA;            }&amp;#xA;        }&amp;#xA;        else&amp;#xA;        {    &amp;#xA;            if($numtemp -gt 0) { $worksheetvalue-- ; }&amp;#xA;            $worksheetobj = {{{ExcelWorkbookInstance}}}.Worksheets[$worksheetvalue];&amp;#xA;            if($TypeValue -eq &amp;quot;Image&amp;quot;)&amp;#xA;            {&amp;#xA;                $image = [System.Drawing.Image]::FromFile($writeValue);&amp;#xA;                $excelImage = $worksheetobj.Drawings.AddPicture(&amp;quot;My image&amp;quot;, $image);&amp;#xA;                $excelImage.SetPosition($Row-1, 0, $Col-1, 0);&amp;#xA;            }&amp;#xA;            else&amp;#xA;            {&amp;#xA;                $isformula = $false;            &amp;#xA;                if($writeValue.GetType().Name -eq &amp;quot;String&amp;quot;)&amp;#xA;                {&amp;#xA;                    if($writeValue.Length -gt 0)&amp;#xA;                    {&amp;#xA;                        if($writeValue[0] -eq &amp;quot;=&amp;quot;) { $isformula=$true; }&amp;#xA;                    }    &amp;#xA;                }&amp;#xA;&amp;#xA;                if($isformula)&amp;#xA;                {&amp;#xA;                    $writeValue = $writeValue.TrimStart(&amp;quot;=&amp;quot;);&amp;#xA;                    $worksheetobj.Cells[$Row,$Col].Formula = $writeValue;&amp;#xA;                }&amp;#xA;                else &amp;#xA;                {       &amp;#xA;                    $worksheetobj.Cells[$Row,$Col].Value = $writeValue;&amp;#xA;                }            &amp;#xA;            }&amp;#xA;        }&amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_);&amp;#xA;        return;&amp;#xA;    }                                                                                                                    &amp;#xA;    $__Error.Quit();&amp;#xA;}                   &amp;#xA;                " TextColor="#FF000000" ProtoName="" Language="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF006838&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF006838&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="16"&gt;&lt;Property Name="ExcelWorkbookInstance" Tooltip="[Ссылка] Ссылка на документ, с которым в данный момент происходит работа. Название переменной в данном свойстве должно совпадать с названием переменной в свойстве &amp;quot;Ссылка на документ&amp;quot;, блоков &amp;quot;Создать документ&amp;quot; или &amp;quot;Открыть документ&amp;quot; из группы Excel, которые ранее использовались для создания или открытия данного документа" CatalogName="Required" Type="Variable" Value="$ExcelWorkbook1" Visible="True" DefaultValue="" ValueType="ExcelWorkbookInstance" EnumVariants="{x:Null}" Caption="Ссылка на документ" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="Worksheet" Tooltip="[Число/Текст] ID(порядковый номер) или название листа, на котором расположена требуемая ячейка. Нумерация начинается с 1" CatalogName="Required" Type="Expression" Value="2" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number/Text" EnumVariants="{x:Null}" Caption="Лист" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="Row" Tooltip="[Число] Номер строки, на которой расположена требуемая ячейка. Нумерация начинается с 1" CatalogName="Required" Type="Expression" Value="$Index+1" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="{x:Null}" Caption="Строка" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="Col" Tooltip="[Число] Номер столбца, в котором расположена требуемая ячейка. Нумерация начинается с 1" CatalogName="Required" Type="Expression" Value="1" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="{x:Null}" Caption="Столбец" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="Cell" Tooltip="[Текст] Имя ячейки. Если значение задано, то игнорируются свойства &amp;quot;Строка&amp;quot; и &amp;quot;Столбец&amp;quot;. Например: &amp;quot;B4&amp;quot;" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="" Caption="Имя ячейки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Value" Tooltip="[Текст/Число] Константа, переменная или результат вычислений, которые необходимо записать в требуемую ячейку. Для записи формулы в ячейку начинайте ее писать со знака равно, например: &amp;quot;=SUM(A2:A10)&amp;quot;" CatalogName="Required" Type="Expression" Value="$Table.Rows[$RowIndex][0]" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text/Number" EnumVariants="{x:Null}" Caption="Значение" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="TypeValue" Tooltip="Тип записываемого значения. Возможные варианты: Any - запись без преобразования; Text - значение запсиывается как текст; Number - значение записывается как число; Money - значение записывается как денежный тип (происходит округление до 2 знака после запятой); Image - изображение (в свойстве &amp;quot;Значение&amp;quot; указывается полный путь к изображению на диске)" CatalogName="Main properties" Type="Enum" Value="Any" Visible="True" DefaultValue="" ValueType="" EnumVariants="Any;Text;Number;Money;Image" Caption="Тип значения" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FFE6E6FA" Caption="{x:Null}" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FFE6E6FA" Caption="{x:Null}" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FFE6E6FA" Caption="{x:Null}" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>980</Left>
      <Top>2815</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>4be89181-f93e-4ead-94fa-33daeded53ed</ID>
      <zIndex>42</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Записать значение в ячейку" InternalName="SetExcelCellValue" FriendlyName="Записать значение в ячейку Excel-документа" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\Excel.ico" PathToToolboxImage="{x:Null}" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="177" Code="&amp;#xA;function SetExcelCellValue{{{block_id}}}&amp;#xA;{   &amp;#xA; try&amp;#xA; {&amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;    $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);&amp;#xA;                         &amp;#xA;    $Worksheet = {{{Worksheet}}};&amp;#xA;    $Row       = {{{Row}}};&amp;#xA;    $Col       = {{{Col}}};&amp;#xA;    $Cell      = {{{Cell}}};&amp;#xA;    $Value     = {{{Value}}};&amp;#xA;    $TypeValue = &amp;quot;{{{TypeValue}}}&amp;quot;;&amp;#xA;    &amp;#xA;        if($Cell.Length -gt 0)&amp;#xA;        {&amp;#xA;            if($Cell.StartsWith(&amp;quot;R&amp;quot;) -and $Cell.Contains(&amp;quot;C&amp;quot;))&amp;#xA;            {&amp;#xA;                $Cell = $Cell.TrimStart(&amp;quot;R&amp;quot;);&amp;#xA;                $CellArr = $Cell.Split(&amp;quot;C&amp;quot;);&amp;#xA;                $Row = [int]$CellArr[0];&amp;#xA;                $Col = [int]$CellArr[1];&amp;#xA;            }&amp;#xA;            else&amp;#xA;            {&amp;#xA;                $Row     = [int]($Cell -replace &amp;quot;[^0-9]&amp;quot; , '');&amp;#xA;                $nameCol = $Cell -replace $Row.ToString() , '';&amp;#xA;                $Col     = 0;&amp;#xA;                $pow     = 1;&amp;#xA;                for ($i = $nameCol.Length - 1; $i -ge 0; $i--)&amp;#xA;                {&amp;#xA;                    $Col += ($nameCol[$i] - 65 + 1) * $pow;&amp;#xA;                    $pow *= 26;&amp;#xA;                }  &amp;#xA;            }&amp;#xA;        } &amp;#xA;           &amp;#xA;        if([string]::IsNullOrEmpty($Value)) { $Value = &amp;quot;&amp;quot;; }&amp;#xA;              &amp;#xA;        if($TypeValue -eq &amp;quot;Number&amp;quot;)&amp;#xA;        {                         &amp;#xA;            $value_str  = $Value.ToString();&amp;#xA;            $writeValue = [float]::Parse($value_str.Replace(&amp;quot;,&amp;quot;, &amp;quot;.&amp;quot;), [CultureInfo]::InvariantCulture);&amp;#xA;        }&amp;#xA;        elseif($TypeValue -eq &amp;quot;Money&amp;quot;)&amp;#xA;        {         &amp;#xA;            $value_str  = $Value.ToString();&amp;#xA;            $valmoney   = [decimal]::Parse($value_str.Replace(&amp;quot;,&amp;quot;, &amp;quot;.&amp;quot;), [CultureInfo]::InvariantCulture);&amp;#xA;            $writeValue = [decimal][Math]::Round($valmoney, 2);&amp;#xA;        } &amp;#xA;        elseif($TypeValue -eq &amp;quot;Text&amp;quot;) &amp;#xA;        {&amp;#xA;            $writeValue = $Value.ToString();&amp;#xA;        }  &amp;#xA;        else&amp;#xA;        {&amp;#xA;            $writeValue = $Value;&amp;#xA;        }&amp;#xA;           &amp;#xA;        $numtemp = 0;&amp;#xA;        if([int]::TryParse($Worksheet, [ref] $numtemp))&amp;#xA;        {&amp;#xA;            $worksheetvalue = $numtemp;&amp;#xA;        }&amp;#xA;        else&amp;#xA;        {&amp;#xA;            $worksheetvalue = $Worksheet;&amp;#xA;        }&amp;#xA;          &amp;#xA;        &amp;#xA;        $typename = {{{ExcelWorkbookInstance}}}.GetType().Name;&amp;#xA;        if($typename -ne &amp;quot;ExcelWorkbook&amp;quot;)&amp;#xA;        {      &amp;#xA;            $worksheetobj = {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue);&amp;#xA;            if($TypeValue -eq &amp;quot;Image&amp;quot;)&amp;#xA;            {        &amp;#xA;                $range = $worksheetobj.cells.item($Row,$Col);&amp;#xA;                $Left = [float]$range.Left;&amp;#xA;                $Top = [float]$range.Top;&amp;#xA;                $worksheetobj.Shapes.AddPicture($writeValue, [Microsoft.Office.Core.MsoTriState]::msoFalse, [Microsoft.Office.Core.MsoTriState]::msoCTrue, $Left, $Top, -1, -1);&amp;#xA;            } &amp;#xA;            else&amp;#xA;            {&amp;#xA;                if($TypeValue -eq &amp;quot;Text&amp;quot;)&amp;#xA;                {   &amp;#xA;                    $isformula = $false; &amp;#xA;                    if($writeValue.Length -gt 0)&amp;#xA;                    {&amp;#xA;                        if($writeValue[0] -eq &amp;quot;=&amp;quot;) { $isformula=$true; }&amp;#xA;                    } &amp;#xA;                    if(!$isformula) { try { $worksheetobj.cells.item($Row,$Col).NumberFormat = &amp;quot;@&amp;quot;; } catch{} }&amp;#xA;                }&amp;#xA;                $worksheetobj.cells.item($Row,$Col) = $writeValue;&amp;#xA;            }&amp;#xA;        }&amp;#xA;        else&amp;#xA;        {    &amp;#xA;            if($numtemp -gt 0) { $worksheetvalue-- ; }&amp;#xA;            $worksheetobj = {{{ExcelWorkbookInstance}}}.Worksheets[$worksheetvalue];&amp;#xA;            if($TypeValue -eq &amp;quot;Image&amp;quot;)&amp;#xA;            {&amp;#xA;                $image = [System.Drawing.Image]::FromFile($writeValue);&amp;#xA;                $excelImage = $worksheetobj.Drawings.AddPicture(&amp;quot;My image&amp;quot;, $image);&amp;#xA;                $excelImage.SetPosition($Row-1, 0, $Col-1, 0);&amp;#xA;            }&amp;#xA;            else&amp;#xA;            {&amp;#xA;                $isformula = $false;            &amp;#xA;                if($writeValue.GetType().Name -eq &amp;quot;String&amp;quot;)&amp;#xA;                {&amp;#xA;                    if($writeValue.Length -gt 0)&amp;#xA;                    {&amp;#xA;                        if($writeValue[0] -eq &amp;quot;=&amp;quot;) { $isformula=$true; }&amp;#xA;                    }    &amp;#xA;                }&amp;#xA;&amp;#xA;                if($isformula)&amp;#xA;                {&amp;#xA;                    $writeValue = $writeValue.TrimStart(&amp;quot;=&amp;quot;);&amp;#xA;                    $worksheetobj.Cells[$Row,$Col].Formula = $writeValue;&amp;#xA;                }&amp;#xA;                else &amp;#xA;                {       &amp;#xA;                    $worksheetobj.Cells[$Row,$Col].Value = $writeValue;&amp;#xA;                }            &amp;#xA;            }&amp;#xA;        }&amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_);&amp;#xA;        return;&amp;#xA;    }                                                                                                                    &amp;#xA;    $__Error.Quit();&amp;#xA;}                   &amp;#xA;                " TextColor="#FF000000" ProtoName="" Language="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF006838&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF006838&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="16"&gt;&lt;Property Name="ExcelWorkbookInstance" Tooltip="[Ссылка] Ссылка на документ, с которым в данный момент происходит работа. Название переменной в данном свойстве должно совпадать с названием переменной в свойстве &amp;quot;Ссылка на документ&amp;quot;, блоков &amp;quot;Создать документ&amp;quot; или &amp;quot;Открыть документ&amp;quot; из группы Excel, которые ранее использовались для создания или открытия данного документа" CatalogName="Required" Type="Variable" Value="$ExcelWorkbook1" Visible="True" DefaultValue="" ValueType="ExcelWorkbookInstance" EnumVariants="{x:Null}" Caption="Ссылка на документ" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="Worksheet" Tooltip="[Число/Текст] ID(порядковый номер) или название листа, на котором расположена требуемая ячейка. Нумерация начинается с 1" CatalogName="Required" Type="Expression" Value="1" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number/Text" EnumVariants="{x:Null}" Caption="Лист" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="Row" Tooltip="[Число] Номер строки, на которой расположена требуемая ячейка. Нумерация начинается с 1" CatalogName="Required" Type="Expression" Value="$Index" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="{x:Null}" Caption="Строка" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="Col" Tooltip="[Число] Номер столбца, в котором расположена требуемая ячейка. Нумерация начинается с 1" CatalogName="Required" Type="Expression" Value="2" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="{x:Null}" Caption="Столбец" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="Cell" Tooltip="[Текст] Имя ячейки. Если значение задано, то игнорируются свойства &amp;quot;Строка&amp;quot; и &amp;quot;Столбец&amp;quot;. Например: &amp;quot;B4&amp;quot;" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="" Caption="Имя ячейки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Value" Tooltip="[Текст/Число] Константа, переменная или результат вычислений, которые необходимо записать в требуемую ячейку. Для записи формулы в ячейку начинайте ее писать со знака равно, например: &amp;quot;=SUM(A2:A10)&amp;quot;" CatalogName="Required" Type="Expression" Value="$Table.Rows[$RowIndex][1]" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text/Number" EnumVariants="{x:Null}" Caption="Значение" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="TypeValue" Tooltip="Тип записываемого значения. Возможные варианты: Any - запись без преобразования; Text - значение запсиывается как текст; Number - значение записывается как число; Money - значение записывается как денежный тип (происходит округление до 2 знака после запятой); Image - изображение (в свойстве &amp;quot;Значение&amp;quot; указывается полный путь к изображению на диске)" CatalogName="Main properties" Type="Enum" Value="Any" Visible="True" DefaultValue="" ValueType="" EnumVariants="Any;Text;Number;Money;Image" Caption="Тип значения" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FFE6E6FA" Caption="{x:Null}" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FFE6E6FA" Caption="{x:Null}" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FFE6E6FA" Caption="{x:Null}" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>640</Left>
      <Top>2780</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>cadfdb91-0d86-4326-b397-fc9febc95b86</ID>
      <zIndex>47</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Сохранить документ" InternalName="SaveExcelDocument" FriendlyName="Сохранить Excel-документ" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\Excel.ico" PathToToolboxImage="{x:Null}" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="97" Code="&amp;#xA;function SaveExcelDocument{{{block_id}}}&amp;#xA;{          &amp;#xA;    try&amp;#xA;    {&amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;    $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;); &amp;#xA;    &amp;#xA;    $ExcelPath     = {{{Path}}};  &amp;#xA;    $ReadPasswordObj  = {{{ReadPassword}}};&amp;#xA;    $WritePasswordObj = {{{WritePassword}}};&amp;#xA;    &amp;#xA;        $ExcelPath = ExpandConstFilePath $ExcelPath&amp;#xA;             &amp;#xA;        $ReadPassword = _checkpassword($ReadPasswordObj);&amp;#xA;        $WritePassword = _checkpassword($WritePasswordObj);  &amp;#xA;        &amp;#xA;        $ExcelInstance         = {{{ExcelInstance}}};&amp;#xA;        $ExcelWorkbookInstance = {{{ExcelWorkbookInstance}}};&amp;#xA;        if($null -eq $ExcelInstance) { $ExcelInstance = $ExcelWorkbookInstance.Application; }&amp;#xA;             &amp;#xA;        $typename = $ExcelWorkbookInstance.GetType().Name; &amp;#xA;            &amp;#xA;        if($ExcelPath.Length -eq 0)&amp;#xA;        {&amp;#xA;            if($typename -ne &amp;quot;ExcelWorkbook&amp;quot;)&amp;#xA;            {                                    &amp;#xA;                $ExcelInstance.DisplayAlerts = $false;&amp;#xA;                $ExcelInstance.EnableEvents = $false;&amp;#xA;                $ExcelWorkbookInstance.Save(); &amp;#xA;                $ExcelInstance.DisplayAlerts = $true;&amp;#xA;                $ExcelInstance.EnableEvents = $true;&amp;#xA;            }&amp;#xA;            else&amp;#xA;            {          &amp;#xA;                $ExcelInstance.Save();&amp;#xA;            }&amp;#xA;        }&amp;#xA;        else&amp;#xA;        {          &amp;#xA;            try { [System.IO.File]::Delete($ExcelPath); }&amp;#xA;            catch { }&amp;#xA;            &amp;#xA;            if($typename -ne &amp;quot;ExcelWorkbook&amp;quot;)&amp;#xA;            {                        &amp;#xA;                $ext = [System.IO.Path]::GetExtension($ExcelPath).ToLower(); &amp;#xA;                if($ext -eq &amp;quot;.pdf&amp;quot;)&amp;#xA;                {&amp;#xA;                    $ExcelWorkbookInstance.ExportAsFixedFormat([Microsoft.Office.Interop.Excel.XlFixedFormatType]::xlTypePDF, $ExcelPath, [Microsoft.Office.Interop.Excel.XlFixedFormatQuality]::xlQualityStandard, $false, $true);&amp;#xA;                }&amp;#xA;                else&amp;#xA;                {&amp;#xA;                    $saveformat = [Microsoft.Office.Interop.Excel.XlFileFormat]::xlOpenXMLWorkbook;&amp;#xA;                    if($ext -eq &amp;quot;.xlsm&amp;quot;) &amp;#xA;                    {&amp;#xA;                        $saveformat = [Microsoft.Office.Interop.Excel.XlFileFormat]::xlOpenXMLWorkbookMacroEnabled;&amp;#xA;                    } &amp;#xA;                    if($ext -eq &amp;quot;.xls&amp;quot;) &amp;#xA;                    {&amp;#xA;                        $saveformat = [Microsoft.Office.Interop.Excel.XlFileFormat]::xlExcel8;&amp;#xA;                    } &amp;#xA;                    if($ext -eq &amp;quot;.csv&amp;quot;) &amp;#xA;                    {&amp;#xA;                        $saveformat = [Microsoft.Office.Interop.Excel.XlFileFormat]::xlCSV;&amp;#xA;                    }&amp;#xA;                    if($ext -eq &amp;quot;.xml&amp;quot;) &amp;#xA;                    {&amp;#xA;                        $saveformat = [Microsoft.Office.Interop.Excel.XlFileFormat]::xlXMLSpreadsheet;&amp;#xA;                    }  &amp;#xA;                    &amp;#xA;                    if([string]::IsNullOrEmpty($ReadPassword))&amp;#xA;                    {&amp;#xA;                        $ReadPassword_com = [System.Reflection.Missing]::Value;&amp;#xA;                    } &amp;#xA;                    else&amp;#xA;                    {&amp;#xA;                        $ReadPassword_com = $ReadPassword;&amp;#xA;                    }&amp;#xA;                    if([string]::IsNullOrEmpty($WritePassword))&amp;#xA;                    {&amp;#xA;                        $WritePassword_com = [System.Reflection.Missing]::Value;&amp;#xA;                    } &amp;#xA;                    else&amp;#xA;                    {&amp;#xA;                        $WritePassword_com = $WritePassword;&amp;#xA;                    }&amp;#xA;                          &amp;#xA;                    $ExcelInstance.DisplayAlerts = $false;&amp;#xA;                    $ExcelInstance.EnableEvents = $false;&amp;#xA;                    $ExcelWorkbookInstance.SaveAs($ExcelPath, $saveformat, $ReadPassword_com, $WritePassword_com);&amp;#xA;                    $ExcelInstance.DisplayAlerts = $true;&amp;#xA;                    $ExcelInstance.EnableEvents = $true;  &amp;#xA;                }&amp;#xA;            }&amp;#xA;            else&amp;#xA;            {         &amp;#xA;                if(-not [string]::IsNullOrEmpty($ReadPassword))&amp;#xA;                {     &amp;#xA;                    $ExcelInstance.Encryption.Password = $ReadPassword;&amp;#xA;                } &amp;#xA;                elseif(-not [string]::IsNullOrEmpty($WritePassword))&amp;#xA;                {     &amp;#xA;                    $ExcelInstance.Encryption.Password = $WritePassword;&amp;#xA;                }&amp;#xA;                $ExcelInstance.SaveAs($ExcelPath);&amp;#xA;            } &amp;#xA;        }&amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_);&amp;#xA;        return;&amp;#xA;    }                                                                    &amp;#xA;    $__Error.Quit();&amp;#xA;}                   &amp;#xA;                " TextColor="#FF000000" ProtoName="" Language="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF006838&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF006838&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="8"&gt;&lt;Property Name="ExcelInstance" Tooltip="[Ссылка] Ссылка на процесс обработки Excel-документа. Название переменной в данном свойстве должно совпадать с названием переменной в свойстве &amp;quot;Ссылка на Excel&amp;quot;, блоков &amp;quot;Создать документ&amp;quot; или &amp;quot;Открыть документ&amp;quot; из группы Excel, которые ранее использовались для создания или открытия данного документа" CatalogName="Required" Type="Variable" Value="$Excel1" Visible="True" DefaultValue="" ValueType="ExcelInstance" EnumVariants="{x:Null}" Caption="Ссылка на Excel" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="ExcelWorkbookInstance" Tooltip="[Ссылка] Ссылка на документ, который необходимо сохранить. Название переменной в данном свойстве должно совпадать с названием переменной в свойстве &amp;quot;Ссылка на документ&amp;quot;, блоков &amp;quot;Создать документ&amp;quot; или &amp;quot;Открыть документ&amp;quot; из группы Excel, которые ранее использовались для создания или открытия данного документа" CatalogName="Required" Type="Variable" Value="$ExcelWorkbook1" Visible="True" DefaultValue="" ValueType="ExcelWorkbookInstance" EnumVariants="{x:Null}" Caption="Ссылка на документ" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="Path" Tooltip="[Текст] Путь к Excel-документу. Внимание! Чтобы сохранить документ в тот же файл оставьте значение пустым. Иначе введите новый путь к файлу. Если указанный файл существует, то он будет перезаписан. Доступные форматы: &amp;quot;.xlsx&amp;quot;, &amp;quot;.xlsm&amp;quot;, &amp;quot;.xls&amp;quot;, &amp;quot;.csv&amp;quot;, &amp;quot;.pdf&amp;quot;, &amp;quot;.xml&amp;quot;" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="{x:Null}" Caption="Путь к файлу" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReadPassword" Tooltip="[Текст/SecureString] Укажите пароль для чтения документа" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text/SecureString" EnumVariants="" Caption="Пароль для чтения" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="WritePassword" Tooltip="[Текст/SecureString] Укажите пароль для записи документа" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text/SecureString" EnumVariants="" Caption="Пароль для записи" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="{x:Null}" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="{x:Null}" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="{x:Null}" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>405</Left>
      <Top>2180</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>384d6035-4259-426f-ac8c-87f33c5299ae</ID>
      <zIndex>21</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Удалить лист" InternalName="DeleteWorksheet" FriendlyName="Удаляет лист в Excel-документе" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\Excel.ico" PathToToolboxImage="{x:Null}" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="18" Code="&amp;#xA;function DeleteWorksheet{{{block_id}}}&amp;#xA;{&amp;#xA; try&amp;#xA; {&amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;    $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);  &amp;#xA;         &amp;#xA;    $Worksheet = {{{Worksheet}}};&amp;#xA;    &amp;#xA;        $numtemp = 0;&amp;#xA;        if([int]::TryParse($Worksheet, [ref] $numtemp))&amp;#xA;        {&amp;#xA;            $worksheetvalue = $numtemp;&amp;#xA;        }&amp;#xA;        else&amp;#xA;        {&amp;#xA;            $worksheetvalue = $Worksheet;&amp;#xA;        }&amp;#xA;        &amp;#xA;        $typename = {{{ExcelWorkbookInstance}}}.GetType().Name;&amp;#xA;        if($typename -ne &amp;quot;ExcelWorkbook&amp;quot;)&amp;#xA;        {                               &amp;#xA;            {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue).Delete();&amp;#xA;        }&amp;#xA;        else&amp;#xA;        {      &amp;#xA;            if($numtemp -gt 0) { $worksheetvalue-- ; } &amp;#xA;            $worksheet = {{{ExcelWorkbookInstance}}}.Worksheets[$worksheetvalue];&amp;#xA;            {{{ExcelWorkbookInstance}}}.Worksheets.Delete($worksheet);&amp;#xA;        }&amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_);&amp;#xA;        return;&amp;#xA;    }                                                                                                                &amp;#xA;    $__Error.Quit();&amp;#xA;}                   &amp;#xA;                " TextColor="#FF000000" ProtoName="" Language="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF006838&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF006838&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="8"&gt;&lt;Property Name="ExcelWorkbookInstance" Tooltip="[Ссылка] Ссылка на документ, с которым в данный момент происходит работа. Название переменной в данном свойстве должно совпадать с названием переменной в свойстве &amp;quot;Ссылка на документ&amp;quot;, блоков &amp;quot;Создать документ&amp;quot; или &amp;quot;Открыть документ&amp;quot; из группы Excel, которые ранее использовались для создания или открытия данного документа" CatalogName="Required" Type="Variable" Value="$ExcelWorkbook1" Visible="True" DefaultValue="" ValueType="ExcelWorkbookInstance" EnumVariants="{x:Null}" Caption="Ссылка на документ" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="Worksheet" Tooltip="[Число/Текст] ID(порядковый номер) или название листа. Нумерация начинается с 1" CatalogName="Required" Type="Expression" Value="2" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number/Text" EnumVariants="{x:Null}" Caption="Лист" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FFE6E6FA" Caption="{x:Null}" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FFE6E6FA" Caption="{x:Null}" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FFE6E6FA" Caption="{x:Null}" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>405</Left>
      <Top>2305</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>9572b5e2-9bf2-4238-9487-5ec6ca4419bf</ID>
      <zIndex>20</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Добавить лист" InternalName="AddWorksheet" FriendlyName="Добавить лист в Excel-документ" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\Excel.ico" PathToToolboxImage="{x:Null}" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="37" Code="&amp;#xA;function AddWorksheet{{{block_id}}}&amp;#xA;{&amp;#xA; try&amp;#xA; {&amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;    $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);  &amp;#xA;            &amp;#xA;    $worksheetname = {{{WorksheetName}}};&amp;#xA;    &amp;#xA;        $typename = {{{ExcelWorkbookInstance}}}.GetType().Name;&amp;#xA;        if($typename -ne &amp;quot;ExcelWorkbook&amp;quot;)&amp;#xA;        {                               &amp;#xA;            $sheet = {{{ExcelWorkbookInstance}}}.WorkSheets.item({{{ExcelWorkbookInstance}}}.WorkSheets.Count);&amp;#xA;            {{{ExcelWorkbookInstance}}}.WorkSheets.Add([System.Reflection.Missing]::Value, $sheet);&amp;#xA;            {{{Worksheet}}} = {{{ExcelWorkbookInstance}}}.WorkSheets.Count; &amp;#xA;            {{{ExcelWorkbookInstance}}}.WorkSheets.item({{{Worksheet}}}).Name = $worksheetname;&amp;#xA;        }&amp;#xA;        else&amp;#xA;        {&amp;#xA;            {{{ExcelWorkbookInstance}}}.Worksheets.Add($worksheetname);&amp;#xA;            {{{Worksheet}}} = {{{ExcelWorkbookInstance}}}.Worksheets.Count;&amp;#xA;        }&amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_);&amp;#xA;        return;&amp;#xA;    }                                                                                                                &amp;#xA;    $__Error.Quit();&amp;#xA;}                   &amp;#xA;                " TextColor="#FF000000" ProtoName="" Language="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF006838&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF006838&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="8"&gt;&lt;Property Name="ExcelWorkbookInstance" Tooltip="[Ссылка] Ссылка на документ, с которым в данный момент происходит работа. Название переменной в данном свойстве должно совпадать с названием переменной в свойстве &amp;quot;Ссылка на документ&amp;quot;, блоков &amp;quot;Создать документ&amp;quot; или &amp;quot;Открыть документ&amp;quot; из группы Excel, которые ранее использовались для создания или открытия данного документа" CatalogName="Required" Type="Variable" Value="$ExcelWorkbook1" Visible="True" DefaultValue="" ValueType="ExcelWorkbookInstance" EnumVariants="{x:Null}" Caption="Ссылка на документ" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="WorksheetName" Tooltip="[Текст] Название листа, который необходимо добавить в Excel-документ" CatalogName="Required" Type="Expression" Value="&amp;quot;Лист2&amp;quot;" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="" Caption="Название листа" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="Worksheet" Tooltip="[Число] Возвращается индекс вставленного листа в Excel-документ" CatalogName="Output" Type="Variable" Value="$WorksheetIndex" Visible="True" DefaultValue="" ValueType="Number" EnumVariants="{x:Null}" Caption="Индекс листа" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FFE6E6FA" Caption="{x:Null}" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FFE6E6FA" Caption="{x:Null}" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FFE6E6FA" Caption="{x:Null}" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>980</Left>
      <Top>2565</Top>
      <Width>150</Width>
      <Height>150</Height>
      <ID>e0b9b634-e2ed-4af0-bff5-ed2e4e987103</ID>
      <zIndex>43</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Найти подстроку в тексте" InternalName="ContainsString" FriendlyName="Найти подстроку в тексте" Width="150" Height="150" PathToImage="ExternalToolboxes\Image\ico_Texts.png" PathToToolboxImage="{x:Null}" ImageType="NoImage" NoDelete="False" Invisible="False" Proportional="True" Version="162" Code="&amp;#xA;function ContainsString{{{block_id}}}&amp;#xA;{&amp;#xA;    try&amp;#xA;    {&amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;    $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);&amp;#xA;                     &amp;#xA;    $InString      = {{{InString}}};&amp;#xA;    $StartIndex    = {{{StartIndex}}};&amp;#xA;    $SubString     = {{{SubString}}}; &amp;#xA;    $WholeWord     = ${{{WholeWord}}};&amp;#xA;    $CheckType     = &amp;quot;{{{CheckType}}}&amp;quot;; &amp;#xA;    $ReverseCheck  = ${{{ReverseCheck}}}; &amp;#xA;    $UseWildcard   = ${{{UseWildcard}}};&amp;#xA;    $CaseSensitive = ${{{CaseSensitive}}};&amp;#xA;    &amp;#xA;        $str1 = $InString.ToString(); &amp;#xA;        if(!$CaseSensitive) { $str1 = $str1.ToLower(); }&amp;#xA;        &amp;#xA;        $liststr = New-Object Collections.Generic.List[string];&amp;#xA;        &amp;#xA;        $vartype = $SubString.GetType().Name;&amp;#xA;        &amp;#xA;        if($vartype.Contains(&amp;quot;List&amp;quot;) -or $vartype.Contains(&amp;quot;[]&amp;quot;))&amp;#xA;        {        &amp;#xA;            foreach($s in $SubString)&amp;#xA;            {       &amp;#xA;                $_str = $s.ToString();&amp;#xA;                if($_str.Length -gt 0) { $liststr.Add($_str); }&amp;#xA;            }&amp;#xA;        }&amp;#xA;        else&amp;#xA;        {&amp;#xA;            $_str = $SubString.ToString(); &amp;#xA;            if($_str.Length -gt 0) { $liststr.Add($_str); }&amp;#xA;        }  &amp;#xA;&amp;#xA;        $IncludeClosestOneIndex  = [int]::MaxValue;&amp;#xA;        $IncludeClosestOneString = &amp;quot;&amp;quot;;&amp;#xA;            &amp;#xA;        $countsuccess = 0;&amp;#xA;        $issuccess    = $true;        &amp;#xA;        if($UseWildcard)&amp;#xA;        {  &amp;#xA;            $cls = [MainHelpers.ClassWildcard]::new();&amp;#xA;            &amp;#xA;            foreach($ssstr2 in $liststr)&amp;#xA;            {           &amp;#xA;                $str2 = $ssstr2;&amp;#xA;                if(!$CaseSensitive) { $str2 = $str2.ToLower(); }&amp;#xA;                $result = $cls.IndexOf($str1, $str2, $StartIndex, $WholeWord, $ReverseCheck, $CaseSensitive);&amp;#xA;                          &amp;#xA;                {{{FindIndex}}} = $result.FindIndex; &amp;#xA;                {{{FindString}}} = $result.FindString; &amp;#xA;                &amp;#xA;                if($result.Success)&amp;#xA;                {            &amp;#xA;                    if($CheckType -eq &amp;quot;IncludeClosestOne&amp;quot;)&amp;#xA;                    {&amp;#xA;                        if($result.FindIndex -lt $IncludeClosestOneIndex)&amp;#xA;                        {&amp;#xA;                            $IncludeClosestOneIndex  = $result.FindIndex;&amp;#xA;                            $IncludeClosestOneString = $result.FindString;&amp;#xA;                        } &amp;#xA;                        continue;&amp;#xA;                    }&amp;#xA;                    &amp;#xA;                    $countsuccess++;&amp;#xA;                    if($CheckType -eq &amp;quot;IncludeOne&amp;quot;)&amp;#xA;                    {&amp;#xA;                        break;&amp;#xA;                    }&amp;#xA;                    if($CheckType -eq &amp;quot;Exclude&amp;quot;)&amp;#xA;                    {&amp;#xA;                        $issuccess = $false;&amp;#xA;                        break;&amp;#xA;                    }&amp;#xA;                }&amp;#xA;                else&amp;#xA;                {   &amp;#xA;                    if($CheckType -eq &amp;quot;ExcludeOne&amp;quot;)&amp;#xA;                    {&amp;#xA;                        break;&amp;#xA;                    }&amp;#xA;                    if($CheckType -eq &amp;quot;Include&amp;quot;)&amp;#xA;                    {&amp;#xA;                        $issuccess = $false;&amp;#xA;                        break;&amp;#xA;                    }&amp;#xA;                } &amp;#xA;            }&amp;#xA;        }&amp;#xA;        else&amp;#xA;        {      &amp;#xA;            $_stindex = 0;&amp;#xA;            [int]::TryParse([string]$StartIndex, [ref] $_stindex);&amp;#xA;            if($_stindex -gt $str1.Length) { $_stindex = $str1.Length - 1; }&amp;#xA;            foreach($ssstr2 in $liststr)&amp;#xA;            {           &amp;#xA;                $str2 = $ssstr2;&amp;#xA;                if(!$CaseSensitive) { $str2 = $str2.ToLower(); }&amp;#xA;                $result = $str1.IndexOf($str2, $_stindex);&amp;#xA;                          &amp;#xA;                {{{FindIndex}}} = $result; &amp;#xA;                {{{FindString}}} = $str2; &amp;#xA;                &amp;#xA;                if($result -ge 0)&amp;#xA;                {          &amp;#xA;                    if($CheckType -eq &amp;quot;IncludeClosestOne&amp;quot;)&amp;#xA;                    {&amp;#xA;                        if($result -lt $IncludeClosestOneIndex)&amp;#xA;                        {&amp;#xA;                            $IncludeClosestOneIndex  = $result;&amp;#xA;                            $IncludeClosestOneString = $str2;&amp;#xA;                        } &amp;#xA;                        continue;&amp;#xA;                    }&amp;#xA;                    &amp;#xA;                    $countsuccess++;&amp;#xA;                    if($CheckType -eq &amp;quot;IncludeOne&amp;quot;)&amp;#xA;                    {&amp;#xA;                        break;&amp;#xA;                    }&amp;#xA;                    if($CheckType -eq &amp;quot;Exclude&amp;quot;)&amp;#xA;                    {&amp;#xA;                        $issuccess = $false;&amp;#xA;                        break;&amp;#xA;                    }&amp;#xA;                }&amp;#xA;                else&amp;#xA;                {   &amp;#xA;                    if($CheckType -eq &amp;quot;ExcludeOne&amp;quot;)&amp;#xA;                    {&amp;#xA;                        break;&amp;#xA;                    }&amp;#xA;                    if($CheckType -eq &amp;quot;Include&amp;quot;)&amp;#xA;                    {&amp;#xA;                        $issuccess = $false;&amp;#xA;                        break;&amp;#xA;                    }&amp;#xA;                } &amp;#xA;            }&amp;#xA;        } &amp;#xA;              &amp;#xA;        if($CheckType -eq &amp;quot;IncludeOne&amp;quot; -and $countsuccess -eq 0)&amp;#xA;        {&amp;#xA;            $issuccess = $false;&amp;#xA;        } &amp;#xA;        &amp;#xA;        if($CheckType -eq &amp;quot;IncludeClosestOne&amp;quot;)&amp;#xA;        {&amp;#xA;            if($IncludeClosestOneIndex  -eq [int]::MaxValue) { $issuccess = $false; }&amp;#xA;            else&amp;#xA;            {&amp;#xA;                {{{FindIndex}}} = $IncludeClosestOneIndex; &amp;#xA;                {{{FindString}}} = $IncludeClosestOneString;&amp;#xA;            }&amp;#xA;        }&amp;#xA;        &amp;#xA;        $__Error.Detailed(&amp;quot;Status: $issuccess&amp;quot;);&amp;#xA;&amp;#xA;        if($issuccess)&amp;#xA;        {&amp;#xA;            $__Error.Jump(&amp;quot;{{{connector-Yes}}}&amp;quot;);&amp;#xA;            return;&amp;#xA;        }&amp;#xA;        else &amp;#xA;        {&amp;#xA;            $__Error.Jump(&amp;quot;{{{connector-No}}}&amp;quot;);&amp;#xA;            return;&amp;#xA;        }&amp;#xA;        &amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_);&amp;#xA;        return;&amp;#xA;    } &amp;#xA;    $__Error.Quit();&amp;#xA;}&amp;#xA;" TextColor="#FF000000" ProtoName="" Language="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFF9B24&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,10L20,0 40,10 20,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFF9B24&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,10L20,0 40,10 20,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="16"&gt;&lt;Property Name="InString" Tooltip="[Текст] Входная строка" CatalogName="Required" Type="Expression" Value="$Result" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="" Caption="Текст" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="SubString" Tooltip="[Текст/Список] Искомая подстрока или список подстрок. Можно задать массив с помощью команды @(&amp;quot;text1&amp;quot;,&amp;quot;mes&amp;quot;)" CatalogName="Main properties" Type="Expression" Value="$Table.Rows[$RowIndex][0]" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text/List" EnumVariants="" Caption="Подстрока" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="StartIndex" Tooltip="[Число] Начальная позиция поиска. Нумерация начинается с 0. " CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Индекс начала" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="WholeWord" Tooltip="При поиске будут учитываться границы слова. Например: при включенном свойстве значение &amp;quot;Value&amp;quot; будет найдено в тексте &amp;quot;This Value&amp;quot;, но не будет найдено в тексте &amp;quot;This ValueTest&amp;quot;. Если свойство будет выключено, то значение &amp;quot;Value&amp;quot; будет найдено в обоих примерах." CatalogName="Main properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Слово целиком" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="CheckType" Tooltip="Выбор типа проверки. Возможные значения: &amp;quot;Include&amp;quot; - все заданные подстроки должны присутствовать в строке; &amp;quot;Exclude&amp;quot; - все заданные подстроки не должны содержаться в строке; &amp;quot;IncludeOne&amp;quot; - если в тексте найдена хоть одна подстрока, то проверка успешна; &amp;quot;ExcludeOne&amp;quot; - если в тексте отсутсвует хоть одна подстрока, то проверка успешна; &amp;quot;IncludeClosestOne&amp;quot; - при указании списка значений проверка происходит по правилу &amp;quot;входит ближайший&amp;quot;" CatalogName="Main properties" Type="Enum" Value="Include" Visible="True" DefaultValue="" ValueType="" EnumVariants="Include;Exclude;IncludeOne;ExcludeOne;IncludeClosestOne" Caption="Тип проверки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReverseCheck" Tooltip="При проверке поменять местами входные значения &amp;quot;Текст&amp;quot; и &amp;quot;Подстрока&amp;quot;" CatalogName="Main properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Обратная проверка" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="UseWildcard" Tooltip="Если включено, то будет использоваться проверка с использованием метасимволов (Wildcard). Например: &amp;quot;test*&amp;quot;, &amp;quot;te?t&amp;quot;. Если свойство выключено, то проверка будет проводится простым способом и происходить быстрее" CatalogName="Main properties" Type="Bool" Value="True" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Расширенная проверка" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="CaseSensitive" Tooltip="Если свойство включено, то при проверке будет учитываться регистр символов, иначе он будет игнорироваться" CatalogName="Main properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Учитывать регистр" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="FindIndex" Tooltip="[Число] Возвращает индекс с отсчетом от нуля первого вхождения значения указанной строки" CatalogName="Output" Type="Variable" Value="$FoundIndex" Visible="True" DefaultValue="" ValueType="Number" EnumVariants="" Caption="Индекс строки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="FindString" Tooltip="[Текст] Возвращается значение найденной подстроки" CatalogName="Output" Type="Variable" Value="$FoundString" Visible="True" DefaultValue="" ValueType="Text" EnumVariants="" Caption="Найденная строка" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorDirection" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Right&amp;quot; - направо; &amp;quot;Bottom&amp;quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &amp;quot;Если ошибка&amp;quot; (например блок &amp;quot;Условие&amp;quot;). Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Right;Bottom" Caption="Направление выхода" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="No" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Нет" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Yes" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF008000" Caption="Да" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>640</Left>
      <Top>2665</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>963e13aa-6e6d-4a18-8743-053a0d609c29</ID>
      <zIndex>49</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Окно с сообщением" InternalName="MessageBox" FriendlyName="Показать пользователю модальное диалоговое окно с заданным заголовком, текстом и набором кнопок. Если используется окно с несколькими кнопками, блок позволяет записать в переменную текстовую константу, соответствующую нажатой пользователем кнопке." Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Dialogs.png" PathToToolboxImage="{x:Null}" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="67" Code="&amp;#xA;function MessageBox{{{block_id}}}&amp;#xA;{&amp;#xA;    try&amp;#xA;    {&amp;#xA;        $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;        $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);&amp;#xA;          &amp;#xA;        $Title       = {{{Title}}};&amp;#xA;        $Message     = {{{Message}}}; &amp;#xA;        $WaitTimeObj = {{{WaitTime}}}; &amp;#xA;        $WordWrap    = ${{{WordWrap}}};&amp;#xA;    &amp;#xA;        $form = [PSHelpers.ClassMessageBox]::new();&amp;#xA;       &amp;#xA;        try { $form.WaitTime = _toint($WaitTimeObj); }&amp;#xA;        catch{}  &amp;#xA;        try { $form.WordWrap = $WordWrap; }&amp;#xA;        catch{}&amp;#xA;        &amp;#xA;        $Message = VarToString($Message);&amp;#xA;        $result  = $form.Show($Title, $Message, &amp;quot;{{{Buttons}}}&amp;quot;, &amp;quot;{{{MessageImage}}}&amp;quot;);&amp;#xA;        if($result.IsError)&amp;#xA;        {           &amp;#xA;            $__Error.Exception($result.ErrorMessage);&amp;#xA;            return;&amp;#xA;        } &amp;#xA;           &amp;#xA;        {{{Result}}} = $result.Value;&amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_);&amp;#xA;        return;&amp;#xA;    }&amp;#xA;    $__Error.Quit();&amp;#xA;}                   &amp;#xA;                " TextColor="#FF000000" ProtoName="" Language="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF4870C1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF4870C1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="16"&gt;&lt;Property Name="Title" Tooltip="[Текст] Текст, значение переменной или результат вычислений, который будет отображен в заголовке диалогового окна" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="{x:Null}" Caption="Заголовок" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Message" Tooltip="[Текст] Текст, значение переменной или результат вычислений, который будет отображен  внутри диалогового окна" CatalogName="Required" Type="Expression" Value="$Table.Колонка1" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="{x:Null}" Caption="Сообщение" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="Buttons" Tooltip="Кнопки, которые будут доступны пользователю для нажатия" CatalogName="Main properties" Type="Enum" Value="OK" Visible="True" DefaultValue="" ValueType="" EnumVariants="OK;OKCancel;YesNo;YesNoCancel" Caption="Кнопки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="MessageImage" Tooltip="Изображение, которое будет отображаться в диалоговом окне" CatalogName="Main properties" Type="Enum" Value="None" Visible="True" DefaultValue="" ValueType="" EnumVariants="None;Error;Exclamation;Hand;Information;Question;Warning;Stop;Asterisk" Caption="Изображение" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="WaitTime" Tooltip="[Число] Время ожидания. Если задано значение больше нуля, то окно автоматически закроется через это время. В свойство &amp;quot;Результат&amp;quot; при этом будет записано первое значение из указанных в свойстве &amp;quot;Кнопки&amp;quot;." CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Время ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="WordWrap" Tooltip="Включается перенос строк" CatalogName="Main properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Перенос строк" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Result" Tooltip="[Текст] Переменная, в которую будет сохранено название кнопки, нажатой пользователем. Один из возможных результатов: OK, Cancel, Yes, No. Данные текстовые константы не зависят от языка робота или операционной системы" CatalogName="Output" Type="Variable" Value="$Result" Visible="True" DefaultValue="" ValueType="Text" EnumVariants="{x:Null}" Caption="Результат" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>1035</Left>
      <Top>1225</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>92983533-754d-4c7d-a304-3a305e1514a9</ID>
      <zIndex>53</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors>&lt;StorageSelector&gt;&lt;Selector&gt;&lt;Process Name="chrome" /&gt;&lt;CSSElement CSS="INPUT[name='text']" /&gt;&lt;/Selector&gt;&lt;ThumbImageID&gt;02e915db-59e1-4d3d-8826-e7d41c61f4b6&lt;/ThumbImageID&gt;&lt;Snapshot&gt;AAEAAAD/////AQAAAAAAAAAEAQAAAOIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuRGljdGlvbmFyeWAyW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQQAAAAHVmVyc2lvbghDb21wYXJlcghIYXNoU2l6ZQ1LZXlWYWx1ZVBhaXJzAAMAAwiSAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkdlbmVyaWNFcXVhbGl0eUNvbXBhcmVyYDFbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dCOYBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dW10OAAAACQIAAAARAAAACQMAAAAEAgAAAJIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuR2VuZXJpY0VxdWFsaXR5Q29tcGFyZXJgMVtbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0AAAAABwMAAAAAAQAAAA0AAAAD5AFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5LZXlWYWx1ZVBhaXJgMltbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0E/P///+QBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dAgAAAANrZXkFdmFsdWUBAQYFAAAAB3RhZ05hbWUGBgAAAAVJTlBVVAH5/////P///wYIAAAAC3NvdXJjZUluZGV4BgkAAAAEMTQzNQH2/////P///wYLAAAAC3BsYWNlaG9sZGVyBgwAAAAW0JjRgdC60LDRgtGMINC90LAgT3pvbgHz/////P///wYOAAAABHR5cGUGDwAAAAR0ZXh0AfD////8////BhEAAAAEbmFtZQYSAAAABHRleHQB7f////z///8GFAAAAA5hdXRvY2FwaXRhbGl6ZQYVAAAAA29mZgHq/////P///wYXAAAADGF1dG9jb21wbGV0ZQYYAAAAA29mZgHn/////P///wYaAAAAC2F1dG9jb3JyZWN0BhsAAAADb2ZmAeT////8////Bh0AAAAKc3BlbGxjaGVjawYeAAAABWZhbHNlAeH////8////BiAAAAAJbWF4bGVuZ3RoBiEAAAADMjU1Ad7////8////BiMAAAAFdmFsdWUGJAAAAJkB0J/QuNGB0YzQvNC10L3QvdGL0Lkg0YHRgtC+0Lsg0J/Qn9C40YHRjNC80LXQvdC90YvQuSDRgdGC0L7QuyDQpNCw0LHRgNC40LrQsCDQnNCY0KTQuNGB0YzQvNC10L3QvdGL0Lkg0YHRgtC+0Lsg0KTQsNCx0YDQuNC60LAg0JzQmNCk0KTQsNCx0YDQuNC60LAg0JzQmNCkAdv////8////BiYAAAAFY2xhc3MGJwAAABN5NHYgdHNCb2R5NTAwTWVkaXVtAdj////8////BikAAAAFc3R5bGUGKgAAAA1vcGFjaXR5OiAwLjk7Cw==&lt;/Snapshot&gt;&lt;Created&gt;26.09.2023 14:35:56&lt;/Created&gt;&lt;/StorageSelector&gt;</StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Задать текст" InternalName="SetUITextInternet" FriendlyName="Задать текст элементу веб-страницы (например, полю редактирования) или присвоить значение атрибуту элемента. В задачах эмуляции пользовательского ввода данный блок работает быстрее, чем блок Нажать клавиши, но в зависимости от типа веб-страницы и элемента управления может не приводить к желаемому результату. В таком случае используйте блок Нажать клавиши." Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Set Control Text.png" PathToToolboxImage="{x:Null}" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="61" Code="&amp;#xA;function SetUITextInternet{{{block_id}}}&amp;#xA;{&amp;#xA; try&amp;#xA; {&amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;    $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);  &amp;#xA;    &amp;#xA;    $UITextValueObj = {{{UITextValue}}};  &amp;#xA;    $UITextType  = &amp;quot;{{{UITextType}}}&amp;quot;;      &amp;#xA;    $ProcessID   = {{{ProcessID}}}; &amp;#xA;    $DelayAfter  = {{{DelayAfter}}}; &amp;#xA;    $DelayBefore = {{{DelayBefore}}}; &amp;#xA;    $WaitTime    = {{{WaitTime}}}; &amp;#xA;    $AttributeName = {{{AttributeName}}};&amp;#xA;    &amp;#xA;        Start-Sleep -Seconds $DelayBefore; &amp;#xA;                          &amp;#xA;        $UITextValue = _checkpassword($UITextValueObj);&amp;#xA;        &amp;#xA;        $val = _shield $UITextValue;&amp;#xA;        &amp;#xA;        $psresultstr = Read-Host(&amp;quot;&amp;lt;block&amp;gt;&amp;lt;ID&amp;gt;{{{block_native_id}}}&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;SetUIText&amp;lt;/InternalName&amp;gt;&amp;lt;ProcessID&amp;gt;$ProcessID&amp;lt;/ProcessID&amp;gt;&amp;lt;InternalType&amp;gt;Internet&amp;lt;/InternalType&amp;gt;&amp;lt;UITextType&amp;gt;$UITextType&amp;lt;/UITextType&amp;gt;&amp;lt;UITextValue&amp;gt;$val&amp;lt;/UITextValue&amp;gt;&amp;lt;WaitTime&amp;gt;$WaitTime&amp;lt;/WaitTime&amp;gt;&amp;lt;AutoScroll&amp;gt;{{{AutoScroll}}}&amp;lt;/AutoScroll&amp;gt;&amp;lt;AttributeName&amp;gt;$AttributeName&amp;lt;/AttributeName&amp;gt;{{{Selector}}}&amp;lt;/block&amp;gt;&amp;quot;);                     &amp;#xA;        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);&amp;#xA;        if($__Error.CheckResult($psResult)) { return; } &amp;#xA;        &amp;#xA;        Start-Sleep -Seconds $DelayAfter; &amp;#xA;    &amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_);&amp;#xA;        return;&amp;#xA;    }                                            &amp;#xA;    $__Error.Quit();&amp;#xA;}                   &amp;#xA;                " TextColor="#FFFFFFFF" ProtoName="" Language="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="16"&gt;&lt;Property Name="Selector" Tooltip="[Селектор] Идентификатор окна браузера и элемента веб-страницы" CatalogName="Main properties" Type="Selector" Value="&amp;lt;Selector&amp;gt;&amp;lt;Process Name=&amp;quot;chrome&amp;quot; /&amp;gt;&amp;lt;CSSElement CSS=&amp;quot;INPUT[name='text']&amp;quot; /&amp;gt;&amp;lt;/Selector&amp;gt;" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Selector" EnumVariants="{x:Null}" Caption="Селектор" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="UITextValue" Tooltip="[Текст] Текст или значение, которое необходимо задать элементу или его атрибуту" CatalogName="Required" Type="Expression" Value="&amp;quot;&amp;quot;" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="{x:Null}" Caption="Значение" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="UITextType" Tooltip="Выбор типа задаваемого значения" CatalogName="Main properties" Type="Enum" Value="Text" Visible="True" DefaultValue="" ValueType="" EnumVariants="Text;Class;InnerHtml;InnerText;Href;Attribute" Caption="Тип значения" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AttributeName" Tooltip="[Текст] Имя атрибута. Данное свойство используется при выборе типа значения &amp;quot;Attribute&amp;quot;" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="" Caption="Имя атрибута" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ProcessID" Tooltip="[Ссылка] Переменная, в которой хранится идентификатор процесса и вкладки браузера, используемые данным блоком. Если свойство оставить пустым, либо если переменная &amp;quot;ID процесса&amp;quot; не была ранее присвоена в момент открытия браузера, приложение и вкладка браузера будут определены из содержимого соответствующей строки селектора. ID процесса может быть получен, например, с помощью блоков Запустить IE, Запустить Chrome или Присоединиться к браузеру." CatalogName="Main properties" Type="Variable" Value="$ProcessID" Visible="True" DefaultValue="" ValueType="ProcessID" EnumVariants="" Caption="ID процесса" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="02e915db-59e1-4d3d-8826-e7d41c61f4b6" Visible="False" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="{x:Null}" Caption="ThumbImage" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayBefore" Tooltip="[Число] Задержка в секундах перед выполением блока" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Задержка перед" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayAfter" Tooltip="[Число] Задержка в секундах после выполения блока" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Задержка после" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="WaitTime" Tooltip="[Число] Предельное время ожидания заданного элемента в секундах" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="{x:Null}" Caption="Время ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AutoScroll" Tooltip="Если выбрано, то будет произведен автоматический скроллинг до элемента на странице" CatalogName="Main properties" Type="Bool" Value="True" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Автоскроллинг" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
  </DesignerItems>
  <Connections>
    <Connection>
      <SourceID>a49d986b-3034-4b63-bd72-11a826c70871</SourceID>
      <SinkID>1ede648b-67cf-4769-8b3d-c923a190829c</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>9</zIndex>
    </Connection>
    <Connection>
      <SourceID>ee8e6a55-3913-4787-a006-f567952dbce6</SourceID>
      <SinkID>b504dcd8-fa06-4684-a7ab-6ac5ee13bb7b</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>None</SinkArrowSymbol>
      <zIndex>32</zIndex>
    </Connection>
    <Connection>
      <SourceID>359adad0-3cbe-41ba-ad79-e9138a820d87</SourceID>
      <SinkID>1c696279-3e4c-4d70-8349-5da49c7fc6bd</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>29</zIndex>
    </Connection>
    <Connection>
      <SourceID>1c696279-3e4c-4d70-8349-5da49c7fc6bd</SourceID>
      <SinkID>ee8e6a55-3913-4787-a006-f567952dbce6</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>None</SinkArrowSymbol>
      <zIndex>30</zIndex>
    </Connection>
    <Connection>
      <SourceID>8a6541d8-8d37-4a15-89a6-9992cae07860</SourceID>
      <SinkID>b90cc89c-21a2-49da-b09d-e19855fee802</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>22</zIndex>
    </Connection>
    <Connection>
      <SourceID>b90cc89c-21a2-49da-b09d-e19855fee802</SourceID>
      <SinkID>fda7fb5c-9183-482b-887a-a964eda3c82e</SinkID>
      <SourceConnectorName>Index</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>25</zIndex>
    </Connection>
    <Connection>
      <SourceID>b90cc89c-21a2-49da-b09d-e19855fee802</SourceID>
      <SinkID>7e7bf4cc-3fd8-4690-9571-be6db54471bb</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>27</zIndex>
    </Connection>
    <Connection>
      <SourceID>7e7bf4cc-3fd8-4690-9571-be6db54471bb</SourceID>
      <SinkID>fe140166-acf3-47d0-877f-ffe794525b4a</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>None</SinkArrowSymbol>
      <zIndex>7</zIndex>
    </Connection>
    <Connection>
      <SourceID>fe140166-acf3-47d0-877f-ffe794525b4a</SourceID>
      <SinkID>789ed6d5-552b-4381-b379-eeeeb5bfd787</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>1</zIndex>
    </Connection>
    <Connection>
      <SourceID>789ed6d5-552b-4381-b379-eeeeb5bfd787</SourceID>
      <SinkID>c6d5c9c1-8be5-4695-b585-bdc6d7ab7ae7</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>3</zIndex>
    </Connection>
    <Connection>
      <SourceID>b504dcd8-fa06-4684-a7ab-6ac5ee13bb7b</SourceID>
      <SinkID>410e8157-9cc3-472a-bd43-5f7b6269f653</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>None</SinkArrowSymbol>
      <zIndex>34</zIndex>
    </Connection>
    <Connection>
      <SourceID>1ede648b-67cf-4769-8b3d-c923a190829c</SourceID>
      <SinkID>930c3587-e201-4552-a4b7-42c34c6270fb</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>15</zIndex>
    </Connection>
    <Connection>
      <SourceID>930c3587-e201-4552-a4b7-42c34c6270fb</SourceID>
      <SinkID>b90cc89c-21a2-49da-b09d-e19855fee802</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>16</zIndex>
    </Connection>
    <Connection>
      <SourceID>e5fab86e-246f-449d-bafc-518bbca9f20b</SourceID>
      <SinkID>a011275c-bf02-49bf-bb15-bb076730eacd</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>12</zIndex>
    </Connection>
    <Connection>
      <SourceID>4be89181-f93e-4ead-94fa-33daeded53ed</SourceID>
      <SinkID>345e1a23-4489-4a43-9f9a-cf909ba90e83</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>41</zIndex>
    </Connection>
    <Connection>
      <SourceID>384d6035-4259-426f-ac8c-87f33c5299ae</SourceID>
      <SinkID>9572b5e2-9bf2-4238-9487-5ec6ca4419bf</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>19</zIndex>
    </Connection>
    <Connection>
      <SourceID>345e1a23-4489-4a43-9f9a-cf909ba90e83</SourceID>
      <SinkID>e0b9b634-e2ed-4af0-bff5-ed2e4e987103</SinkID>
      <SourceConnectorName>Row</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>44</zIndex>
    </Connection>
    <Connection>
      <SourceID>e0b9b634-e2ed-4af0-bff5-ed2e4e987103</SourceID>
      <SinkID>345e1a23-4489-4a43-9f9a-cf909ba90e83</SinkID>
      <SourceConnectorName>No</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>39</zIndex>
    </Connection>
    <Connection>
      <SourceID>cadfdb91-0d86-4326-b397-fc9febc95b86</SourceID>
      <SinkID>b90cc89c-21a2-49da-b09d-e19855fee802</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>38</zIndex>
    </Connection>
    <Connection>
      <SourceID>e0b9b634-e2ed-4af0-bff5-ed2e4e987103</SourceID>
      <SinkID>4be89181-f93e-4ead-94fa-33daeded53ed</SinkID>
      <SourceConnectorName>Yes</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>40</zIndex>
    </Connection>
    <Connection>
      <SourceID>410e8157-9cc3-472a-bd43-5f7b6269f653</SourceID>
      <SinkID>345e1a23-4489-4a43-9f9a-cf909ba90e83</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>36</zIndex>
    </Connection>
    <Connection>
      <SourceID>345e1a23-4489-4a43-9f9a-cf909ba90e83</SourceID>
      <SinkID>963e13aa-6e6d-4a18-8743-053a0d609c29</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>InputLeft</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>45</zIndex>
    </Connection>
    <Connection>
      <SourceID>963e13aa-6e6d-4a18-8743-053a0d609c29</SourceID>
      <SinkID>cadfdb91-0d86-4326-b397-fc9febc95b86</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>48</zIndex>
    </Connection>
    <Connection>
      <SourceID>fda7fb5c-9183-482b-887a-a964eda3c82e</SourceID>
      <SinkID>92983533-754d-4c7d-a304-3a305e1514a9</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>None</SinkArrowSymbol>
      <zIndex>52</zIndex>
    </Connection>
    <Connection>
      <SourceID>92983533-754d-4c7d-a304-3a305e1514a9</SourceID>
      <SinkID>359adad0-3cbe-41ba-ad79-e9138a820d87</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>54</zIndex>
    </Connection>
  </Connections>
  <Properties />
</Root>